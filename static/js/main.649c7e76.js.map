{"version":3,"file":"static/js/main.649c7e76.js","mappings":"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","sources":["../node_modules/react/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/react-router/node_modules/cookie/src/index.ts","../node_modules/react-dom/client.js","../node_modules/react/jsx-runtime.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/react-dom/index.js","../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-router/dist/development/chunk-QMGIS6GS.mjs","components/layout/Header.js","components/layout/Sidebar.js","components/layout/ContentPanel.js","components/pages/About.js","data/hashing.js","config/appData.js","data/databaseDesignPrinciples.js","data/unixEpoch.js","data/acidProperties.js","data/baseProperties.js","data/mvcc.js","data/concurrencyControlProblems.js","data/optimisticVsPessimisticLocking.js","data/twoPhaseLocking.js","data/timestampingProtocol.js","data/localityOfReference.js","data/isolationLevels.js","data/deadlockDetectionPrevention.js","data/distributedTransactions.js","data/databaseSharding.js","data/databaseTypes.js","data/capTheorem.js","data/pacelcTheorem.js","data/distributedConsensus.js","data/paxosConsensus.js","data/raftConsensus.js","data/quorumConcepts.js","data/hintedHandoff.js","data/gossipProtocol.js","data/thunderingHerd.js","data/resourceStarvation.js","data/vectorClocks.js","data/merkleTree.js","data/bloomFilter.js","data/hyperLogLog.js","data/replication.js","data/consistentHashing.js","data/loadBalancer.js","data/consistentHashingVsLoadBalancing.js","data/activeActiveVsActivePassive.js","data/apiGateway.js","data/cdn.js","data/circuitBreaker.js","data/rateLimiting.js","data/caching.js","data/messageQueues.js","data/microservices.js","data/apiDesign.js","data/eventSourcing.js","data/applicationServer.js","data/verticalVsHorizontalScaling.js","data/elasticityVsScalability.js","data/partitioning.js","data/proxies.js","data/cloudComputing.js","data/authentication.js","data/authorization.js","data/jwt.js","data/oauth.js","data/oauth2.js","data/rbac.js","data/keyExchange.js","data/encryption.js","data/encryptionDecryption.js","data/ddos.js","data/networkProtocols.js","data/tcp.js","data/tcpVsUdp.js","data/osiModel.js","data/tcpIpModel.js","data/http.js","data/httpVsHttps.js","data/https.js","data/httpVersions.js","data/httpStatusCodes.js","data/httpHeaders.js","data/webSockets.js","data/dns.js","data/networking.js","data/cors.js","data/urlVsUriVsUrn.js","data/bgp.js","data/unicodeCharacters.js","data/serializationDeserialization.js","data/encodingDecoding.js","data/compressionDecompression.js","data/udp.js","data/containerization.js","data/docker.js","data/kubernetes.js","data/cicd.js","data/monitoring.js","data/logging.js","data/backup.js","data/recovery.js","data/failoverStrategies.js","data/serverless.js","data/edgeComputing.js","data/containers.js","data/tracing.js","data/monitoringObservability.js","data/retryPattern.js","data/dataStructures.js","data/algorithms.js","data/indexing.js","data/cacheStrategies.js","data/cacheEvictionPolicies.js","data/normalization.js","data/sql.js","data/nosql.js","data/softwareDesignPatterns.js","data/bulkhead.js","data/timeoutPattern.js","data/thunderingHerdProblem.js","data/eventStreaming.js","data/graphql.js","data/restApi.js","data/rateLimit.js","data/forwardProxy.js","data/reverseProxy.js","data/webServer.js","components/pages/AllTopics.js","utils/constants.js","utils/routerConfig.js","routes/HomeRoute.js","utils/helpers.js","routes/TopicRoute.js","App.js","hooks/useResponsive.js","hooks/useTheme.js","hooks/useSidebar.js","hooks/useNavigation.js","index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","/**\n * react-router v7.6.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n\n// lib/router/history.ts\nvar Action = /* @__PURE__ */ ((Action2) => {\n  Action2[\"Pop\"] = \"POP\";\n  Action2[\"Push\"] = \"PUSH\";\n  Action2[\"Replace\"] = \"REPLACE\";\n  return Action2;\n})(Action || {});\nvar PopStateEventType = \"popstate\";\nfunction createMemoryHistory(options = {}) {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries;\n  entries = initialEntries.map(\n    (entry, index2) => createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index2 === 0 ? \"default\" : void 0\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state = null, key) {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n  function createHref2(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref2,\n    createURL(to) {\n      return new URL(createHref2(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = \"PUSH\" /* Push */;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = \"REPLACE\" /* Replace */;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = \"POP\" /* Pop */;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\nfunction createBrowserHistory(options = {}) {\n  function createBrowserLocation(window2, globalHistory) {\n    let { pathname, search, hash } = window2.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createBrowserHref(window2, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\nfunction createHashHistory(options = {}) {\n  function createHashLocation(window2, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window2.location.hash.substring(1));\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      globalHistory.state && globalHistory.state.usr || null,\n      globalHistory.state && globalHistory.state.key || \"default\"\n    );\n  }\n  function createHashHref(window2, to) {\n    let base = window2.document.querySelector(\"base\");\n    let href2 = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window2.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      throw new Error(message);\n    } catch (e) {\n    }\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substring(2, 10);\n}\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\nfunction createLocation(current, to, state = null, key) {\n  let location = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...typeof to === \"string\" ? parsePath(to) : to,\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  };\n  return location;\n}\nfunction createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\"\n}) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substring(hashIndex);\n      path = path.substring(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substring(searchIndex);\n      path = path.substring(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\n  let globalHistory = window2.history;\n  let action = \"POP\" /* Pop */;\n  let listener = null;\n  let index = getIndex();\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n  function handlePop() {\n    action = \"POP\" /* Pop */;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n  function push(to, state) {\n    action = \"PUSH\" /* Push */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      window2.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n  function replace2(to, state) {\n    action = \"REPLACE\" /* Replace */;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n  function createURL(to) {\n    return createBrowserURLImpl(to);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window2, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window2.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window2.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref2(window2, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace: replace2,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\nfunction createBrowserURLImpl(to, isAbsolute = false) {\n  let base = \"http://localhost\";\n  if (typeof window !== \"undefined\") {\n    base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n  }\n  invariant(base, \"No window.location.(origin|href) available to create URL\");\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  if (!isAbsolute && href2.startsWith(\"//\")) {\n    href2 = base + href2;\n  }\n  return new URL(href2, base);\n}\n\n// lib/router/utils.ts\nfunction unstable_createContext(defaultValue) {\n  return { defaultValue };\n}\nvar _map;\nvar unstable_RouterContextProvider = class {\n  constructor(init) {\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\n    if (init) {\n      for (let [context, value] of init) {\n        this.set(context, value);\n      }\n    }\n  }\n  get(context) {\n    if (__privateGet(this, _map).has(context)) {\n      return __privateGet(this, _map).get(context);\n    }\n    if (context.defaultValue !== void 0) {\n      return context.defaultValue;\n    }\n    throw new Error(\"No value found for context\");\n  }\n  set(context, value) {\n    __privateGet(this, _map).set(context, value);\n  }\n};\n_map = new WeakMap();\nvar unsupportedLazyRouteObjectKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteObjectKey(key) {\n  return unsupportedLazyRouteObjectKeys.has(\n    key\n  );\n}\nvar unsupportedLazyRouteFunctionKeys = /* @__PURE__ */ new Set([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"unstable_middleware\",\n  \"children\"\n]);\nfunction isUnsupportedLazyRouteFunctionKey(key) {\n  return unsupportedLazyRouteFunctionKeys.has(\n    key\n  );\n}\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\n    );\n    if (isIndexRoute(route)) {\n      let indexRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = {\n        ...route,\n        ...mapRouteProperties2(route),\n        id,\n        children: void 0\n      };\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties2,\n          treePath,\n          manifest\n        );\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\n      );\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  let isOptional = first.endsWith(\"?\");\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  result.push(\n    ...restExploded.map(\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  return result.map(\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\n      a.routesMeta.map((meta) => meta.childrenIndex),\n      b.routesMeta.map((meta) => meta.childrenIndex)\n    )\n  );\n}\nvar paramRe = /^:[\\w-]+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = (s) => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter((s) => !isSplat(s)).reduce(\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\n    initialScore\n  );\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? (\n    // If two routes are siblings, we should try to match the earlier sibling\n    // first. This allows people to have fine-grained control over the matching\n    // behavior by simply putting routes with identical paths in the order they\n    // want them tried.\n    a[a.length - 1] - b[b.length - 1]\n  ) : (\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\n    // so they sort equally.\n    0\n  );\n}\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\n  let { routesMeta } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false\n        },\n        remainingPathname\n      );\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\nfunction generatePath(originalPath, params = {}) {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify2 = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      return stringify2(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n      return stringify2(param);\n    }\n    return segment.replace(/\\?$/g, \"\");\n  }).filter((segment) => !!segment);\n  return prefix + segments.join(\"/\");\n}\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce(\n    (memo2, { paramName, isOptional }, index) => {\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n      }\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo2[paramName] = void 0;\n      } else {\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo2;\n    },\n    {}\n  );\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive = false, end = true) {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\n    /\\/:([\\w-]+)(\\?)?/g,\n    (_, paramName, isOptional) => {\n      params.push({ paramName, isOptional: isOptional != null });\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n    }\n  );\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\n  } else if (end) {\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n  }\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\n    );\n    return value;\n  }\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\nfunction resolvePath(to, fromPathname = \"/\") {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\n    path\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\n}\nfunction getPathContributingMatches(matches) {\n  return matches.filter(\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\n  );\n}\nfunction getResolveToMatches(matches) {\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches.map(\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n  );\n}\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\nvar DataWithResponseInit = class {\n  constructor(data2, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data2;\n    this.init = init || null;\n  }\n};\nfunction data(data2, init) {\n  return new DataWithResponseInit(\n    data2,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\nvar redirect = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit, headers });\n};\nvar redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\nvar replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\nvar ErrorResponseImpl = class {\n  constructor(status, statusText, data2, internal = false) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data2 instanceof Error) {\n      this.data = data2.toString();\n      this.error = data2;\n    } else {\n      this.data = data2;\n    }\n  }\n};\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\n// lib/router/router.ts\nvar validMutationMethodsArr = [\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n];\nvar validMutationMethods = new Set(\n  validMutationMethodsArr\n);\nvar validRequestMethodsArr = [\n  \"GET\",\n  ...validMutationMethodsArr\n];\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: void 0,\n  formMethod: void 0,\n  formAction: void 0,\n  formEncType: void 0,\n  formData: void 0,\n  json: void 0,\n  text: void 0\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: void 0,\n  reset: void 0,\n  location: void 0\n};\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar defaultMapRouteProperties = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n  let hydrationRouteProperties2 = init.hydrationRouteProperties || [];\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\n  let future = {\n    unstable_middleware: false,\n    ...init.future\n  };\n  let unlistenHistory = null;\n  let subscribers = /* @__PURE__ */ new Set();\n  let savedScrollPositions2 = null;\n  let getScrollRestorationKey2 = null;\n  let getScrollPosition = null;\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  let initialized;\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialized = true;\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  } else {\n    if (initialMatches && !init.hydrationData) {\n      let fogOfWar = checkFogOfWar(\n        initialMatches,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active) {\n        initialMatches = null;\n      }\n    }\n    if (!initialMatches) {\n      initialized = false;\n      initialMatches = [];\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    } else if (initialMatches.some((m) => m.route.lazy)) {\n      initialized = false;\n    } else if (!initialMatches.some((m) => m.route.loader)) {\n      initialized = true;\n    } else {\n      let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n      let errors = init.hydrationData ? init.hydrationData.errors : null;\n      if (errors) {\n        let idx = initialMatches.findIndex(\n          (m) => errors[m.route.id] !== void 0\n        );\n        initialized = initialMatches.slice(0, idx + 1).every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      } else {\n        initialized = initialMatches.every(\n          (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n        );\n      }\n    }\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: /* @__PURE__ */ new Map(),\n    blockers: /* @__PURE__ */ new Map()\n  };\n  let pendingAction = \"POP\" /* Pop */;\n  let pendingPreventScrollReset = false;\n  let pendingNavigationController;\n  let pendingViewTransitionEnabled = false;\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\n  let removePageHideEventListener = null;\n  let isUninterruptedRevalidation = false;\n  let isRevalidationRequired = false;\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\n  let fetchControllers = /* @__PURE__ */ new Map();\n  let incrementingLoadId = 0;\n  let pendingNavigationLoadId = -1;\n  let fetchReloadIds = /* @__PURE__ */ new Map();\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\n  let activeFetchers = /* @__PURE__ */ new Map();\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\n  let blockerFunctions = /* @__PURE__ */ new Map();\n  let unblockBlockerHistoryUpdate = void 0;\n  let pendingRevalidationDfd = null;\n  function initialize() {\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = void 0;\n          return;\n        }\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\n        );\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction\n        });\n        if (blockerKey && delta != null) {\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey, {\n                state: \"proceeding\",\n                proceed: void 0,\n                reset: void 0,\n                location\n              });\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey, IDLE_BLOCKER);\n              updateState({ blockers });\n            }\n          });\n          return;\n        }\n        return startNavigation(historyAction, location);\n      }\n    );\n    if (isBrowser2) {\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    if (!state.initialized) {\n      startNavigation(\"POP\" /* Pop */, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  function updateState(newState, opts = {}) {\n    state = {\n      ...state,\n      ...newState\n    };\n    let unmountedFetchers = [];\n    let mountedFetchers = [];\n    state.fetchers.forEach((fetcher, key) => {\n      if (fetcher.state === \"idle\") {\n        if (fetchersQueuedForDeletion.has(key)) {\n          unmountedFetchers.push(key);\n        } else {\n          mountedFetchers.push(key);\n        }\n      }\n    });\n    fetchersQueuedForDeletion.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        unmountedFetchers.push(key);\n      }\n    });\n    [...subscribers].forEach(\n      (subscriber) => subscriber(state, {\n        deletedFetchers: unmountedFetchers,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true\n      })\n    );\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\n  }\n  function completeNavigation(location, newState, { flushSync } = {}) {\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      actionData = state.actionData;\n    } else {\n      actionData = null;\n    }\n    let loaderData = newState.loaderData ? mergeLoaderData(\n      state.loaderData,\n      newState.loaderData,\n      newState.matches || [],\n      newState.errors\n    ) : state.loaderData;\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = void 0;\n    }\n    if (isUninterruptedRevalidation) {\n    } else if (pendingAction === \"POP\" /* Pop */) {\n    } else if (pendingAction === \"PUSH\" /* Push */) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    if (pendingAction === \"POP\" /* Pop */) {\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(\n      {\n        ...newState,\n        // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true\n      }\n    );\n    pendingAction = \"POP\" /* Pop */;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    pendingRevalidationDfd?.resolve();\n    pendingRevalidationDfd = null;\n  }\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      false,\n      normalizedPath,\n      opts\n    );\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation)\n    };\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\n    let historyAction = \"PUSH\" /* Push */;\n    if (userReplace === true) {\n      historyAction = \"REPLACE\" /* Replace */;\n    } else if (userReplace === false) {\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      historyAction = \"REPLACE\" /* Replace */;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: void 0,\n            reset: void 0,\n            location: nextLocation\n          });\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({ blockers });\n        }\n      });\n      return;\n    }\n    await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  function revalidate() {\n    if (!pendingRevalidationDfd) {\n      pendingRevalidationDfd = createDeferred();\n    }\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n    let promise = pendingRevalidationDfd.promise;\n    if (state.navigation.state === \"submitting\") {\n      return promise;\n    }\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return promise;\n    }\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true\n      }\n    );\n    return promise;\n  }\n  async function startNavigation(historyAction, location, opts) {\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n      state.matches\n    ) : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        },\n        { flushSync }\n      );\n      return;\n    }\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: \"error\" /* error */, error: opts.pendingError }\n      ];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        opts && opts.initialHydration === true,\n        { replace: opts.replace, flushSync }\n      );\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      fogOfWar.active = false;\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n    if (shortCircuited) {\n      return;\n    }\n    pendingNavigationController = null;\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors\n    });\n  }\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, initialHydration, opts = {}) {\n    interruptActiveLoads();\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: \"error\" /* error */,\n              error: discoverResult.error\n            }\n          ]\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: \"error\" /* error */,\n              error\n            }\n          ]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: \"error\" /* error */,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        initialHydration ? [] : hydrationRouteProperties2,\n        scopedContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        scopedContext,\n        null\n      );\n      result = results[actionMatch.route.id];\n      if (!result) {\n        for (let match of matches) {\n          if (results[match.route.id]) {\n            result = results[match.route.id];\n            break;\n          }\n        }\n      }\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace2;\n      if (opts && opts.replace != null) {\n        replace2 = opts.replace;\n      } else {\n        let location2 = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\"),\n          new URL(request.url),\n          basename\n        );\n        replace2 = location2 === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      if ((opts && opts.replace) !== true) {\n        pendingAction = \"PUSH\" /* Push */;\n      }\n      return {\n        matches,\n        pendingActionResult: [\n          boundaryMatch.route.id,\n          result,\n          actionMatch.route.id\n        ]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...actionData !== void 0 ? { actionData } : {}\n          },\n          {\n            flushSync\n          }\n        );\n      }\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      request,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      initialHydration ? [] : hydrationRouteProperties2,\n      initialHydration === true,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      pendingActionResult\n    );\n    pendingNavigationLoadId = ++incrementingLoadId;\n    if (!init.dataStrategy && !dsMatches.some((m) => m.shouldLoad) && revalidatingFetchers.length === 0) {\n      let updatedFetchers2 = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== void 0) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      request,\n      scopedContext\n    );\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      await startRedirectNavigation(request, redirect2.result, true, {\n        replace: replace2\n      });\n      return { shortCircuited: true };\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    if (initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\n    };\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        fetcher ? fetcher.data : void 0\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  async function fetch2(key, routeId, href2, opts) {\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      href2,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n    let { path, submission, error } = normalizeNavigateOptions(\n      true,\n      normalizedPath,\n      opts\n    );\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let scopedContext = new unstable_RouterContextProvider(\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\n    );\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      await handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        scopedContext,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n    fetchLoadMatches.set(key, { routeId, path });\n    await handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      scopedContext,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let fetchMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      requestMatches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let actionResults = await callDataStrategy(\n      fetchRequest,\n      fetchMatches,\n      scopedContext,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      }\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          updateFetcherState(key, getDoneFetcher(void 0));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let { dsMatches, revalidatingFetchers } = getMatchesToLoad(\n      revalidationRequest,\n      scopedContext,\n      mapRouteProperties2,\n      manifest,\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      hydrationRouteProperties2,\n      false,\n      isRevalidationRequired,\n      cancelledFetcherLoads,\n      fetchersQueuedForDeletion,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      init.patchRoutesOnNavigation != null,\n      [match.route.id, actionResult]\n    );\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\n      let staleKey = rf.key;\n      let existingFetcher2 = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(\n        void 0,\n        existingFetcher2 ? existingFetcher2.data : void 0\n      );\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({ fetchers: new Map(state.fetchers) });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\n      dsMatches,\n      revalidatingFetchers,\n      revalidationRequest,\n      scopedContext\n    );\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let redirect2 = findRedirect(loaderResults);\n    if (redirect2) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    redirect2 = findRedirect(fetcherResults);\n    if (redirect2) {\n      fetchRedirectIds.add(redirect2.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect2.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      void 0,\n      revalidatingFetchers,\n      fetcherResults\n    );\n    abortStaleFetchLoads(loadId);\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : void 0\n      ),\n      { flushSync }\n    );\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal,\n        key\n      );\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let dsMatches = getTargetedDataStrategyMatches(\n      mapRouteProperties2,\n      manifest,\n      fetchRequest,\n      matches,\n      match,\n      hydrationRouteProperties2,\n      scopedContext\n    );\n    let results = await callDataStrategy(\n      fetchRequest,\n      dsMatches,\n      scopedContext,\n      key\n    );\n    let result = results[match.route.id];\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    if (fetchersQueuedForDeletion.has(key)) {\n      updateFetcherState(key, getDoneFetcher(void 0));\n      return;\n    }\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        updateFetcherState(key, getDoneFetcher(void 0));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\n    submission,\n    fetcherSubmission,\n    preventScrollReset,\n    replace: replace2\n  } = {}) {\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect2.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser2) {\n      let isDocumentReload = false;\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = createBrowserURLImpl(location, true);\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace2) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    pendingNavigationController = null;\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    } else {\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectNavigationType, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\n      });\n    }\n  }\n  async function callDataStrategy(request, matches, scopedContext, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        request,\n        matches,\n        fetcherKey,\n        scopedContext,\n        false\n      );\n    } catch (e) {\n      matches.filter((m) => m.shouldLoad).forEach((m) => {\n        dataResults[m.route.id] = {\n          type: \"error\" /* error */,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    if (request.signal.aborted) {\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: \"redirect\" /* redirect */,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename\n          )\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(matches, fetchersToLoad, request, scopedContext) {\n    let loaderResultsPromise = callDataStrategy(\n      request,\n      matches,\n      scopedContext,\n      null\n    );\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.request && f.controller) {\n          let results = await callDataStrategy(\n            f.request,\n            f.matches,\n            scopedContext,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: \"error\" /* error */,\n              error: getInternalRouterError(404, {\n                pathname: f.path\n              })\n            }\n          });\n        }\n      })\n    );\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    isRevalidationRequired = true;\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts = {}) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function setFetcherError(key, routeId, error, opts = {}) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error\n        },\n        fetchers: new Map(state.fetchers)\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    if (fetchersQueuedForDeletion.has(key)) {\n      fetchersQueuedForDeletion.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    fetchersQueuedForDeletion.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function queueFetcherForDeletion(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      fetchersQueuedForDeletion.add(key);\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    invariant(\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction\n  }) {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      return;\n    }\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n    return { notFoundMatches: matches, route, error };\n  }\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions2 = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey2 = getKey || null;\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n    return () => {\n      savedScrollPositions2 = null;\n      getScrollPosition = null;\n      getScrollRestorationKey2 = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey2) {\n      let key = getScrollRestorationKey2(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions2 && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions2[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions2) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions2[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (init.patchRoutesOnNavigation) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          let partialMatches = matchRoutesImpl(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n    return { active: false, matches: null };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!init.patchRoutesOnNavigation) {\n      return { type: \"success\", matches };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await init.patchRoutesOnNavigation({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties2\n            );\n          }\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n      let newPartialMatches = matchRoutesImpl(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\n        (m, i) => m.route.id === newPartialMatches[i].route.id\n      )) {\n        return { type: \"success\", matches: null };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties2,\n      void 0,\n      manifest\n    );\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties2\n    );\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch: fetch2,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to) => init.history.createHref(to),\n    encodeLocation: (to) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: queueFetcherForDeletion,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\nfunction createStaticHandler(routes, opts) {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties2,\n    void 0,\n    manifest\n  );\n  async function query(request, {\n    requestContext,\n    filterMatchesToLoad,\n    skipLoaderErrorBubbling,\n    skipRevalidation,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\n      let staticContext = {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n      return respond ? respond(staticContext) : staticContext;\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      try {\n        await loadLazyMiddlewareForMatches(\n          matches,\n          manifest,\n          mapRouteProperties2\n        );\n        let renderedStaticContext;\n        let response = await runMiddlewarePipeline(\n          {\n            request,\n            matches,\n            params: matches[0].params,\n            // If we're calling middleware then it must be enabled so we can cast\n            // this to the proper type knowing it's not an `AppLoadContext`\n            context: requestContext\n          },\n          true,\n          async () => {\n            let result2 = await queryImpl(\n              request,\n              location,\n              matches,\n              requestContext,\n              dataStrategy || null,\n              skipLoaderErrorBubbling === true,\n              null,\n              filterMatchesToLoad || null,\n              skipRevalidation === true\n            );\n            if (isResponse(result2)) {\n              return result2;\n            }\n            renderedStaticContext = { location, basename, ...result2 };\n            let res = await respond(renderedStaticContext);\n            return res;\n          },\n          async (error, routeId) => {\n            if (isResponse(error)) {\n              return error;\n            }\n            if (renderedStaticContext) {\n              if (routeId in renderedStaticContext.loaderData) {\n                renderedStaticContext.loaderData[routeId] = void 0;\n              }\n              return respond(\n                getStaticContextFromError(\n                  dataRoutes,\n                  renderedStaticContext,\n                  error,\n                  skipLoaderErrorBubbling ? routeId : findNearestBoundary(matches, routeId).route.id\n                )\n              );\n            } else {\n              let boundaryRouteId = skipLoaderErrorBubbling ? routeId : findNearestBoundary(\n                matches,\n                matches.find(\n                  (m) => m.route.id === routeId || m.route.loader\n                )?.route.id || routeId\n              ).route.id;\n              return respond({\n                matches,\n                location,\n                basename,\n                loaderData: {},\n                actionData: null,\n                errors: {\n                  [boundaryRouteId]: error\n                },\n                statusCode: isRouteErrorResponse(error) ? error.status : 500,\n                actionHeaders: {},\n                loaderHeaders: {}\n              });\n            }\n          }\n        );\n        invariant(isResponse(response), \"Expected a response in query()\");\n        return response;\n      } catch (e) {\n        if (isResponse(e)) {\n          return e;\n        }\n        throw e;\n      }\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null,\n      filterMatchesToLoad || null,\n      skipRevalidation === true\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    return { location, basename, ...result };\n  }\n  async function queryRoute(request, {\n    routeId,\n    requestContext,\n    dataStrategy,\n    unstable_respond: respond\n  } = {}) {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n    if (respond && matches.some(\n      (m) => m.route.unstable_middleware || typeof m.route.lazy === \"object\" && m.route.lazy.unstable_middleware\n    )) {\n      invariant(\n        requestContext instanceof unstable_RouterContextProvider,\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must be an instance of `unstable_RouterContextProvider`\"\n      );\n      await loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2);\n      let response = await runMiddlewarePipeline(\n        {\n          request,\n          matches,\n          params: matches[0].params,\n          // If we're calling middleware then it must be enabled so we can cast\n          // this to the proper type knowing it's not an `AppLoadContext`\n          context: requestContext\n        },\n        true,\n        async () => {\n          let result2 = await queryImpl(\n            request,\n            location,\n            matches,\n            requestContext,\n            dataStrategy || null,\n            false,\n            match,\n            null,\n            false\n          );\n          if (isResponse(result2)) {\n            return respond(result2);\n          }\n          let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;\n          if (error2 !== void 0) {\n            throw error2;\n          }\n          let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];\n          return typeof value === \"string\" ? new Response(value) : Response.json(value);\n        },\n        (error2) => {\n          if (isResponse(error2)) {\n            return respond(error2);\n          }\n          return new Response(String(error2), {\n            status: 500,\n            statusText: \"Unexpected Server Error\"\n          });\n        }\n      );\n      return response;\n    }\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match,\n      null,\n      false\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\n    if (error !== void 0) {\n      throw error;\n    }\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      return Object.values(result.loaderData)[0];\n    }\n    return void 0;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n    try {\n      if (isMutationMethod(request.method)) {\n        let result2 = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null,\n          filterMatchesToLoad,\n          skipRevalidation\n        );\n        return result2;\n      }\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch,\n        filterMatchesToLoad\n      );\n      return isResponse(result) ? result : {\n        ...result,\n        actionData: null,\n        actionHeaders: {}\n      };\n    } catch (e) {\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === \"error\" /* error */) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: \"error\" /* error */,\n        error\n      };\n    } else {\n      let dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        actionMatch,\n        [],\n        requestContext\n      );\n      let results = await callDataStrategy(\n        request,\n        dsMatches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest);\n      }\n    }\n    if (isRedirectResult(result)) {\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isRouteRequest) {\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {}\n      };\n    }\n    if (skipRevalidation) {\n      if (isErrorResult(result)) {\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n        return {\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n          actionData: null,\n          actionHeaders: {\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n          },\n          matches,\n          loaderData: {},\n          errors: {\n            [boundaryMatch.route.id]: result.error\n          },\n          loaderHeaders: {}\n        };\n      } else {\n        return {\n          actionData: {\n            [actionMatch.route.id]: result.data\n          },\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\n          matches,\n          loaderData: {},\n          errors: null,\n          statusCode: result.statusCode || 200,\n          loaderHeaders: {}\n        };\n      }\n    }\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let handlerContext2 = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        filterMatchesToLoad,\n        [boundaryMatch.route.id, result]\n      );\n      return {\n        ...handlerContext2,\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: {\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\n        }\n      };\n    }\n    let handlerContext = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null,\n      filterMatchesToLoad\n    );\n    return {\n      ...handlerContext,\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      // action status codes take precedence over loader status codes\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\n    };\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id\n      });\n    }\n    let dsMatches;\n    if (routeMatch) {\n      dsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        request,\n        matches,\n        routeMatch,\n        [],\n        requestContext\n      );\n    } else {\n      let maxIdx = pendingActionResult && isErrorResult(pendingActionResult[1]) ? (\n        // Up to but not including the boundary\n        matches.findIndex((m) => m.route.id === pendingActionResult[0]) - 1\n      ) : void 0;\n      dsMatches = matches.map((match, index) => {\n        if (maxIdx != null && index > maxIdx) {\n          return getDataStrategyMatch(\n            mapRouteProperties2,\n            manifest,\n            request,\n            match,\n            [],\n            requestContext,\n            false\n          );\n        }\n        return getDataStrategyMatch(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          [],\n          requestContext,\n          (match.route.loader || match.route.lazy) != null && (!filterMatchesToLoad || filterMatchesToLoad(match))\n        );\n      });\n    }\n    if (!dataStrategy && !dsMatches.some((m) => m.shouldLoad)) {\n      return {\n        matches,\n        loaderData: {},\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {}\n      };\n    }\n    let results = await callDataStrategy(\n      request,\n      dsMatches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest);\n    }\n    let handlerContext = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      true,\n      skipLoaderErrorBubbling\n    );\n    return {\n      ...handlerContext,\n      matches\n    };\n  }\n  async function callDataStrategy(request, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      request,\n      matches,\n      null,\n      requestContext,\n      true\n    );\n    let dataResults = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResult(result)) {\n          let response = result.result;\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          throw result;\n        }\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\n  return {\n    ...handlerContext,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [errorBoundaryId]: error\n    }\n  };\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\n  if (request.signal.reason !== void 0) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n  );\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\n}\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\n  });\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = rawFormMethod.toUpperCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== void 0) {\n    if (opts.formEncType === \"text/plain\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n        Array.from(opts.body.entries()).reduce(\n          (acc, [name, value]) => `${acc}${name}=${value}\n`,\n          \"\"\n        )\n      ) : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: void 0,\n          json: void 0,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: void 0,\n            json,\n            text: void 0\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: void 0,\n    text: void 0\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n  let parsedPath = parsePath(path);\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n  return { path: createPath(parsedPath), submission };\n}\nfunction getMatchesToLoad(request, scopedContext, mapRouteProperties2, manifest, history, state, matches, submission, location, lazyRoutePropertiesToSkip, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, hasPatchRoutesOnNavigation, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let maxIdx;\n  if (initialHydration && state.errors) {\n    let boundaryId = Object.keys(state.errors)[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    let boundaryId = pendingActionResult[0];\n    maxIdx = matches.findIndex((m) => m.route.id === boundaryId) - 1;\n  }\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\n  let baseShouldRevalidateArgs = {\n    currentUrl,\n    currentParams: state.matches[0]?.params || {},\n    nextUrl,\n    nextParams: matches[0].params,\n    ...submission,\n    actionResult,\n    actionStatus\n  };\n  let dsMatches = matches.map((match, index) => {\n    let { route } = match;\n    let forceShouldLoad = null;\n    if (maxIdx != null && index > maxIdx) {\n      forceShouldLoad = false;\n    } else if (route.lazy) {\n      forceShouldLoad = true;\n    } else if (route.loader == null) {\n      forceShouldLoad = false;\n    } else if (initialHydration) {\n      forceShouldLoad = shouldLoadRouteOnHydration(\n        route,\n        state.loaderData,\n        state.errors\n      );\n    } else if (isNewLoader(state.loaderData, state.matches[index], match)) {\n      forceShouldLoad = true;\n    }\n    if (forceShouldLoad !== null) {\n      return getDataStrategyMatch(\n        mapRouteProperties2,\n        manifest,\n        request,\n        match,\n        lazyRoutePropertiesToSkip,\n        scopedContext,\n        forceShouldLoad\n      );\n    }\n    let defaultShouldRevalidate = shouldSkipRevalidation ? false : (\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(state.matches[index], match)\n    );\n    let shouldRevalidateArgs = {\n      ...baseShouldRevalidateArgs,\n      defaultShouldRevalidate\n    };\n    let shouldLoad = shouldRevalidateLoader(match, shouldRevalidateArgs);\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      shouldLoad,\n      shouldRevalidateArgs\n    );\n  });\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\n      return;\n    }\n    let fetcher = state.fetchers.get(key);\n    let isMidInitialLoad = fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0;\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    if (!fetcherMatches) {\n      if (hasPatchRoutesOnNavigation && isMidInitialLoad) {\n        return;\n      }\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        request: null,\n        controller: null\n      });\n      return;\n    }\n    if (fetchRedirectIds.has(key)) {\n      return;\n    }\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let fetchController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      history,\n      f.path,\n      fetchController.signal\n    );\n    let fetcherDsMatches = null;\n    if (cancelledFetcherLoads.has(key)) {\n      cancelledFetcherLoads.delete(key);\n      fetcherDsMatches = getTargetedDataStrategyMatches(\n        mapRouteProperties2,\n        manifest,\n        fetchRequest,\n        fetcherMatches,\n        fetcherMatch,\n        lazyRoutePropertiesToSkip,\n        scopedContext\n      );\n    } else if (isMidInitialLoad) {\n      if (isRevalidationRequired) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext\n        );\n      }\n    } else {\n      let shouldRevalidateArgs = {\n        ...baseShouldRevalidateArgs,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      };\n      if (shouldRevalidateLoader(fetcherMatch, shouldRevalidateArgs)) {\n        fetcherDsMatches = getTargetedDataStrategyMatches(\n          mapRouteProperties2,\n          manifest,\n          fetchRequest,\n          fetcherMatches,\n          fetcherMatch,\n          lazyRoutePropertiesToSkip,\n          scopedContext,\n          shouldRevalidateArgs\n        );\n      }\n    }\n    if (fetcherDsMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherDsMatches,\n        match: fetcherMatch,\n        request: fetchRequest,\n        controller: fetchController\n      });\n    }\n  });\n  return { dsMatches, revalidatingFetchers };\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  if (route.lazy) {\n    return true;\n  }\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && route.id in loaderData;\n  let hasError = errors != null && errors[route.id] !== void 0;\n  if (!hasData && hasError) {\n    return false;\n  }\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = (\n    // [a] -> [a, b]\n    !currentMatch || // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id\n  );\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  let uniqueChildren = children.filter(\n    (newRoute) => !childrenToPatch.some(\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\n    )\n  );\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties2,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  return newRoute.children.every(\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\nvar lazyRoutePropertyCache = /* @__PURE__ */ new WeakMap();\nvar loadLazyRouteProperty = ({\n  key,\n  route,\n  manifest,\n  mapRouteProperties: mapRouteProperties2\n}) => {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!routeToUpdate.lazy || typeof routeToUpdate.lazy !== \"object\") {\n    return;\n  }\n  let lazyFn = routeToUpdate.lazy[key];\n  if (!lazyFn) {\n    return;\n  }\n  let cache = lazyRoutePropertyCache.get(routeToUpdate);\n  if (!cache) {\n    cache = {};\n    lazyRoutePropertyCache.set(routeToUpdate, cache);\n  }\n  let cachedPromise = cache[key];\n  if (cachedPromise) {\n    return cachedPromise;\n  }\n  let propertyPromise = (async () => {\n    let isUnsupported = isUnsupportedLazyRouteObjectKey(key);\n    let staticRouteValue = routeToUpdate[key];\n    let isStaticallyDefined = staticRouteValue !== void 0 && key !== \"hasErrorBoundary\";\n    if (isUnsupported) {\n      warning(\n        !isUnsupported,\n        \"Route property \" + key + \" is not a supported lazy route property. This property will be ignored.\"\n      );\n      cache[key] = Promise.resolve();\n    } else if (isStaticallyDefined) {\n      warning(\n        false,\n        `Route \"${routeToUpdate.id}\" has a static property \"${key}\" defined. The lazy property will be ignored.`\n      );\n    } else {\n      let value = await lazyFn();\n      if (value != null) {\n        Object.assign(routeToUpdate, { [key]: value });\n        Object.assign(routeToUpdate, mapRouteProperties2(routeToUpdate));\n      }\n    }\n    if (typeof routeToUpdate.lazy === \"object\") {\n      routeToUpdate.lazy[key] = void 0;\n      if (Object.values(routeToUpdate.lazy).every((value) => value === void 0)) {\n        routeToUpdate.lazy = void 0;\n      }\n    }\n  })();\n  cache[key] = propertyPromise;\n  return propertyPromise;\n};\nvar lazyRouteFunctionCache = /* @__PURE__ */ new WeakMap();\nfunction loadLazyRoute(route, type, manifest, mapRouteProperties2, lazyRoutePropertiesToSkip) {\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  if (!route.lazy) {\n    return {\n      lazyRoutePromise: void 0,\n      lazyHandlerPromise: void 0\n    };\n  }\n  if (typeof route.lazy === \"function\") {\n    let cachedPromise = lazyRouteFunctionCache.get(routeToUpdate);\n    if (cachedPromise) {\n      return {\n        lazyRoutePromise: cachedPromise,\n        lazyHandlerPromise: cachedPromise\n      };\n    }\n    let lazyRoutePromise2 = (async () => {\n      invariant(\n        typeof route.lazy === \"function\",\n        \"No lazy route function found\"\n      );\n      let lazyRoute = await route.lazy();\n      let routeUpdates = {};\n      for (let lazyRouteProperty in lazyRoute) {\n        let lazyValue = lazyRoute[lazyRouteProperty];\n        if (lazyValue === void 0) {\n          continue;\n        }\n        let isUnsupported = isUnsupportedLazyRouteFunctionKey(lazyRouteProperty);\n        let staticRouteValue = routeToUpdate[lazyRouteProperty];\n        let isStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\n        // on the route updates\n        lazyRouteProperty !== \"hasErrorBoundary\";\n        if (isUnsupported) {\n          warning(\n            !isUnsupported,\n            \"Route property \" + lazyRouteProperty + \" is not a supported property to be returned from a lazy route function. This property will be ignored.\"\n          );\n        } else if (isStaticallyDefined) {\n          warning(\n            !isStaticallyDefined,\n            `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n          );\n        } else {\n          routeUpdates[lazyRouteProperty] = lazyValue;\n        }\n      }\n      Object.assign(routeToUpdate, routeUpdates);\n      Object.assign(routeToUpdate, {\n        // To keep things framework agnostic, we use the provided `mapRouteProperties`\n        // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\n        // since the logic will differ between frameworks.\n        ...mapRouteProperties2(routeToUpdate),\n        lazy: void 0\n      });\n    })();\n    lazyRouteFunctionCache.set(routeToUpdate, lazyRoutePromise2);\n    lazyRoutePromise2.catch(() => {\n    });\n    return {\n      lazyRoutePromise: lazyRoutePromise2,\n      lazyHandlerPromise: lazyRoutePromise2\n    };\n  }\n  let lazyKeys = Object.keys(route.lazy);\n  let lazyPropertyPromises = [];\n  let lazyHandlerPromise = void 0;\n  for (let key of lazyKeys) {\n    if (lazyRoutePropertiesToSkip && lazyRoutePropertiesToSkip.includes(key)) {\n      continue;\n    }\n    let promise = loadLazyRouteProperty({\n      key,\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n    if (promise) {\n      lazyPropertyPromises.push(promise);\n      if (key === type) {\n        lazyHandlerPromise = promise;\n      }\n    }\n  }\n  let lazyRoutePromise = lazyPropertyPromises.length > 0 ? Promise.all(lazyPropertyPromises).then(() => {\n  }) : void 0;\n  lazyRoutePromise?.catch(() => {\n  });\n  lazyHandlerPromise?.catch(() => {\n  });\n  return {\n    lazyRoutePromise,\n    lazyHandlerPromise\n  };\n}\nfunction isNonNullable(value) {\n  return value !== void 0;\n}\nfunction loadLazyMiddlewareForMatches(matches, manifest, mapRouteProperties2) {\n  let promises = matches.map(({ route }) => {\n    if (typeof route.lazy !== \"object\" || !route.lazy.unstable_middleware) {\n      return void 0;\n    }\n    return loadLazyRouteProperty({\n      key: \"unstable_middleware\",\n      route,\n      manifest,\n      mapRouteProperties: mapRouteProperties2\n    });\n  }).filter(isNonNullable);\n  return promises.length > 0 ? Promise.all(promises) : void 0;\n}\nasync function defaultDataStrategy(args) {\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\n  let keyedResults = {};\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  results.forEach((result, i) => {\n    keyedResults[matchesToLoad[i].route.id] = result;\n  });\n  return keyedResults;\n}\nasync function defaultDataStrategyWithMiddleware(args) {\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\n    return defaultDataStrategy(args);\n  }\n  return runMiddlewarePipeline(\n    args,\n    false,\n    () => defaultDataStrategy(args),\n    (error, routeId) => ({ [routeId]: { type: \"error\", result: error } })\n  );\n}\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\n  let { matches, request, params, context } = args;\n  let middlewareState = {\n    handlerResult: void 0\n  };\n  try {\n    let tuples = matches.flatMap(\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\n    );\n    let result = await callRouteMiddleware(\n      { request, params, context },\n      tuples,\n      propagateResult,\n      middlewareState,\n      handler\n    );\n    return propagateResult ? result : middlewareState.handlerResult;\n  } catch (e) {\n    if (!middlewareState.middlewareError) {\n      throw e;\n    }\n    let result = await errorHandler(\n      middlewareState.middlewareError.error,\n      middlewareState.middlewareError.routeId\n    );\n    if (propagateResult || !middlewareState.handlerResult) {\n      return result;\n    }\n    return Object.assign(middlewareState.handlerResult, result);\n  }\n}\nasync function callRouteMiddleware(args, middlewares, propagateResult, middlewareState, handler, idx = 0) {\n  let { request } = args;\n  if (request.signal.aborted) {\n    if (request.signal.reason) {\n      throw request.signal.reason;\n    }\n    throw new Error(\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\n    );\n  }\n  let tuple = middlewares[idx];\n  if (!tuple) {\n    middlewareState.handlerResult = await handler();\n    return middlewareState.handlerResult;\n  }\n  let [routeId, middleware] = tuple;\n  let nextCalled = false;\n  let nextResult = void 0;\n  let next = async () => {\n    if (nextCalled) {\n      throw new Error(\"You may only call `next()` once per middleware\");\n    }\n    nextCalled = true;\n    let result = await callRouteMiddleware(\n      args,\n      middlewares,\n      propagateResult,\n      middlewareState,\n      handler,\n      idx + 1\n    );\n    if (propagateResult) {\n      nextResult = result;\n      return nextResult;\n    }\n  };\n  try {\n    let result = await middleware(\n      {\n        request: args.request,\n        params: args.params,\n        context: args.context\n      },\n      next\n    );\n    if (nextCalled) {\n      if (result === void 0) {\n        return nextResult;\n      } else {\n        return result;\n      }\n    } else {\n      return next();\n    }\n  } catch (error) {\n    if (!middlewareState.middlewareError) {\n      middlewareState.middlewareError = { routeId, error };\n    } else if (middlewareState.middlewareError.error !== error) {\n      middlewareState.middlewareError = { routeId, error };\n    }\n    throw error;\n  }\n}\nfunction getDataStrategyMatchLazyPromises(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip) {\n  let lazyMiddlewarePromise = loadLazyRouteProperty({\n    key: \"unstable_middleware\",\n    route: match.route,\n    manifest,\n    mapRouteProperties: mapRouteProperties2\n  });\n  let lazyRoutePromises = loadLazyRoute(\n    match.route,\n    isMutationMethod(request.method) ? \"action\" : \"loader\",\n    manifest,\n    mapRouteProperties2,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    middleware: lazyMiddlewarePromise,\n    route: lazyRoutePromises.lazyRoutePromise,\n    handler: lazyRoutePromises.lazyHandlerPromise\n  };\n}\nfunction getDataStrategyMatch(mapRouteProperties2, manifest, request, match, lazyRoutePropertiesToSkip, scopedContext, shouldLoad, unstable_shouldRevalidateArgs = null) {\n  let isUsingNewApi = false;\n  let _lazyPromises = getDataStrategyMatchLazyPromises(\n    mapRouteProperties2,\n    manifest,\n    request,\n    match,\n    lazyRoutePropertiesToSkip\n  );\n  return {\n    ...match,\n    _lazyPromises,\n    shouldLoad,\n    unstable_shouldRevalidateArgs,\n    unstable_shouldCallHandler(defaultShouldRevalidate) {\n      isUsingNewApi = true;\n      if (!unstable_shouldRevalidateArgs) {\n        return shouldLoad;\n      }\n      if (typeof defaultShouldRevalidate === \"boolean\") {\n        return shouldRevalidateLoader(match, {\n          ...unstable_shouldRevalidateArgs,\n          defaultShouldRevalidate\n        });\n      }\n      return shouldRevalidateLoader(match, unstable_shouldRevalidateArgs);\n    },\n    resolve(handlerOverride) {\n      if (isUsingNewApi || shouldLoad || handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        return callLoaderOrAction({\n          request,\n          match,\n          lazyHandlerPromise: _lazyPromises?.handler,\n          lazyRoutePromise: _lazyPromises?.route,\n          handlerOverride,\n          scopedContext\n        });\n      }\n      return Promise.resolve({ type: \"data\" /* data */, result: void 0 });\n    }\n  };\n}\nfunction getTargetedDataStrategyMatches(mapRouteProperties2, manifest, request, matches, targetMatch, lazyRoutePropertiesToSkip, scopedContext, shouldRevalidateArgs = null) {\n  return matches.map((match) => {\n    if (match.route.id !== targetMatch.route.id) {\n      return {\n        ...match,\n        shouldLoad: false,\n        unstable_shouldRevalidateArgs: shouldRevalidateArgs,\n        unstable_shouldCallHandler: () => false,\n        _lazyPromises: getDataStrategyMatchLazyPromises(\n          mapRouteProperties2,\n          manifest,\n          request,\n          match,\n          lazyRoutePropertiesToSkip\n        ),\n        resolve: () => Promise.resolve({ type: \"data\", result: void 0 })\n      };\n    }\n    return getDataStrategyMatch(\n      mapRouteProperties2,\n      manifest,\n      request,\n      match,\n      lazyRoutePropertiesToSkip,\n      scopedContext,\n      true,\n      shouldRevalidateArgs\n    );\n  });\n}\nasync function callDataStrategyImpl(dataStrategyImpl, request, matches, fetcherKey, scopedContext, isStaticHandler) {\n  if (matches.some((m) => m._lazyPromises?.middleware)) {\n    await Promise.all(matches.map((m) => m._lazyPromises?.middleware));\n  }\n  let dataStrategyArgs = {\n    request,\n    params: matches[0].params,\n    context: scopedContext,\n    matches\n  };\n  let unstable_runClientMiddleware = isStaticHandler ? () => {\n    throw new Error(\n      \"You cannot call `unstable_runClientMiddleware()` from a static handler `dataStrategy`. Middleware is run outside of `dataStrategy` during SSR in order to bubble up the Response.  You can enable middleware via the `respond` API in `query`/`queryRoute`\"\n    );\n  } : (cb) => {\n    let typedDataStrategyArgs = dataStrategyArgs;\n    return runMiddlewarePipeline(\n      typedDataStrategyArgs,\n      false,\n      () => cb({\n        ...typedDataStrategyArgs,\n        fetcherKey,\n        unstable_runClientMiddleware: () => {\n          throw new Error(\n            \"Cannot call `unstable_runClientMiddleware()` from within an `unstable_runClientMiddleware` handler\"\n          );\n        }\n      }),\n      (error, routeId) => ({\n        [routeId]: { type: \"error\", result: error }\n      })\n    );\n  };\n  let results = await dataStrategyImpl({\n    ...dataStrategyArgs,\n    fetcherKey,\n    unstable_runClientMiddleware\n  });\n  try {\n    await Promise.all(\n      matches.flatMap((m) => [m._lazyPromises?.handler, m._lazyPromises?.route])\n    );\n  } catch (e) {\n  }\n  return results;\n}\nasync function callLoaderOrAction({\n  request,\n  match,\n  lazyHandlerPromise,\n  lazyRoutePromise,\n  handlerOverride,\n  scopedContext\n}) {\n  let result;\n  let onReject;\n  let isAction = isMutationMethod(request.method);\n  let type = isAction ? \"action\" : \"loader\";\n  let runHandler = (handler) => {\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = (ctx) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: scopedContext\n        },\n        ...ctx !== void 0 ? [ctx] : []\n      );\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = isAction ? match.route.action : match.route.loader;\n    if (lazyHandlerPromise || lazyRoutePromise) {\n      if (handler) {\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          // Ensure all lazy route promises are resolved before continuing\n          lazyHandlerPromise,\n          lazyRoutePromise\n        ]);\n        if (handlerError !== void 0) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        await lazyHandlerPromise;\n        let handler2 = isAction ? match.route.action : match.route.loader;\n        if (handler2) {\n          [result] = await Promise.all([runHandler(handler2), lazyRoutePromise]);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          return { type: \"data\" /* data */, result: void 0 };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n  } catch (e) {\n    return { type: \"error\" /* error */, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let { result, type } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data2;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data2 = null;\n        } else {\n          data2 = await result.json();\n        }\n      } else {\n        data2 = await result.text();\n      }\n    } catch (e) {\n      return { type: \"error\" /* error */, error: e };\n    }\n    if (type === \"error\" /* error */) {\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: \"data\" /* data */,\n      data: data2,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === \"error\" /* error */) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: \"error\" /* error */,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n        };\n      }\n      return {\n        type: \"error\" /* error */,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          void 0,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n      };\n    }\n    return {\n      type: \"error\" /* error */,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: \"data\" /* data */,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\n    };\n  }\n  return { type: \"data\" /* data */, data: result };\n}\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      location\n    );\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = { signal };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      if (pendingError !== void 0) {\n        error = pendingError;\n        pendingError = void 0;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      if (!isStaticHandler) {\n        loaderData[id] = ResetLoaderDataSymbol;\n      }\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      loaderData[id] = result.data;\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  if (pendingError !== void 0 && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    if (pendingActionResult[2]) {\n      loaderData[pendingActionResult[2]] = void 0;\n    }\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult\n  );\n  revalidatingFetchers.filter((f) => !f.matches || f.matches.some((m) => m.shouldLoad)).forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    if (controller && controller.signal.aborted) {\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return { loaderData, errors };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\n    merged[k] = v;\n    return merged;\n  }, {});\n  for (let match of matches) {\n    let id = match.route.id;\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`\n  };\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route\n      }\n    ],\n    route\n  };\n}\nfunction getInternalRouterError(status, {\n  pathname,\n  routeId,\n  method,\n  type,\n  message\n} = {}) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    return true;\n  } else if (b.hash !== \"\") {\n    return true;\n  }\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\n}\nfunction isRedirectDataStrategyResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isErrorResult(result) {\n  return result.type === \"error\" /* error */;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === \"redirect\" /* redirect */;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectStatusCode(statusCode) {\n  return redirectStatusCodes.has(statusCode);\n}\nfunction isRedirectResponse(result) {\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toUpperCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toUpperCase());\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    return matches[matches.length - 1];\n  }\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json: void 0,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: void 0,\n      text: void 0\n    };\n  } else if (json !== void 0) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: void 0,\n      json,\n      text: void 0\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data2) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data: data2\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: void 0,\n      formAction: void 0,\n      formEncType: void 0,\n      formData: void 0,\n      json: void 0,\n      text: void 0,\n      data: data2\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : void 0\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data2) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: void 0,\n    formAction: void 0,\n    formEncType: void 0,\n    formData: void 0,\n    json: void 0,\n    text: void 0,\n    data: data2\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/components.tsx\nimport * as React3 from \"react\";\n\n// lib/context.ts\nimport * as React from \"react\";\nvar DataRouterContext = React.createContext(null);\nDataRouterContext.displayName = \"DataRouter\";\nvar DataRouterStateContext = React.createContext(null);\nDataRouterStateContext.displayName = \"DataRouterState\";\nvar ViewTransitionContext = React.createContext({\n  isTransitioning: false\n});\nViewTransitionContext.displayName = \"ViewTransition\";\nvar FetchersContext = React.createContext(\n  /* @__PURE__ */ new Map()\n);\nFetchersContext.displayName = \"Fetchers\";\nvar AwaitContext = React.createContext(null);\nAwaitContext.displayName = \"Await\";\nvar NavigationContext = React.createContext(\n  null\n);\nNavigationContext.displayName = \"Navigation\";\nvar LocationContext = React.createContext(\n  null\n);\nLocationContext.displayName = \"Location\";\nvar RouteContext = React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nRouteContext.displayName = \"Route\";\nvar RouteErrorContext = React.createContext(null);\nRouteErrorContext.displayName = \"RouteError\";\nvar ENABLE_DEV_WARNINGS = true;\n\n// lib/hooks.tsx\nimport * as React2 from \"react\";\nfunction useHref(to, { relative } = {}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\nfunction useInRouterContext() {\n  return React2.useContext(LocationContext) != null;\n}\nfunction useLocation() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n  return React2.useContext(LocationContext).location;\n}\nfunction useNavigationType() {\n  return React2.useContext(LocationContext).navigationType;\n}\nfunction useMatch(pattern) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n  let { pathname } = useLocation();\n  return React2.useMemo(\n    () => matchPath(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React2.useContext(NavigationContext).static;\n  if (!isStatic) {\n    React2.useLayoutEffect(cb);\n  }\n}\nfunction useNavigate() {\n  let { isDataRoute } = React2.useContext(RouteContext);\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  let { basename, navigator } = React2.useContext(NavigationContext);\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n      }\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext\n    ]\n  );\n  return navigate;\n}\nvar OutletContext = React2.createContext(null);\nfunction useOutletContext() {\n  return React2.useContext(OutletContext);\n}\nfunction useOutlet(context) {\n  let outlet = React2.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\n  }\n  return outlet;\n}\nfunction useParams() {\n  let { matches } = React2.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\nfunction useResolvedPath(to, { relative } = {}) {\n  let { matches } = React2.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\n  return React2.useMemo(\n    () => resolveTo(\n      to,\n      JSON.parse(routePathnamesJson),\n      locationPathname,\n      relative === \"path\"\n    ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n  let { navigator } = React2.useContext(NavigationContext);\n  let { matches: parentMatches } = React2.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (ENABLE_DEV_WARNINGS) {\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    invariant(\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n  if (ENABLE_DEV_WARNINGS) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n    warning(\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n  let renderedMatches = _renderMatches(\n    matches && matches.map(\n      (match) => Object.assign({}, match, {\n        params: Object.assign({}, parentParams, match.params),\n        pathname: joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname\n        ]),\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\n          parentPathnameBase,\n          // Re-encode pathnames that were decoded inside matchRoutes\n          navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\n        ])\n      })\n    ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n  if (locationArg && renderedMatches) {\n    return /* @__PURE__ */ React2.createElement(\n      LocationContext.Provider,\n      {\n        value: {\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location\n          },\n          navigationType: \"POP\" /* Pop */\n        }\n      },\n      renderedMatches\n    );\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n  let devInfo = null;\n  if (ENABLE_DEV_WARNINGS) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\n}\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\nvar RenderErrorBoundary = class extends React2.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n    return {\n      error: props.error !== void 0 ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\n      RouteErrorContext.Provider,\n      {\n        value: this.state.error,\n        children: this.props.component\n      }\n    )) : this.props.children;\n  }\n};\nfunction RenderedRoute({ routeContext, match, children }) {\n  let dataRouterContext = React2.useContext(DataRouterContext);\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\n}\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      matches = dataRouterState.matches;\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let { loaderData, errors: errors2 } = dataRouterState;\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\n        if (match.route.lazy || needsToRunLoader) {\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /* @__PURE__ */ React2.createElement(\n        RenderedRoute,\n        {\n          match,\n          routeContext: {\n            outlet,\n            matches: matches2,\n            isDataRoute: dataRouterState != null\n          },\n          children\n        }\n      );\n    };\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\n      RenderErrorBoundary,\n      {\n        location: dataRouterState.location,\n        revalidation: dataRouterState.revalidation,\n        component: errorElement,\n        error,\n        children: getChildren(),\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\n      }\n    ) : getChildren();\n  }, null);\n}\nfunction getDataRouterConsoleError(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React2.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React2.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React2.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\nfunction useRouteId() {\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\n}\nfunction useNavigation() {\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\n  return state.navigation;\n}\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\n  let revalidate = React2.useCallback(async () => {\n    await dataRouterContext.router.revalidate();\n  }, [dataRouterContext.router]);\n  return React2.useMemo(\n    () => ({ revalidate, state: state.revalidation }),\n    [revalidate, state.revalidation]\n  );\n}\nfunction useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    \"useMatches\" /* UseMatches */\n  );\n  return React2.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\nfunction useLoaderData() {\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\n  return state.loaderData[routeId];\n}\nfunction useActionData() {\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\n  return state.actionData ? state.actionData[routeId] : void 0;\n}\nfunction useRouteError() {\n  let error = React2.useContext(RouteErrorContext);\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\n  if (error !== void 0) {\n    return error;\n  }\n  return state.errors?.[routeId];\n}\nfunction useAsyncValue() {\n  let value = React2.useContext(AwaitContext);\n  return value?._data;\n}\nfunction useAsyncError() {\n  let value = React2.useContext(AwaitContext);\n  return value?._error;\n}\nvar blockerId = 0;\nfunction useBlocker(shouldBlock) {\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\n  let blockerFunction = React2.useCallback(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n        },\n        historyAction\n      });\n    },\n    [basename, shouldBlock]\n  );\n  React2.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n  React2.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\nfunction useNavigateStable() {\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\n  let activeRef = React2.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React2.useCallback(\n    async (to, options = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n      if (!activeRef.current) return;\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        await router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n  return navigate;\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n// lib/server-runtime/warnings.ts\nvar alreadyWarned2 = {};\nfunction warnOnce(condition, message) {\n  if (!condition && !alreadyWarned2[message]) {\n    alreadyWarned2[message] = true;\n    console.warn(message);\n  }\n}\n\n// lib/components.tsx\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React3.createElement(route.Component),\n      Component: void 0\n    });\n  }\n  if (route.HydrateFallback) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\n      HydrateFallback: void 0\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (ENABLE_DEV_WARNINGS) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React3.createElement(route.ErrorBoundary),\n      ErrorBoundary: void 0\n    });\n  }\n  return updates;\n}\nvar hydrationRouteProperties = [\n  \"HydrateFallback\",\n  \"hydrateFallbackElement\"\n];\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\n  }).initialize();\n}\nvar Deferred = class {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n};\nfunction RouterProvider({\n  router,\n  flushSync: reactDomFlushSyncImpl\n}) {\n  let [state, setStateImpl] = React3.useState(router.state);\n  let [pendingState, setPendingState] = React3.useState();\n  let [vtContext, setVtContext] = React3.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React3.useState();\n  let [transition, setTransition] = React3.useState();\n  let [interruption, setInterruption] = React3.useState();\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\n  let setState = React3.useCallback(\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== void 0) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      warnOnce(\n        flushSync === false || reactDomFlushSyncImpl != null,\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\n      );\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\n      warnOnce(\n        viewTransitionOpts == null || isViewTransitionAvailable,\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\n      );\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\n        if (reactDomFlushSyncImpl && flushSync) {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        } else {\n          React3.startTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n      if (reactDomFlushSyncImpl && flushSync) {\n        reactDomFlushSyncImpl(() => {\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n        let t = router.window.document.startViewTransition(() => {\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\n        });\n        t.finished.finally(() => {\n          reactDomFlushSyncImpl(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n        reactDomFlushSyncImpl(() => setTransition(t));\n        return;\n      }\n      if (transition) {\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    },\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\n  );\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React3.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition2 = router.window.document.startViewTransition(async () => {\n        React3.startTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition2.finished.finally(() => {\n        setRenderDfd(void 0);\n        setTransition(void 0);\n        setPendingState(void 0);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition2);\n    }\n  }, [pendingState, renderDfd, router.window]);\n  React3.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  React3.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(void 0);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React3.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state2, opts) => router.navigate(to, {\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      }),\n      replace: (to, state2, opts) => router.navigate(to, {\n        replace: true,\n        state: state2,\n        preventScrollReset: opts?.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React3.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename\n    }),\n    [router, navigator, basename]\n  );\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator\n    },\n    /* @__PURE__ */ React3.createElement(\n      MemoizedDataRoutes,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), null);\n}\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\nfunction DataRoutes({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex\n}) {\n  let historyRef = React3.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React3.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React3.useCallback(\n    (newState) => {\n      React3.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React3.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction Navigate({\n  to,\n  replace: replace2,\n  state,\n  relative\n}) {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n  let { static: isStatic } = React3.useContext(NavigationContext);\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\n  );\n  let { matches } = React3.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n  React3.useEffect(() => {\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\n  }, [navigate, jsonPath, relative, replace2, state]);\n  return null;\n}\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\nfunction Route(_props) {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\nfunction Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = \"POP\" /* Pop */,\n  navigator,\n  static: staticProp = false\n}) {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\n  );\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React3.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {}\n    }),\n    [basename, navigator, staticProp]\n  );\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React3.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\n  );\n  if (locationContext == null) {\n    return null;\n  }\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\n}\nfunction Routes({\n  children,\n  location\n}) {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\nfunction Await({\n  children,\n  errorElement,\n  resolve\n}) {\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\n}\nvar AwaitErrorBoundary = class extends React3.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n  render() {\n    let { children, errorElement, resolve } = this.props;\n    let promise = null;\n    let status = 0 /* pending */;\n    if (!(resolve instanceof Promise)) {\n      status = 1 /* success */;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      status = 2 /* error */;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {\n      });\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if (resolve._tracked) {\n      promise = resolve;\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\n    } else {\n      status = 0 /* pending */;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n    if (status === 2 /* error */ && !errorElement) {\n      throw promise._error;\n    }\n    if (status === 2 /* error */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\n    }\n    if (status === 1 /* success */) {\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\n    }\n    throw promise;\n  }\n};\nfunction ResolveAwait({\n  children\n}) {\n  let data2 = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data2) : children;\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\n}\nfunction createRoutesFromChildren(children, parentPath = []) {\n  let routes = [];\n  React3.Children.forEach(children, (element, index) => {\n    if (!React3.isValidElement(element)) {\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React3.Fragment) {\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n    invariant(\n      element.type === Route,\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\n      HydrateFallback: element.props.HydrateFallback,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n    routes.push(route);\n  });\n  return routes;\n}\nvar createRoutesFromElements = createRoutesFromChildren;\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nfunction withComponentProps(Component4) {\n  return function WithComponentProps() {\n    const props = {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData(),\n      matches: useMatches()\n    };\n    return React3.createElement(Component4, props);\n  };\n}\nfunction withHydrateFallbackProps(HydrateFallback) {\n  return function WithHydrateFallbackProps() {\n    const props = {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData()\n    };\n    return React3.createElement(HydrateFallback, props);\n  };\n}\nfunction withErrorBoundaryProps(ErrorBoundary) {\n  return function WithErrorBoundaryProps() {\n    const props = {\n      params: useParams(),\n      loaderData: useLoaderData(),\n      actionData: useActionData(),\n      error: useRouteError()\n    };\n    return React3.createElement(ErrorBoundary, props);\n  };\n}\n\n// lib/dom/lib.tsx\nimport * as React10 from \"react\";\n\n// lib/dom/dom.ts\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && // Ignore everything but left clicks\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event);\n}\nfunction createSearchParams(init = \"\") {\n  return new URLSearchParams(\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\n      let value = init[key];\n      return memo2.concat(\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n      );\n    }, [])\n  );\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\nvar _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\n    );\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(form, target);\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = void 0;\n  }\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n\n// lib/dom/ssr/components.tsx\nimport * as React9 from \"react\";\n\n// lib/dom/ssr/invariant.ts\nfunction invariant2(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\n// lib/dom/ssr/routeModules.ts\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      route.module\n    );\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    console.error(\n      `Error loading route module \\`${route.module}\\`, reloading page...`\n    );\n    console.error(error);\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\n    import.meta.hot) {\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n    });\n  }\n}\n\n// lib/dom/ssr/links.ts\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map((match) => {\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\n      module?.links?.() || []\n    ];\n  }).flat(2);\n  let preloads = getModuleLinkHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nfunction getRouteCssDescriptors(route) {\n  if (!route.css) return [];\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\n}\nasync function prefetchRouteCss(route) {\n  if (!route.css) return;\n  let descriptors = getRouteCssDescriptors(route);\n  await Promise.all(descriptors.map(prefetchStyleLink));\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [];\n  if (route.css) {\n    descriptors.push(...getRouteCssDescriptors(route));\n  }\n  if (routeModule.links) {\n    descriptors.push(...routeModule.links());\n  }\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n  await Promise.all(styleLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise((resolve) => {\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\n    )) {\n      return resolve();\n    }\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(\n    matches.map(async (match) => {\n      let route = manifest.routes[match.route.id];\n      if (route) {\n        let mod = await loadRouteModule(route, routeModules);\n        return mod.links ? mod.links() : [];\n      }\n      return [];\n    })\n  );\n  return dedupeLinkDescriptors(\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\n    )\n  );\n}\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n  if (mode === \"assets\") {\n    return nextMatches.filter(\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\n    );\n  }\n  if (mode === \"data\") {\n    return nextMatches.filter((match, index) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return false;\n      }\n      if (isNew(match, index) || matchPathChanged(match, index)) {\n        return true;\n      }\n      if (match.route.shouldRevalidate) {\n        let routeChoice = match.route.shouldRevalidate({\n          currentUrl: new URL(\n            location.pathname + location.search + location.hash,\n            window.origin\n          ),\n          currentParams: currentMatches[0]?.params || {},\n          nextUrl: new URL(page, window.origin),\n          nextParams: match.params,\n          defaultShouldRevalidate: true\n        });\n        if (typeof routeChoice === \"boolean\") {\n          return routeChoice;\n        }\n      }\n      return true;\n    });\n  }\n  return [];\n}\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\n  return dedupeHrefs(\n    matches.map((match) => {\n      let route = manifest.routes[match.route.id];\n      if (!route) return [];\n      let hrefs = [route.module];\n      if (route.clientActionModule) {\n        hrefs = hrefs.concat(route.clientActionModule);\n      }\n      if (route.clientLoaderModule) {\n        hrefs = hrefs.concat(route.clientLoaderModule);\n      }\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\n      }\n      if (route.imports) {\n        hrefs = hrefs.concat(route.imports);\n      }\n      return hrefs;\n    }).flat(1)\n  );\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = /* @__PURE__ */ new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({ key, link: descriptor });\n    }\n    return deduped;\n  }, []);\n}\nvar _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== void 0) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\n// lib/dom/ssr/markup.ts\nvar ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return { __html: html };\n}\n\n// lib/dom/ssr/single-fetch.tsx\nimport * as React4 from \"react\";\n\n// vendor/turbo-stream-v2/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred2 = class {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// vendor/turbo-stream-v2/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// vendor/turbo-stream-v2/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = value.length - 1; i > 0; i--)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = value.length - 2; i > 0; i -= 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred2();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// vendor/turbo-stream-v2/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred2();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value) continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder2 = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder2, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder2.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder2.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      if (Object.keys(encoder2.deferred).length) {\n        let raceDone;\n        const racePromise = new Promise((resolve, reject) => {\n          raceDone = resolve;\n          if (signal) {\n            const rejectPromise = () => reject(signal.reason || new Error(\"Signal was aborted.\"));\n            if (signal.aborted) {\n              rejectPromise();\n            } else {\n              signal.addEventListener(\"abort\", (event) => {\n                rejectPromise();\n              });\n            }\n          }\n        });\n        while (Object.keys(encoder2.deferred).length > 0) {\n          for (const [deferredId, deferred] of Object.entries(\n            encoder2.deferred\n          )) {\n            if (seenPromises.has(deferred)) continue;\n            seenPromises.add(\n              // biome-ignore lint/suspicious/noAssignInExpressions: <explanation>\n              encoder2.deferred[Number(deferredId)] = Promise.race([\n                racePromise,\n                deferred\n              ]).then(\n                (resolved) => {\n                  const id2 = flatten.call(encoder2, resolved);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder2.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:${id2}\n`\n                      )\n                    );\n                  } else {\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder2.stringified.length - 1;\n                  }\n                },\n                (reason) => {\n                  if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                    reason = new Error(\"An unknown error occurred\");\n                  }\n                  const id2 = flatten.call(encoder2, reason);\n                  if (Array.isArray(id2)) {\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                      )\n                    );\n                    encoder2.index++;\n                    lastSentIndex++;\n                  } else if (id2 < 0) {\n                    controller.enqueue(\n                      textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                    );\n                  } else {\n                    const values = encoder2.stringified.slice(lastSentIndex + 1).join(\",\");\n                    controller.enqueue(\n                      textEncoder.encode(\n                        `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                      )\n                    );\n                    lastSentIndex = encoder2.stringified.length - 1;\n                  }\n                }\n              ).finally(() => {\n                delete encoder2.deferred[Number(deferredId)];\n              })\n            );\n          }\n          await Promise.race(Object.values(encoder2.deferred));\n        }\n        raceDone();\n      }\n      await Promise.all(Object.values(encoder2.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\n\n// lib/dom/ssr/data.ts\nasync function createRequestInit(request) {\n  let init = { signal: request.signal };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = { \"Content-Type\": contentType };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\n\n// lib/dom/ssr/single-fetch.tsx\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\nvar SingleFetchNoResultError = class extends Error {\n};\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205]);\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let { streamCache } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then((result) => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, { stream: true })\n      };\n    }).catch((e) => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === void 0) {\n    throw promise;\n  }\n  let { done, value } = promise.result;\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\n    \"script\",\n    {\n      nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\n          JSON.stringify(value)\n        )});`\n      }\n    }\n  ) : null;\n  if (done) {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\n      \"script\",\n      {\n        nonce,\n        dangerouslySetInnerHTML: {\n          __html: `window.__reactRouterContext.streamController.close();`\n        }\n      }\n    ));\n  } else {\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\n      StreamTransfer,\n      {\n        context,\n        identifier: identifier + 1,\n        reader,\n        textDecoder,\n        nonce\n      }\n    )));\n  }\n}\nfunction getTurboStreamSingleFetchDataStrategy(getRouter, manifest, routeModules, ssr, basename) {\n  let dataStrategy = getSingleFetchDataStrategyImpl(\n    getRouter,\n    (match) => {\n      let manifestRoute = manifest.routes[match.route.id];\n      invariant2(manifestRoute, \"Route not found in manifest\");\n      let routeModule = routeModules[match.route.id];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        hasShouldRevalidate: Boolean(routeModule?.shouldRevalidate)\n      };\n    },\n    fetchAndDecodeViaTurboStream,\n    ssr,\n    basename\n  );\n  return async (args) => args.unstable_runClientMiddleware(dataStrategy);\n}\nfunction getSingleFetchDataStrategyImpl(getRouter, getRouteInfo, fetchAndDecode, ssr, basename) {\n  return async (args) => {\n    let { request, matches, fetcherKey } = args;\n    let router = getRouter();\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(args, fetchAndDecode, basename);\n    }\n    let foundRevalidatingServerLoader = matches.some((m) => {\n      let { hasLoader, hasClientLoader } = getRouteInfo(m);\n      return m.unstable_shouldCallHandler() && hasLoader && !hasClientLoader;\n    });\n    if (!ssr && !foundRevalidatingServerLoader) {\n      return nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename);\n    }\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename);\n    }\n    return singleFetchLoaderNavigationStrategy(\n      args,\n      router,\n      getRouteInfo,\n      fetchAndDecode,\n      ssr,\n      basename\n    );\n  };\n}\nasync function singleFetchActionStrategy(args, fetchAndDecode, basename) {\n  let actionMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(actionMatch, \"No action match found\");\n  let actionStatus = void 0;\n  let result = await actionMatch.resolve(async (handler) => {\n    let result2 = await handler(async () => {\n      let { data: data2, status } = await fetchAndDecode(args, basename, [\n        actionMatch.route.id\n      ]);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data2, actionMatch.route.id);\n    });\n    return result2;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result) || isDataWithResponseInit(result.result)) {\n    return { [actionMatch.route.id]: result };\n  }\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\nasync function nonSsrStrategy(args, getRouteInfo, fetchAndDecode, basename) {\n  let matchesToLoad = args.matches.filter(\n    (m) => m.unstable_shouldCallHandler()\n  );\n  let results = {};\n  await Promise.all(\n    matchesToLoad.map(\n      (m) => m.resolve(async (handler) => {\n        try {\n          let { hasClientLoader } = getRouteInfo(m);\n          let routeId = m.route.id;\n          let result = hasClientLoader ? await handler(async () => {\n            let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n            return unwrapSingleFetchResult(data2, routeId);\n          }) : await handler();\n          results[m.route.id] = { type: \"data\", result };\n        } catch (e) {\n          results[m.route.id] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  return results;\n}\nasync function singleFetchLoaderNavigationStrategy(args, router, getRouteInfo, fetchAndDecode, ssr, basename) {\n  let routesParams = /* @__PURE__ */ new Set();\n  let foundOptOutRoute = false;\n  let routeDfds = args.matches.map(() => createDeferred2());\n  let singleFetchDfd = createDeferred2();\n  let results = {};\n  let resolvePromise = Promise.all(\n    args.matches.map(\n      async (m, i) => m.resolve(async (handler) => {\n        routeDfds[i].resolve();\n        let routeId = m.route.id;\n        let { hasLoader, hasClientLoader, hasShouldRevalidate } = getRouteInfo(m);\n        let defaultShouldRevalidate = !m.unstable_shouldRevalidateArgs || m.unstable_shouldRevalidateArgs.actionStatus == null || m.unstable_shouldRevalidateArgs.actionStatus < 400;\n        let shouldCall = m.unstable_shouldCallHandler(defaultShouldRevalidate);\n        if (!shouldCall) {\n          foundOptOutRoute || (foundOptOutRoute = m.unstable_shouldRevalidateArgs != null && // This is a revalidation,\n          hasLoader && // for a route with a server loader,\n          hasShouldRevalidate === true);\n          return;\n        }\n        if (hasClientLoader) {\n          if (hasLoader) {\n            foundOptOutRoute = true;\n          }\n          try {\n            let result = await handler(async () => {\n              let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n              return unwrapSingleFetchResult(data2, routeId);\n            });\n            results[routeId] = { type: \"data\", result };\n          } catch (e) {\n            results[routeId] = { type: \"error\", result: e };\n          }\n          return;\n        }\n        if (hasLoader) {\n          routesParams.add(routeId);\n        }\n        try {\n          let result = await handler(async () => {\n            let data2 = await singleFetchDfd.promise;\n            return unwrapSingleFetchResult(data2, routeId);\n          });\n          results[routeId] = { type: \"data\", result };\n        } catch (e) {\n          results[routeId] = { type: \"error\", result: e };\n        }\n      })\n    )\n  );\n  await Promise.all(routeDfds.map((d) => d.promise));\n  let isInitialLoad = !router.state.initialized && router.state.navigation.state === \"idle\";\n  if ((isInitialLoad || routesParams.size === 0) && !window.__reactRouterHdrActive) {\n    singleFetchDfd.resolve({ routes: {} });\n  } else {\n    let targetRoutes = ssr && foundOptOutRoute && routesParams.size > 0 ? [...routesParams.keys()] : void 0;\n    try {\n      let data2 = await fetchAndDecode(args, basename, targetRoutes);\n      singleFetchDfd.resolve(data2.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  await bubbleMiddlewareErrors(\n    singleFetchDfd.promise,\n    args.matches,\n    routesParams,\n    results\n  );\n  return results;\n}\nasync function bubbleMiddlewareErrors(singleFetchPromise, matches, routesParams, results) {\n  try {\n    let middlewareError;\n    let fetchedData = await singleFetchPromise;\n    if (\"routes\" in fetchedData) {\n      for (let match of matches) {\n        if (match.route.id in fetchedData.routes) {\n          let routeResult = fetchedData.routes[match.route.id];\n          if (\"error\" in routeResult) {\n            middlewareError = routeResult.error;\n            break;\n          }\n        }\n      }\n    }\n    if (middlewareError !== void 0) {\n      Array.from(routesParams.values()).forEach((routeId) => {\n        if (results[routeId].result instanceof SingleFetchNoResultError) {\n          results[routeId].result = middlewareError;\n        }\n      });\n    }\n  } catch (e) {\n  }\n}\nasync function singleFetchLoaderFetcherStrategy(args, fetchAndDecode, basename) {\n  let fetcherMatch = args.matches.find((m) => m.unstable_shouldCallHandler());\n  invariant2(fetcherMatch, \"No fetcher match found\");\n  let routeId = fetcherMatch.route.id;\n  let result = await fetcherMatch.resolve(\n    async (handler) => handler(async () => {\n      let { data: data2 } = await fetchAndDecode(args, basename, [routeId]);\n      return unwrapSingleFetchResult(data2, routeId);\n    })\n  );\n  return { [fetcherMatch.route.id]: result };\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl, basename) {\n  let url = typeof reqUrl === \"string\" ? new URL(\n    reqUrl,\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\n    // don't assume window is available\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\n  ) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecodeViaTurboStream(args, basename, targetRoutes) {\n  let { request } = args;\n  let url = singleFetchUrl(request.url, basename);\n  if (request.method === \"GET\") {\n    url = stripIndexParam(url);\n    if (targetRoutes) {\n      url.searchParams.set(\"_routes\", targetRoutes.join(\",\"));\n    }\n  }\n  let res = await fetch(url, await createRequestInit(request));\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\n  }\n  if (res.status === 204 && res.headers.has(\"X-Remix-Redirect\")) {\n    return {\n      status: SINGLE_FETCH_REDIRECT_STATUS,\n      data: {\n        redirect: {\n          redirect: res.headers.get(\"X-Remix-Redirect\"),\n          status: Number(res.headers.get(\"X-Remix-Status\") || \"302\"),\n          revalidate: res.headers.get(\"X-Remix-Revalidate\") === \"true\",\n          reload: res.headers.get(\"X-Remix-Reload-Document\") === \"true\",\n          replace: res.headers.get(\"X-Remix-Replace\") === \"true\"\n        }\n      }\n    };\n  }\n  if (NO_BODY_STATUS_CODES.has(res.status)) {\n    let routes = {};\n    if (targetRoutes && request.method !== \"GET\") {\n      routes[targetRoutes[0]] = { data: void 0 };\n    }\n    return {\n      status: res.status,\n      data: { routes }\n    };\n  }\n  invariant2(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    let data2;\n    if (request.method === \"GET\") {\n      let typed = decoded.value;\n      if (SingleFetchRedirectSymbol in typed) {\n        data2 = { redirect: typed[SingleFetchRedirectSymbol] };\n      } else {\n        data2 = { routes: typed };\n      }\n    } else {\n      let typed = decoded.value;\n      let routeId = targetRoutes?.[0];\n      invariant2(routeId, \"No routeId found for single fetch call decoding\");\n      if (\"redirect\" in typed) {\n        data2 = { redirect: typed };\n      } else {\n        data2 = { routes: { [routeId]: typed } };\n      }\n    }\n    return { status: res.status, data: data2 };\n  } catch (e) {\n    throw new Error(\"Unable to decode turbo-stream response\");\n  }\n}\nfunction decodeViaTurboStream(body, global2) {\n  return decode(body, {\n    plugins: [\n      (type, ...rest) => {\n        if (type === \"SanitizedError\") {\n          let [name, message, stack] = rest;\n          let Constructor = Error;\n          if (name && name in global2 && typeof global2[name] === \"function\") {\n            Constructor = global2[name];\n          }\n          let error = new Constructor(message);\n          error.stack = stack;\n          return { value: error };\n        }\n        if (type === \"ErrorResponse\") {\n          let [data2, status, statusText] = rest;\n          return {\n            value: new ErrorResponseImpl(status, statusText, data2)\n          };\n        }\n        if (type === \"SingleFetchRedirect\") {\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\n        }\n        if (type === \"SingleFetchClassInstance\") {\n          return { value: rest[0] };\n        }\n        if (type === \"SingleFetchFallback\") {\n          return { value: void 0 };\n        }\n      }\n    ]\n  });\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"redirect\" in result) {\n    let {\n      redirect: location,\n      revalidate,\n      reload,\n      replace: replace2,\n      status\n    } = result.redirect;\n    throw redirect(location, {\n      status,\n      headers: {\n        // Three R's of redirecting (lol Veep)\n        ...revalidate ? { \"X-Remix-Revalidate\": \"yes\" } : null,\n        ...reload ? { \"X-Remix-Reload-Document\": \"yes\" } : null,\n        ...replace2 ? { \"X-Remix-Replace\": \"yes\" } : null\n      }\n    });\n  }\n  let routeResult = result.routes[routeId];\n  if (routeResult == null) {\n    throw new SingleFetchNoResultError(\n      `No result found for routeId \"${routeId}\"`\n    );\n  } else if (\"error\" in routeResult) {\n    throw routeResult.error;\n  } else if (\"data\" in routeResult) {\n    return routeResult.data;\n  } else {\n    throw new Error(`Invalid response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred2() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async (val) => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n    reject = async (error) => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {\n      }\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\n// lib/dom/ssr/fog-of-war.ts\nimport * as React8 from \"react\";\n\n// lib/dom/ssr/routes.tsx\nimport * as React7 from \"react\";\n\n// lib/dom/ssr/errorBoundaries.tsx\nimport * as React5 from \"react\";\nvar RemixErrorBoundary = class extends React5.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: props.error || null, location: props.location };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return { error: props.error || null, location: props.location };\n    }\n    return { error: props.error || state.error, location: state.location };\n  }\n  render() {\n    if (this.state.error) {\n      return /* @__PURE__ */ React5.createElement(\n        RemixRootDefaultErrorBoundary,\n        {\n          error: this.state.error,\n          isOutsideRemixApp: true\n        }\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n};\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n        console.log(\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://reactrouter.com/how-to/error-boundary for more information.\"\n        );\n      `\n      }\n    }\n  );\n  if (isRouteErrorResponse(error)) {\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), ENABLE_DEV_WARNINGS ? heyDeveloper : null);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /* @__PURE__ */ React5.createElement(\n    BoundaryShell,\n    {\n      title: \"Application Error!\",\n      isOutsideRemixApp\n    },\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\n    /* @__PURE__ */ React5.createElement(\n      \"pre\",\n      {\n        style: {\n          padding: \"2rem\",\n          background: \"hsla(10, 50%, 50%, 0.1)\",\n          color: \"red\",\n          overflow: \"auto\"\n        }\n      },\n      errorInstance.stack\n    ),\n    heyDeveloper\n  );\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  let { routeModules } = useFrameworkContext();\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\n    \"meta\",\n    {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n    }\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\n}\n\n// lib/dom/ssr/fallback.tsx\nimport * as React6 from \"react\";\nfunction RemixRootDefaultHydrateFallback() {\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, ENABLE_DEV_WARNINGS ? /* @__PURE__ */ React6.createElement(\n    \"script\",\n    {\n      dangerouslySetInnerHTML: {\n        __html: `\n              console.log(\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://reactrouter.com/start/framework/route-module#hydratefallback \" +\n                \"for more information.\"\n              );\n            `\n      }\n    }\n  ) : null);\n}\n\n// lib/dom/ssr/routes.tsx\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component4 = getRouteModuleComponent(routeModule);\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...Component4 ? {\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\n      } : { Component: Component4 },\n      ...ErrorBoundary ? {\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\n      } : { ErrorBoundary },\n      ...HydrateFallback ? {\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\n      } : { HydrateFallback }\n    };\n  }\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModules[route.id];\n    invariant2(\n      routeModule,\n      \"No `routeModule` available to create server routes\"\n    );\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\n      // We don't need middleware/action/shouldRevalidate on these routes since\n      // they're for a static render\n    };\n    let children = createServerRoutes(\n      manifest,\n      routeModules,\n      future,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      spaModeLazyPromise\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\n  return createClientRoutes(\n    manifest,\n    routeModulesCache,\n    initialState,\n    ssr,\n    isSpaMode,\n    \"\",\n    groupRoutesByParentId(manifest),\n    needsRevalidation\n  );\n}\nfunction preventInvalidServerHandlerCall(type, route) {\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let routeModule = routeModulesCache[route.id];\n    function fetchServerHandler(singleFetch) {\n      invariant2(\n        typeof singleFetch === \"function\",\n        \"No single fetch function available for route handler\"\n      );\n      return singleFetch();\n    }\n    function fetchServerLoader(singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandler(singleFetch);\n    }\n    function fetchServerAction(singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandler(singleFetch);\n    }\n    function prefetchModule(modulePath) {\n      import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        modulePath\n      );\n    }\n    function prefetchRouteModuleChunks(route2) {\n      if (route2.clientActionModule) {\n        prefetchModule(route2.clientActionModule);\n      }\n      if (route2.clientLoaderModule) {\n        prefetchModule(route2.clientLoaderModule);\n      }\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        unstable_middleware: routeModule.unstable_clientMiddleware,\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(\n          dataRoute.path,\n          routeModule,\n          route,\n          ssr,\n          needsRevalidation\n        )\n      });\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant2(\n              routeModule,\n              \"No `routeModule` available for critical-route loader\"\n            );\n            if (!routeModule.clientLoader) {\n              return fetchServerLoader(singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              context,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route);\n                if (isHydrationRequest) {\n                  if (hasInitialData) {\n                    return initialData;\n                  }\n                  if (hasInitialError) {\n                    throw initialError;\n                  }\n                }\n                return fetchServerLoader(singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          isHydrationRequest = false;\n        }\n      };\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\n        route.id,\n        routeModule.clientLoader,\n        route.hasLoader,\n        isSpaMode\n      );\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant2(\n            routeModule,\n            \"No `routeModule` available for critical-route action\"\n          );\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            context,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      if (!route.hasClientLoader) {\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          return fetchServerLoader(singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(singleFetch);\n        });\n      }\n      let lazyRoutePromise;\n      async function getLazyRoute() {\n        if (lazyRoutePromise) {\n          return await lazyRoutePromise;\n        }\n        lazyRoutePromise = (async () => {\n          if (route.clientLoaderModule || route.clientActionModule) {\n            await new Promise((resolve) => setTimeout(resolve, 0));\n          }\n          let routeModulePromise = loadRouteModuleWithBlockingLinks(\n            route,\n            routeModulesCache\n          );\n          prefetchRouteModuleChunks(route);\n          return await routeModulePromise;\n        })();\n        return await lazyRoutePromise;\n      }\n      dataRoute.lazy = {\n        loader: route.hasClientLoader ? async () => {\n          let { clientLoader } = route.clientLoaderModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientLoaderModule\n          ) : await getLazyRoute();\n          invariant2(clientLoader, \"No `clientLoader` export found\");\n          return (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route);\n              return fetchServerLoader(singleFetch);\n            }\n          });\n        } : void 0,\n        action: route.hasClientAction ? async () => {\n          let clientActionPromise = route.clientActionModule ? import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientActionModule\n          ) : getLazyRoute();\n          prefetchRouteModuleChunks(route);\n          let { clientAction } = await clientActionPromise;\n          invariant2(clientAction, \"No `clientAction` export found\");\n          return (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route);\n              return fetchServerAction(singleFetch);\n            }\n          });\n        } : void 0,\n        unstable_middleware: route.hasClientMiddleware ? async () => {\n          let { unstable_clientMiddleware } = route.clientMiddlewareModule ? await import(\n            /* @vite-ignore */\n            /* webpackIgnore: true */\n            route.clientMiddlewareModule\n          ) : await getLazyRoute();\n          invariant2(\n            unstable_clientMiddleware,\n            \"No `unstable_clientMiddleware` export found\"\n          );\n          return unstable_clientMiddleware;\n        } : void 0,\n        shouldRevalidate: async () => {\n          let lazyRoute = await getLazyRoute();\n          return getShouldRevalidateFunction(\n            dataRoute.path,\n            lazyRoute,\n            route,\n            ssr,\n            needsRevalidation\n          );\n        },\n        handle: async () => (await getLazyRoute()).handle,\n        // No need to wrap these in layout since the root route is never\n        // loaded via route.lazy()\n        Component: async () => (await getLazyRoute()).Component,\n        ErrorBoundary: route.hasErrorBoundary ? async () => (await getLazyRoute()).ErrorBoundary : void 0\n      };\n    }\n    let children = createClientRoutes(\n      manifest,\n      routeModulesCache,\n      initialState,\n      ssr,\n      isSpaMode,\n      route.id,\n      routesByParentId,\n      needsRevalidation\n    );\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(path, route, manifestRoute, ssr, needsRevalidation) {\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(\n      manifestRoute.id,\n      route.shouldRevalidate,\n      needsRevalidation\n    );\n  }\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\n    let myParams = path ? compilePath(path)[1].map((p) => p.paramName) : [];\n    const didParamsChange = (opts) => myParams.some((p) => opts.currentParams[p] !== opts.nextParams[p]);\n    if (route.shouldRevalidate) {\n      let fn = route.shouldRevalidate;\n      return (opts) => fn({\n        ...opts,\n        defaultShouldRevalidate: didParamsChange(opts)\n      });\n    } else {\n      return (opts) => didParamsChange(opts);\n    }\n  }\n  if (ssr && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\n  }\n  return route.shouldRevalidate;\n}\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return (arg) => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModulePromise = loadRouteModule(route, routeModules);\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\n  let routeModule = await routeModulePromise;\n  await Promise.all([\n    prefetchRouteCssPromise,\n    prefetchStyleLinks(route, routeModule)\n  ]);\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return void 0;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(routeId, clientLoader, hasLoader, isSpaMode) {\n  return isSpaMode && routeId !== \"root\" || clientLoader != null && (clientLoader.hydrate === true || hasLoader !== true);\n}\n\n// lib/dom/ssr/fog-of-war.ts\nvar nextPaths = /* @__PURE__ */ new Set();\nvar discoveredPathsMaxSize = 1e3;\nvar discoveredPaths = /* @__PURE__ */ new Set();\nvar URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(routeDiscovery, ssr) {\n  return routeDiscovery.mode === \"lazy\" && ssr === true;\n}\nfunction getPartialManifest({ sri, ...manifest }, router) {\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n  segments.pop();\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach((path) => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach((m) => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce(\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\n    {}\n  );\n  return {\n    ...manifest,\n    routes: initialRoutes,\n    sri: sri ? true : void 0\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, routeDiscovery, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(routeDiscovery, ssr)) {\n    return void 0;\n  }\n  return async ({ path, patch, signal, fetcherKey }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches(\n      [path],\n      fetcherKey ? window.location.href : path,\n      manifest,\n      routeModules,\n      ssr,\n      isSpaMode,\n      basename,\n      routeDiscovery.manifestPath,\n      patch,\n      signal\n    );\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, routeDiscovery, isSpaMode) {\n  React8.useEffect(() => {\n    if (!isFogOfWarEnabled(routeDiscovery, ssr) || // @ts-expect-error - TS doesn't know about this yet\n    window.navigator?.connection?.saveData === true) {\n      return;\n    }\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\n      if (!discoveredPaths.has(pathname)) {\n        nextPaths.add(pathname);\n      }\n    }\n    async function fetchPatches() {\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(\n          lazyPaths,\n          null,\n          manifest,\n          routeModules,\n          ssr,\n          isSpaMode,\n          router.basename,\n          routeDiscovery.manifestPath,\n          router.patchRoutes\n        );\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    fetchPatches();\n    let observer = new MutationObserver(() => debouncedFetchPatches());\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [ssr, isSpaMode, manifest, routeModules, router, routeDiscovery]);\n}\nfunction getManifestPath(_manifestPath, basename) {\n  let manifestPath = _manifestPath || \"/__manifest\";\n  if (basename == null) {\n    return manifestPath;\n  }\n  return `${basename}${manifestPath}`.replace(/\\/+/g, \"/\");\n}\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, manifestPath, patchRoutes, signal) {\n  let url = new URL(\n    getManifestPath(manifestPath, basename),\n    window.location.origin\n  );\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let serverPatches;\n  try {\n    let res = await fetch(url, { signal });\n    if (!res.ok) {\n      throw new Error(`${res.status} ${res.statusText}`);\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\n      if (!errorReloadPath) {\n        console.warn(\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\n        );\n        return;\n      }\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\n        console.error(\n          \"Unable to discover routes due to manifest version mismatch.\"\n        );\n        return;\n      }\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\n      window.location.href = errorReloadPath;\n      console.warn(\"Detected manifest version mismatch, reloading...\");\n      await new Promise(() => {\n      });\n    } else if (res.status >= 400) {\n      throw new Error(await res.text());\n    }\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\n    serverPatches = await res.json();\n  } catch (e) {\n    if (signal?.aborted) return;\n    throw e;\n  }\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\n    if (route && !knownRoutes.has(route.id)) {\n      acc[route.id] = route;\n    }\n    return acc;\n  }, {});\n  Object.assign(manifest.routes, patches);\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\n  let parentIds = /* @__PURE__ */ new Set();\n  Object.values(patches).forEach((patch) => {\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(\n    (parentId) => patchRoutes(\n      parentId || null,\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\n    )\n  );\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    queue.delete(first);\n  }\n  queue.add(path);\n}\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\n// lib/dom/ssr/components.tsx\nfunction useDataRouterContext2() {\n  let context = React9.useContext(DataRouterContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\n  );\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React9.useContext(DataRouterStateContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\n  );\n  return context;\n}\nvar FrameworkContext = React9.createContext(void 0);\nFrameworkContext.displayName = \"FrameworkContext\";\nfunction useFrameworkContext() {\n  let context = React9.useContext(FrameworkContext);\n  invariant2(\n    context,\n    \"You must render this element inside a <HydratedRouter> element\"\n  );\n  return context;\n}\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let frameworkContext = React9.useContext(FrameworkContext);\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\n  let ref = React9.useRef(null);\n  React9.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = (entries) => {\n        entries.forEach((entry) => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  React9.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  let setIntent = () => {\n    setMaybePrefetch(true);\n  };\n  let cancelIntent = () => {\n    setMaybePrefetch(false);\n    setShouldPrefetch(false);\n  };\n  if (!frameworkContext) {\n    return [false, ref, {}];\n  }\n  if (prefetch !== \"intent\") {\n    return [shouldPrefetch, ref, {}];\n  }\n  return [\n    shouldPrefetch,\n    ref,\n    {\n      onFocus: composeEventHandlers(onFocus, setIntent),\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n    }\n  ];\n}\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\nfunction Links() {\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React9.useMemo(\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\n    [matches, routeModules, manifest]\n  );\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React9.createElement(\"link\", { rel: \"stylesheet\", href: criticalCss.href }) : null, keyedLinks.map(\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  ));\n}\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let { router } = useDataRouterContext2();\n  let matches = React9.useMemo(\n    () => matchRoutes(router.routes, page, router.basename),\n    [router.routes, page, router.basename]\n  );\n  if (!matches) {\n    return null;\n  }\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let { manifest, routeModules } = useFrameworkContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\n  React9.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\n      (links) => {\n        if (!interrupted) {\n          setKeyedPrefetchLinks(links);\n        }\n      }\n    );\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let { manifest, routeModules } = useFrameworkContext();\n  let { basename } = useDataRouterContext2();\n  let { loaderData, matches } = useDataRouterStateContext();\n  let newMatchesForData = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"data\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let newMatchesForAssets = React9.useMemo(\n    () => getNewMatchesForLinks(\n      page,\n      nextMatches,\n      matches,\n      manifest,\n      location,\n      \"assets\"\n    ),\n    [page, nextMatches, matches, manifest, location]\n  );\n  let dataHrefs = React9.useMemo(() => {\n    if (page === location.pathname + location.search + location.hash) {\n      return [];\n    }\n    let routesParams = /* @__PURE__ */ new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach((m) => {\n      let manifestRoute = manifest.routes[m.route.id];\n      if (!manifestRoute || !manifestRoute.hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifestRoute.hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page, basename);\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\n        \"_routes\",\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\n      );\n    }\n    return [url.pathname + url.search];\n  }, [\n    basename,\n    loaderData,\n    location,\n    manifest,\n    newMatchesForData,\n    nextMatches,\n    page,\n    routeModules\n  ]);\n  let moduleHrefs = React9.useMemo(\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\n    [newMatchesForAssets, manifest]\n  );\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\n    // these don't spread `linkProps` because they are full link descriptors\n    // already with their own props\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\n  )));\n}\nfunction Meta() {\n  let { isSpaMode, routeModules } = useFrameworkContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data2 = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data: data2,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule?.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data: data2,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\n      );\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let { tagName, ...rest } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\n        );\n        return null;\n      }\n      let Comp = tagName;\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\n    }\n    if (\"title\" in metaProps) {\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /* @__PURE__ */ React9.createElement(\n          \"script\",\n          {\n            key: `script:ld+json:${json}`,\n            type: \"application/ld+json\",\n            dangerouslySetInnerHTML: { __html: json }\n          }\n        );\n      } catch (err) {\n        return null;\n      }\n    }\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nvar isHydrated = false;\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    isSpaMode,\n    renderMeta,\n    routeDiscovery,\n    ssr\n  } = useFrameworkContext();\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\n  let { matches: routerMatches } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(routeDiscovery, ssr);\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React9.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React9.useMemo(() => {\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\n${matches.map((match, routeIndex) => {\n      let routeVarName = `route${routeIndex}`;\n      let manifestEntry = manifest.routes[match.route.id];\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\n      let {\n        clientActionModule,\n        clientLoaderModule,\n        clientMiddlewareModule,\n        hydrateFallbackModule,\n        module\n      } = manifestEntry;\n      let chunks = [\n        ...clientActionModule ? [\n          {\n            module: clientActionModule,\n            varName: `${routeVarName}_clientAction`\n          }\n        ] : [],\n        ...clientLoaderModule ? [\n          {\n            module: clientLoaderModule,\n            varName: `${routeVarName}_clientLoader`\n          }\n        ] : [],\n        ...clientMiddlewareModule ? [\n          {\n            module: clientMiddlewareModule,\n            varName: `${routeVarName}_clientMiddleware`\n          }\n        ] : [],\n        ...hydrateFallbackModule ? [\n          {\n            module: hydrateFallbackModule,\n            varName: `${routeVarName}_HydrateFallback`\n          }\n        ] : [],\n        { module, varName: `${routeVarName}_main` }\n      ];\n      if (chunks.length === 1) {\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\n      }\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\n    }).join(\"\\n\")}\n  ${enableFogOfWar ? (\n      // Inline a minimal manifest with the SSR matches\n      `window.__reactRouterManifest = ${JSON.stringify(\n        getPartialManifest(manifest, router),\n        null,\n        2\n      )};`\n    ) : \"\"}\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(contextScript),\n        type: void 0\n      }\n    ), /* @__PURE__ */ React9.createElement(\n      \"script\",\n      {\n        ...props,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\n        type: \"module\",\n        async: true\n      }\n    ));\n  }, []);\n  let preloads = isHydrated ? [] : dedupe(\n    manifest.entry.imports.concat(\n      getModuleLinkHrefs(matches, manifest, {\n        includeHydrateFallback: true\n      })\n    )\n  );\n  let sri = typeof manifest.sri === \"object\" ? manifest.sri : {};\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof manifest.sri === \"object\" ? /* @__PURE__ */ React9.createElement(\n    \"script\",\n    {\n      \"rr-importmap\": \"\",\n      type: \"importmap\",\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: JSON.stringify({\n          integrity: sri\n        })\n      }\n    }\n  ) : null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.url,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.url],\n      suppressHydrationWarning: true\n    }\n  ) : null, /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      rel: \"modulepreload\",\n      href: manifest.entry.module,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[manifest.entry.module],\n      suppressHydrationWarning: true\n    }\n  ), preloads.map((path) => /* @__PURE__ */ React9.createElement(\n    \"link\",\n    {\n      key: path,\n      rel: \"modulepreload\",\n      href: path,\n      crossOrigin: props.crossOrigin,\n      integrity: sri[path],\n      suppressHydrationWarning: true\n    }\n  )), initialScripts);\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\nfunction mergeRefs(...refs) {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n// lib/dom/lib.tsx\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\ntry {\n  if (isBrowser) {\n    window.__reactRouterVersion = \"7.6.3\";\n  }\n} catch (e) {\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts?.basename,\n    unstable_getContext: opts?.unstable_getContext,\n    future: opts?.future,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    hydrationRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors)\n    };\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction BrowserRouter({\n  basename,\n  children,\n  window: window2\n}) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HashRouter({ basename, children, window: window2 }) {\n  let historyRef = React10.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nfunction HistoryRouter({\n  basename,\n  children,\n  history\n}) {\n  let [state, setStateImpl] = React10.useState({\n    action: history.action,\n    location: history.location\n  });\n  let setState = React10.useCallback(\n    (newState) => {\n      React10.startTransition(() => setStateImpl(newState));\n    },\n    [setStateImpl]\n  );\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /* @__PURE__ */ React10.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    }\n  );\n}\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar Link = React10.forwardRef(\n  function LinkWithRef({\n    onClick,\n    discover = \"render\",\n    prefetch = \"none\",\n    relative,\n    reloadDocument,\n    replace: replace2,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition,\n    ...rest\n  }, forwardedRef) {\n    let { basename } = React10.useContext(NavigationContext);\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && isAbsolute) {\n      absoluteHref = to;\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n    let href2 = useHref(to, { relative });\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\n      prefetch,\n      rest\n    );\n    let internalOnClick = useLinkClickHandler(to, {\n      replace: replace2,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    let link = (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      /* @__PURE__ */ React10.createElement(\n        \"a\",\n        {\n          ...rest,\n          ...prefetchHandlers,\n          href: absoluteHref || href2,\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\n          ref: mergeRefs(forwardedRef, prefetchRef),\n          target,\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n        }\n      )\n    );\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\n  }\n);\nLink.displayName = \"Link\";\nvar NavLink = React10.forwardRef(\n  function NavLinkWithRef({\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children,\n    ...rest\n  }, ref) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React10.useContext(DataRouterStateContext);\n    let { navigator, basename } = React10.useContext(NavigationContext);\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null\n      ].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /* @__PURE__ */ React10.createElement(\n      Link,\n      {\n        ...rest,\n        \"aria-current\": ariaCurrent,\n        className,\n        ref,\n        style,\n        to,\n        viewTransition\n      },\n      typeof children === \"function\" ? children(renderProps) : children\n    );\n  }\n);\nNavLink.displayName = \"NavLink\";\nvar Form = React10.forwardRef(\n  ({\n    discover = \"render\",\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace: replace2,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition,\n    ...props\n  }, forwardedRef) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\n    let submitHandler = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace: replace2,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /* @__PURE__ */ React10.createElement(\n      \"form\",\n      {\n        ref: forwardedRef,\n        method: formMethod,\n        action: formAction,\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\n        ...props,\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\n      }\n    );\n  }\n);\nForm.displayName = \"Form\";\nfunction ScrollRestoration({\n  getKey,\n  storageKey,\n  ...props\n}) {\n  let remixContext = React10.useContext(FrameworkContext);\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  useScrollRestoration({ getKey, storageKey });\n  let ssrKey = React10.useMemo(\n    () => {\n      if (!remixContext || !getKey) return null;\n      let userKey = getScrollRestorationKey(\n        location,\n        matches,\n        basename,\n        getKey\n      );\n      return userKey !== location.key ? userKey : null;\n    },\n    // Nah, we only need this the first time for the SSR render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  if (!remixContext || remixContext.isSpaMode) {\n    return null;\n  }\n  let restoreScroll = ((storageKey2, restoreKey) => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({ key }, \"\");\n    }\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\n      let storedY = positions[restoreKey || window.history.state.key];\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(storageKey2);\n    }\n  }).toString();\n  return /* @__PURE__ */ React10.createElement(\n    \"script\",\n    {\n      ...props,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: `(${restoreScroll})(${JSON.stringify(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        )}, ${JSON.stringify(ssrKey)})`\n      }\n    }\n  );\n}\nScrollRestoration.displayName = \"ScrollRestoration\";\nfunction getDataRouterConsoleError2(hookName) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\n}\nfunction useDataRouterContext3(hookName) {\n  let ctx = React10.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError2(hookName));\n  return ctx;\n}\nfunction useDataRouterState2(hookName) {\n  let state = React10.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError2(hookName));\n  return state;\n}\nfunction useLinkClickHandler(to, {\n  target,\n  replace: replaceProp,\n  state,\n  preventScrollReset,\n  relative,\n  viewTransition\n} = {}) {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n  return React10.useCallback(\n    (event) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\n        navigate(to, {\n          replace: replace2,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition\n    ]\n  );\n}\nfunction useSearchParams(defaultInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\n  );\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React10.useRef(false);\n  let location = useLocation();\n  let searchParams = React10.useMemo(\n    () => (\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      )\n    ),\n    [location.search]\n  );\n  let navigate = useNavigate();\n  let setSearchParams = React10.useCallback(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n  return [searchParams, setSearchParams];\n}\nvar fetcherId = 0;\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\nfunction useSubmit() {\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\n  let { basename } = React10.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n  return React10.useCallback(\n    async (target, options = {}) => {\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        await router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        await router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\nfunction useFormAction(action, { relative } = {}) {\n  let { basename } = React10.useContext(NavigationContext);\n  let routeContext = React10.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n  let [match] = routeContext.matches.slice(-1);\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n  let location = useLocation();\n  if (action == null) {\n    path.search = location.search;\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction useFetcher({\n  key\n} = {}) {\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\n  let fetcherData = React10.useContext(FetchersContext);\n  let route = React10.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n  let defaultKey = React10.useId();\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  }\n  React10.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => router.deleteFetcher(fetcherKey);\n  }, [router, fetcherKey]);\n  let load = React10.useCallback(\n    async (href2, opts) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      await router.fetch(fetcherKey, routeId, href2, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n  let submitImpl = useSubmit();\n  let submit = React10.useCallback(\n    async (target, opts) => {\n      await submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n  let FetcherForm = React10.useMemo(() => {\n    let FetcherForm2 = React10.forwardRef(\n      (props, ref) => {\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\n      }\n    );\n    FetcherForm2.displayName = \"fetcher.Form\";\n    return FetcherForm2;\n  }, [fetcherKey]);\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data2 = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React10.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data: data2\n    }),\n    [FetcherForm, submit, load, fetcher, data2]\n  );\n  return fetcherWithComponents;\n}\nfunction useFetchers() {\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key\n  }));\n}\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\n  let key = null;\n  if (getKey) {\n    if (basename !== \"/\") {\n      key = getKey(\n        {\n          ...location,\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        },\n        matches\n      );\n    } else {\n      key = getKey(location, matches);\n    }\n  }\n  if (key == null) {\n    key = location.key;\n  }\n  return key;\n}\nfunction useScrollRestoration({\n  getKey,\n  storageKey\n} = {}) {\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\n    \"useScrollRestoration\" /* UseScrollRestoration */\n  );\n  let { basename } = React10.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  React10.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  usePageHide(\n    React10.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\n  );\n  if (typeof document !== \"undefined\") {\n    React10.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n      }\n    }, [storageKey]);\n    React10.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    React10.useLayoutEffect(() => {\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      if (preventScrollReset === true) {\n        return;\n      }\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\nfunction useBeforeUnload(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePageHide(callback, options) {\n  let { capture } = options || {};\n  React10.useEffect(() => {\n    let opts = capture != null ? { capture } : void 0;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\nfunction usePrompt({\n  when,\n  message\n}) {\n  let blocker = useBlocker(when);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React10.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\nfunction useViewTransitionState(to, opts = {}) {\n  let vtContext = React10.useContext(ViewTransitionContext);\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n  let { basename } = useDataRouterContext3(\n    \"useViewTransitionState\" /* useViewTransitionState */\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n\n// lib/dom/server.tsx\nimport * as React11 from \"react\";\nfunction StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\"\n}) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let action = \"POP\" /* Pop */;\n  let location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state != null ? locationProp.state : null,\n    key: locationProp.key || \"default\"\n  };\n  let staticNavigator = getStatelessNavigator();\n  return /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename,\n      children,\n      location,\n      navigationType: action,\n      navigator: staticNavigator,\n      static: true\n    }\n  );\n}\nfunction StaticRouterProvider({\n  context,\n  router,\n  hydrate: hydrate2 = true,\n  nonce\n}) {\n  invariant(\n    router && context,\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\n  );\n  let dataRouterContext = {\n    router,\n    navigator: getStatelessNavigator(),\n    static: true,\n    staticContext: context,\n    basename: context.basename || \"/\"\n  };\n  let fetchersContext = /* @__PURE__ */ new Map();\n  let hydrateScript = \"\";\n  if (hydrate2 !== false) {\n    let data2 = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors(context.errors)\n    };\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\n  }\n  let { state } = dataRouterContext.router;\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\n    Router,\n    {\n      basename: dataRouterContext.basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: dataRouterContext.navigator,\n      static: dataRouterContext.static\n    },\n    /* @__PURE__ */ React11.createElement(\n      DataRoutes2,\n      {\n        routes: router.routes,\n        future: router.future,\n        state\n      }\n    )\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\n    \"script\",\n    {\n      suppressHydrationWarning: true,\n      nonce,\n      dangerouslySetInnerHTML: { __html: hydrateScript }\n    }\n  ) : null);\n}\nfunction DataRoutes2({\n  routes,\n  future,\n  state\n}) {\n  return useRoutesImpl(routes, void 0, state, future);\n}\nfunction serializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      serialized[key] = {\n        message: val.message,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.\n        ...val.name !== \"Error\" ? {\n          __subType: val.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nfunction getStatelessNavigator() {\n  return {\n    createHref,\n    encodeLocation,\n    push(to) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\n      );\n    },\n    go(delta) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\n      );\n    }\n  };\n}\nfunction createStaticHandler2(routes, opts) {\n  return createStaticHandler(routes, {\n    ...opts,\n    mapRouteProperties\n  });\n}\nfunction createStaticRouter(routes, context, opts = {}) {\n  let manifest = {};\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    void 0,\n    manifest\n  );\n  let matches = context.matches.map((match) => {\n    let route = manifest[match.route.id] || match.route;\n    return {\n      ...match,\n      route\n    };\n  });\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\n  return {\n    get basename() {\n      return context.basename;\n    },\n    get future() {\n      return {\n        unstable_middleware: false,\n        ...opts?.future\n      };\n    },\n    get state() {\n      return {\n        historyAction: \"POP\" /* Pop */,\n        location: context.location,\n        matches,\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: context.errors,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        restoreScrollPosition: null,\n        preventScrollReset: false,\n        revalidation: \"idle\",\n        fetchers: /* @__PURE__ */ new Map(),\n        blockers: /* @__PURE__ */ new Map()\n      };\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return void 0;\n    },\n    initialize() {\n      throw msg(\"initialize\");\n    },\n    subscribe() {\n      throw msg(\"subscribe\");\n    },\n    enableScrollRestoration() {\n      throw msg(\"enableScrollRestoration\");\n    },\n    navigate() {\n      throw msg(\"navigate\");\n    },\n    fetch() {\n      throw msg(\"fetch\");\n    },\n    revalidate() {\n      throw msg(\"revalidate\");\n    },\n    createHref,\n    encodeLocation,\n    getFetcher() {\n      return IDLE_FETCHER;\n    },\n    deleteFetcher() {\n      throw msg(\"deleteFetcher\");\n    },\n    dispose() {\n      throw msg(\"dispose\");\n    },\n    getBlocker() {\n      return IDLE_BLOCKER;\n    },\n    deleteBlocker() {\n      throw msg(\"deleteBlocker\");\n    },\n    patchRoutes() {\n      throw msg(\"patchRoutes\");\n    },\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\n    _internalSetRoutes() {\n      throw msg(\"_internalSetRoutes\");\n    }\n  };\n}\nfunction createHref(to) {\n  return typeof to === \"string\" ? to : createPath(to);\n}\nfunction encodeLocation(to) {\n  let href2 = typeof to === \"string\" ? to : createPath(to);\n  href2 = href2.replace(/ $/, \"%20\");\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\n  return {\n    pathname: encoded.pathname,\n    search: encoded.search,\n    hash: encoded.hash\n  };\n}\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nvar ESCAPE_LOOKUP2 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\nfunction htmlEscape(str) {\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\n}\n\n// lib/dom/ssr/server.tsx\nimport * as React12 from \"react\";\nfunction ServerRouter({\n  context,\n  url,\n  nonce\n}) {\n  if (typeof url === \"string\") {\n    url = new URL(url);\n  }\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\n  let routes = createServerRoutes(\n    manifest.routes,\n    routeModules,\n    context.future,\n    context.isSpaMode\n  );\n  context.staticHandlerContext.loaderData = {\n    ...context.staticHandlerContext.loaderData\n  };\n  for (let match of context.staticHandlerContext.matches) {\n    let routeId = match.route.id;\n    let route = routeModules[routeId];\n    let manifestRoute = context.manifest.routes[routeId];\n    if (route && manifestRoute && shouldHydrateRouteLoader(\n      routeId,\n      route.clientLoader,\n      manifestRoute.hasLoader,\n      context.isSpaMode\n    ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n      delete context.staticHandlerContext.loaderData[routeId];\n    }\n  }\n  let router = createStaticRouter(routes, context.staticHandlerContext);\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\n    FrameworkContext.Provider,\n    {\n      value: {\n        manifest,\n        routeModules,\n        criticalCss,\n        serverHandoffString,\n        future: context.future,\n        ssr: context.ssr,\n        isSpaMode: context.isSpaMode,\n        routeDiscovery: context.routeDiscovery,\n        serializeError: context.serializeError,\n        renderMeta: context.renderMeta\n      }\n    },\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\n      StaticRouterProvider,\n      {\n        router,\n        context: context.staticHandlerContext,\n        hydrate: false\n      }\n    ))\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\n    StreamTransfer,\n    {\n      context,\n      identifier: 0,\n      reader: context.serverHandoffStream.getReader(),\n      textDecoder: new TextDecoder(),\n      nonce\n    }\n  )) : null);\n}\n\n// lib/dom/ssr/routes-test-stub.tsx\nimport * as React13 from \"react\";\nfunction createRoutesStub(routes, unstable_getContext) {\n  return function RoutesTestStub({\n    initialEntries,\n    initialIndex,\n    hydrationData,\n    future\n  }) {\n    let routerRef = React13.useRef();\n    let remixContextRef = React13.useRef();\n    if (routerRef.current == null) {\n      remixContextRef.current = {\n        future: {\n          unstable_subResourceIntegrity: future?.unstable_subResourceIntegrity === true,\n          unstable_middleware: future?.unstable_middleware === true\n        },\n        manifest: {\n          routes: {},\n          entry: { imports: [], module: \"\" },\n          url: \"\",\n          version: \"\"\n        },\n        routeModules: {},\n        ssr: false,\n        isSpaMode: false,\n        routeDiscovery: { mode: \"lazy\", manifestPath: \"/__manifest\" }\n      };\n      let patched = processRoutes(\n        // @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`\n        // types compared to `AgnosticRouteObject`\n        convertRoutesToDataRoutes(routes, (r) => r),\n        remixContextRef.current.manifest,\n        remixContextRef.current.routeModules\n      );\n      routerRef.current = createMemoryRouter(patched, {\n        unstable_getContext,\n        initialEntries,\n        initialIndex,\n        hydrationData\n      });\n    }\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\n  };\n}\nfunction processRoutes(routes, manifest, routeModules, parentId) {\n  return routes.map((route) => {\n    if (!route.id) {\n      throw new Error(\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\n      );\n    }\n    let newRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      Component: route.Component ? withComponentProps(route.Component) : void 0,\n      HydrateFallback: route.HydrateFallback ? withHydrateFallbackProps(route.HydrateFallback) : void 0,\n      ErrorBoundary: route.ErrorBoundary ? withErrorBoundaryProps(route.ErrorBoundary) : void 0,\n      action: route.action,\n      loader: route.loader,\n      handle: route.handle,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    let entryRoute = {\n      id: route.id,\n      path: route.path,\n      index: route.index,\n      parentId,\n      hasAction: route.action != null,\n      hasLoader: route.loader != null,\n      // When testing routes, you should be stubbing loader/action/middleware,\n      // not trying to re-implement the full loader/clientLoader/SSR/hydration\n      // flow. That is better tested via E2E tests.\n      hasClientAction: false,\n      hasClientLoader: false,\n      hasClientMiddleware: false,\n      hasErrorBoundary: route.ErrorBoundary != null,\n      // any need for these?\n      module: \"build/stub-path-to-module.js\",\n      clientActionModule: void 0,\n      clientLoaderModule: void 0,\n      clientMiddlewareModule: void 0,\n      hydrateFallbackModule: void 0\n    };\n    manifest.routes[newRoute.id] = entryRoute;\n    routeModules[route.id] = {\n      default: newRoute.Component || Outlet,\n      ErrorBoundary: newRoute.ErrorBoundary || void 0,\n      handle: route.handle,\n      links: route.links,\n      meta: route.meta,\n      shouldRevalidate: route.shouldRevalidate\n    };\n    if (route.children) {\n      newRoute.children = processRoutes(\n        route.children,\n        manifest,\n        routeModules,\n        newRoute.id\n      );\n    }\n    return newRoute;\n  });\n}\n\n// lib/server-runtime/cookies.ts\nimport { parse, serialize } from \"cookie\";\n\n// lib/server-runtime/crypto.ts\nvar encoder = /* @__PURE__ */ new TextEncoder();\nvar sign = async (value, secret) => {\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"sign\"]);\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\n    /=+$/,\n    \"\"\n  );\n  return value + \".\" + hash;\n};\nvar unsign = async (cookie, secret) => {\n  let index = cookie.lastIndexOf(\".\");\n  let value = cookie.slice(0, index);\n  let hash = cookie.slice(index + 1);\n  let data2 = encoder.encode(value);\n  let key = await createKey2(secret, [\"verify\"]);\n  let signature = byteStringToUint8Array(atob(hash));\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\n  return valid ? value : false;\n};\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\n  \"raw\",\n  encoder.encode(secret),\n  { name: \"HMAC\", hash: \"SHA-256\" },\n  false,\n  usages\n);\nfunction byteStringToUint8Array(byteString) {\n  let array = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    array[i] = byteString.charCodeAt(i);\n  }\n  return array;\n}\n\n// lib/server-runtime/cookies.ts\nvar createCookie = (name, cookieOptions = {}) => {\n  let { secrets = [], ...options } = {\n    path: \"/\",\n    sameSite: \"lax\",\n    ...cookieOptions\n  };\n  warnOnceAboutExpiresCookie(name, options.expires);\n  return {\n    get name() {\n      return name;\n    },\n    get isSigned() {\n      return secrets.length > 0;\n    },\n    get expires() {\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\n    },\n    async parse(cookieHeader, parseOptions) {\n      if (!cookieHeader) return null;\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\n      if (name in cookies) {\n        let value = cookies[name];\n        if (typeof value === \"string\" && value !== \"\") {\n          let decoded = await decodeCookieValue(value, secrets);\n          return decoded;\n        } else {\n          return \"\";\n        }\n      } else {\n        return null;\n      }\n    },\n    async serialize(value, serializeOptions) {\n      return serialize(\n        name,\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\n        {\n          ...options,\n          ...serializeOptions\n        }\n      );\n    }\n  };\n};\nvar isCookie = (object) => {\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\n};\nasync function encodeCookieValue(value, secrets) {\n  let encoded = encodeData(value);\n  if (secrets.length > 0) {\n    encoded = await sign(encoded, secrets[0]);\n  }\n  return encoded;\n}\nasync function decodeCookieValue(value, secrets) {\n  if (secrets.length > 0) {\n    for (let secret of secrets) {\n      let unsignedValue = await unsign(value, secret);\n      if (unsignedValue !== false) {\n        return decodeData(unsignedValue);\n      }\n    }\n    return null;\n  }\n  return decodeData(value);\n}\nfunction encodeData(value) {\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\n}\nfunction decodeData(value) {\n  try {\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\n  } catch (error) {\n    return {};\n  }\n}\nfunction myEscape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, code;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (/[\\w*+\\-./@]/.exec(chr)) {\n      result += chr;\n    } else {\n      code = chr.charCodeAt(0);\n      if (code < 256) {\n        result += \"%\" + hex(code, 2);\n      } else {\n        result += \"%u\" + hex(code, 4).toUpperCase();\n      }\n    }\n  }\n  return result;\n}\nfunction hex(code, length) {\n  let result = code.toString(16);\n  while (result.length < length) result = \"0\" + result;\n  return result;\n}\nfunction myUnescape(value) {\n  let str = value.toString();\n  let result = \"\";\n  let index = 0;\n  let chr, part;\n  while (index < str.length) {\n    chr = str.charAt(index++);\n    if (chr === \"%\") {\n      if (str.charAt(index) === \"u\") {\n        part = str.slice(index + 1, index + 5);\n        if (/^[\\da-f]{4}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 5;\n          continue;\n        }\n      } else {\n        part = str.slice(index, index + 2);\n        if (/^[\\da-f]{2}$/i.exec(part)) {\n          result += String.fromCharCode(parseInt(part, 16));\n          index += 2;\n          continue;\n        }\n      }\n    }\n    result += chr;\n  }\n  return result;\n}\nfunction warnOnceAboutExpiresCookie(name, expires) {\n  warnOnce(\n    !expires,\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\n  );\n}\n\n// lib/server-runtime/entry.ts\nfunction createEntryRouteModules(manifest) {\n  return Object.keys(manifest).reduce((memo2, routeId) => {\n    let route = manifest[routeId];\n    if (route) {\n      memo2[routeId] = route.module;\n    }\n    return memo2;\n  }, {});\n}\n\n// lib/server-runtime/mode.ts\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\n  ServerMode2[\"Development\"] = \"development\";\n  ServerMode2[\"Production\"] = \"production\";\n  ServerMode2[\"Test\"] = \"test\";\n  return ServerMode2;\n})(ServerMode || {});\nfunction isServerMode(value) {\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\n}\n\n// lib/server-runtime/errors.ts\nfunction sanitizeError(error, serverMode) {\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\n    let sanitized = new Error(\"Unexpected Server Error\");\n    sanitized.stack = void 0;\n    return sanitized;\n  }\n  return error;\n}\nfunction sanitizeErrors(errors, serverMode) {\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\n  }, {});\n}\nfunction serializeError(error, serverMode) {\n  let sanitized = sanitizeError(error, serverMode);\n  return {\n    message: sanitized.message,\n    stack: sanitized.stack\n  };\n}\nfunction serializeErrors2(errors, serverMode) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (isRouteErrorResponse(val)) {\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\n    } else if (val instanceof Error) {\n      let sanitized = sanitizeError(val, serverMode);\n      serialized[key] = {\n        message: sanitized.message,\n        stack: sanitized.stack,\n        __type: \"Error\",\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\n        // can re-create the same type during hydration.  This will only apply\n        // in dev mode since all production errors are sanitized to normal\n        // Error instances\n        ...sanitized.name !== \"Error\" ? {\n          __subType: sanitized.name\n        } : {}\n      };\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/server-runtime/routeMatching.ts\nfunction matchServerRoutes(routes, pathname, basename) {\n  let matches = matchRoutes(\n    routes,\n    pathname,\n    basename\n  );\n  if (!matches) return null;\n  return matches.map((match) => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\n// lib/server-runtime/data.ts\nasync function callRouteHandler(handler, args) {\n  let result = await handler({\n    request: stripRoutesParam(stripIndexParam2(args.request)),\n    params: args.params,\n    context: args.context\n  });\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\n    throw new Response(null, result.init);\n  }\n  return result;\n}\nfunction stripIndexParam2(request) {\n  let url = new URL(request.url);\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\nfunction stripRoutesParam(request) {\n  let url = new URL(request.url);\n  url.searchParams.delete(\"_routes\");\n  let init = {\n    method: request.method,\n    body: request.body,\n    headers: request.headers,\n    signal: request.signal\n  };\n  if (init.body) {\n    init.duplex = \"half\";\n  }\n  return new Request(url.href, init);\n}\n\n// lib/server-runtime/invariant.ts\nfunction invariant3(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    console.error(\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\n    );\n    throw new Error(message);\n  }\n}\n\n// lib/server-runtime/dev.ts\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\nfunction setDevServerHooks(devServerHooks) {\n  globalThis[globalDevServerHooksKey] = devServerHooks;\n}\nfunction getDevServerHooks() {\n  return globalThis[globalDevServerHooksKey];\n}\nfunction getBuildTimeHeader(request, headerName) {\n  if (typeof process !== \"undefined\") {\n    try {\n      if (process.env?.IS_RR_BUILD_REQUEST === \"yes\") {\n        return request.headers.get(headerName);\n      }\n    } catch (e) {\n    }\n  }\n  return null;\n}\n\n// lib/server-runtime/routes.ts\nfunction groupRoutesByParentId2(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach((route) => {\n    if (route) {\n      let parentId = route.parentId || \"\";\n      if (!routes[parentId]) {\n        routes[parentId] = [];\n      }\n      routes[parentId].push(route);\n    }\n  });\n  return routes;\n}\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => ({\n    ...route,\n    children: createRoutes(manifest, route.id, routesByParentId)\n  }));\n}\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\n  return (routesByParentId[parentId] || []).map((route) => {\n    let commonRoute = {\n      // Always include root due to default boundaries\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\n      id: route.id,\n      path: route.path,\n      unstable_middleware: route.module.unstable_middleware,\n      // Need to use RR's version in the param typed here to permit the optional\n      // context even though we know it'll always be provided in remix\n      loader: route.module.loader ? async (args) => {\n        let preRenderedData = getBuildTimeHeader(\n          args.request,\n          \"X-React-Router-Prerender-Data\"\n        );\n        if (preRenderedData != null) {\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\n          invariant3(encoded, \"Missing prerendered data for route\");\n          let uint8array = new TextEncoder().encode(encoded);\n          let stream = new ReadableStream({\n            start(controller) {\n              controller.enqueue(uint8array);\n              controller.close();\n            }\n          });\n          let decoded = await decodeViaTurboStream(stream, global);\n          let data2 = decoded.value;\n          if (data2 && SingleFetchRedirectSymbol in data2) {\n            let result = data2[SingleFetchRedirectSymbol];\n            let init = { status: result.status };\n            if (result.reload) {\n              throw redirectDocument(result.redirect, init);\n            } else if (result.replace) {\n              throw replace(result.redirect, init);\n            } else {\n              throw redirect(result.redirect, init);\n            }\n          } else {\n            invariant3(\n              data2 && route.id in data2,\n              \"Unable to decode prerendered data\"\n            );\n            let result = data2[route.id];\n            invariant3(\n              \"data\" in result,\n              \"Unable to process prerendered data\"\n            );\n            return result.data;\n          }\n        }\n        let val = await callRouteHandler(route.module.loader, args);\n        return val;\n      } : void 0,\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\n      handle: route.module.handle\n    };\n    return route.index ? {\n      index: true,\n      ...commonRoute\n    } : {\n      caseSensitive: route.caseSensitive,\n      children: createStaticHandlerDataRoutes(\n        manifest,\n        future,\n        route.id,\n        routesByParentId\n      ),\n      ...commonRoute\n    };\n  });\n}\n\n// lib/server-runtime/markup.ts\nvar ESCAPE_LOOKUP3 = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml2(html) {\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\n}\n\n// lib/server-runtime/serverHandoff.ts\nfunction createServerHandoffString(serverHandoff) {\n  return escapeHtml2(JSON.stringify(serverHandoff));\n}\n\n// lib/server-runtime/headers.ts\nimport { splitCookiesString } from \"set-cookie-parser\";\nfunction getDocumentHeaders(build, context) {\n  return getDocumentHeadersImpl(context, (m) => {\n    let route = build.routes[m.route.id];\n    invariant3(route, `Route with id \"${m.route.id}\" not found in build`);\n    return route.module.headers;\n  });\n}\nfunction getDocumentHeadersImpl(context, getRouteHeadersFn) {\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\n  let errorHeaders;\n  if (boundaryIdx >= 0) {\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\n    context.matches.slice(boundaryIdx).some((match) => {\n      let id = match.route.id;\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\n        errorHeaders = actionHeaders[id];\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\n        errorHeaders = loaderHeaders[id];\n      }\n      return errorHeaders != null;\n    });\n  }\n  return matches.reduce((parentHeaders, match, idx) => {\n    let { id } = match.route;\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\n    let actionHeaders = context.actionHeaders[id] || new Headers();\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\n    let headersFn = getRouteHeadersFn(match);\n    if (headersFn == null) {\n      let headers2 = new Headers(parentHeaders);\n      if (includeErrorCookies) {\n        prependCookies(errorHeaders, headers2);\n      }\n      prependCookies(actionHeaders, headers2);\n      prependCookies(loaderHeaders, headers2);\n      return headers2;\n    }\n    let headers = new Headers(\n      typeof headersFn === \"function\" ? headersFn({\n        loaderHeaders,\n        parentHeaders,\n        actionHeaders,\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\n      }) : headersFn\n    );\n    if (includeErrorCookies) {\n      prependCookies(errorHeaders, headers);\n    }\n    prependCookies(actionHeaders, headers);\n    prependCookies(loaderHeaders, headers);\n    prependCookies(parentHeaders, headers);\n    return headers;\n  }, new Headers());\n}\nfunction prependCookies(parentHeaders, childHeaders) {\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\n  if (parentSetCookieString) {\n    let cookies = splitCookiesString(parentSetCookieString);\n    let childCookies = new Set(childHeaders.getSetCookie());\n    cookies.forEach((cookie) => {\n      if (!childCookies.has(cookie)) {\n        childHeaders.append(\"Set-Cookie\", cookie);\n      }\n    });\n  }\n}\n\n// lib/server-runtime/single-fetch.ts\nvar SERVER_NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([\n  ...NO_BODY_STATUS_CODES,\n  304\n]);\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: getSingleFetchRedirect(\n            context.statusCode,\n            headers,\n            build.basename\n          ),\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let singleFetchResult;\n      if (context.errors) {\n        singleFetchResult = { error: Object.values(context.errors)[0] };\n      } else {\n        singleFetchResult = {\n          data: Object.values(context.actionData || {})[0]\n        };\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: singleFetchResult,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...request.body ? { duplex: \"half\" } : void 0\n    });\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      skipRevalidation: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: getSingleFetchRedirect(\n          result.status,\n          result.headers,\n          build.basename\n        ),\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { error },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let respond2 = function(context) {\n      let headers = getDocumentHeaders(build, context);\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n        return generateSingleFetchResponse(request, build, serverMode, {\n          result: {\n            [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n              context.statusCode,\n              headers,\n              build.basename\n            )\n          },\n          headers,\n          status: SINGLE_FETCH_REDIRECT_STATUS\n        });\n      }\n      if (context.errors) {\n        Object.values(context.errors).forEach((err) => {\n          if (!isRouteErrorResponse(err) || err.error) {\n            handleError(err);\n          }\n        });\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let results = {};\n      let loadedMatches = new Set(\n        context.matches.filter(\n          (m) => loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null\n        ).map((m) => m.route.id)\n      );\n      if (context.errors) {\n        for (let [id, error] of Object.entries(context.errors)) {\n          results[id] = { error };\n        }\n      }\n      for (let [id, data2] of Object.entries(context.loaderData)) {\n        if (!(id in results) && loadedMatches.has(id)) {\n          results[id] = { data: data2 };\n        }\n      }\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: results,\n        headers,\n        status: context.statusCode\n      });\n    };\n    var respond = respond2;\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let routesParam = new URL(request.url).searchParams.get(\"_routes\");\n    let loadRouteIds = routesParam ? new Set(routesParam.split(\",\")) : null;\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      filterMatchesToLoad: (m) => !loadRouteIds || loadRouteIds.has(m.route.id),\n      skipLoaderErrorBubbling: true,\n      unstable_respond: respond2\n    });\n    if (!isResponse(result)) {\n      result = respond2(result);\n    }\n    if (isRedirectResponse(result)) {\n      return generateSingleFetchResponse(request, build, serverMode, {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\n            result.status,\n            result.headers,\n            build.basename\n          )\n        },\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      });\n    }\n    return result;\n  } catch (error) {\n    handleError(error);\n    return generateSingleFetchResponse(request, build, serverMode, {\n      result: { root: { error } },\n      headers: new Headers(),\n      status: 500\n    });\n  }\n}\nfunction generateSingleFetchResponse(request, build, serverMode, {\n  result,\n  headers,\n  status\n}) {\n  let resultHeaders = new Headers(headers);\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\n  if (SERVER_NO_BODY_STATUS_CODES.has(status)) {\n    return new Response(null, { status, headers: resultHeaders });\n  }\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\n  return new Response(\n    encodeViaTurboStream(\n      result,\n      request.signal,\n      build.entry.module.streamTimeout,\n      serverMode\n    ),\n    {\n      status: status || 200,\n      headers: resultHeaders\n    }\n  );\n}\nfunction getSingleFetchRedirect(status, headers, basename) {\n  let redirect2 = headers.get(\"Location\");\n  if (basename) {\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\n  }\n  return {\n    redirect: redirect2,\n    status,\n    revalidate: (\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n      // detail of ?_data requests as our way to tell the front end to revalidate when\n      // we didn't have a response body to include that information in.\n      // With single fetch, we tell the front end via this revalidate boolean field.\n      // However, we're respecting it for now because it may be something folks have\n      // used in their own responses\n      // TODO(v3): Consider removing or making this official public API\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\n    ),\n    reload: headers.has(\"X-Remix-Reload-Document\"),\n    replace: headers.has(\"X-Remix-Replace\")\n  };\n}\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  let timeoutId = setTimeout(\n    () => controller.abort(new Error(\"Server Timeout\")),\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\n  );\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data2, {\n    signal: controller.signal,\n    plugins: [\n      (value) => {\n        if (value instanceof Error) {\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\n          return [\"SanitizedError\", name, message, stack];\n        }\n        if (value instanceof ErrorResponseImpl) {\n          let { data: data3, status, statusText } = value;\n          return [\"ErrorResponse\", data3, status, statusText];\n        }\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n        }\n      }\n    ],\n    postPlugins: [\n      (value) => {\n        if (!value) return;\n        if (typeof value !== \"object\") return;\n        return [\n          \"SingleFetchClassInstance\",\n          Object.fromEntries(Object.entries(value))\n        ];\n      },\n      () => [\"SingleFetchFallback\"]\n    ]\n  });\n}\n\n// lib/server-runtime/server.ts\nfunction derive(build, mode) {\n  let routes = createRoutes(build.routes);\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\n  let staticHandler = createStaticHandler(dataRoutes, {\n    basename: build.basename\n  });\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\n      console.error(\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        isRouteErrorResponse(error) && error.error ? error.error : error\n      );\n    }\n  });\n  return {\n    routes,\n    dataRoutes,\n    serverMode,\n    staticHandler,\n    errorHandler\n  };\n}\nvar createRequestHandler = (build, mode) => {\n  let _build;\n  let routes;\n  let serverMode;\n  let staticHandler;\n  let errorHandler;\n  return async function requestHandler(request, initialContext) {\n    _build = typeof build === \"function\" ? await build() : build;\n    if (typeof build === \"function\") {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\n      let derived = derive(_build, mode);\n      routes = derived.routes;\n      serverMode = derived.serverMode;\n      staticHandler = derived.staticHandler;\n      errorHandler = derived.errorHandler;\n    }\n    let params = {};\n    let loadContext;\n    let handleError = (error) => {\n      if (mode === \"development\" /* Development */) {\n        getDevServerHooks()?.processRequestError?.(error);\n      }\n      errorHandler(error, {\n        context: loadContext,\n        params,\n        request\n      });\n    };\n    if (_build.future.unstable_middleware) {\n      if (initialContext == null) {\n        loadContext = new unstable_RouterContextProvider();\n      } else {\n        try {\n          loadContext = new unstable_RouterContextProvider(\n            initialContext\n          );\n        } catch (e) {\n          let error = new Error(\n            `Unable to create initial \\`unstable_RouterContextProvider\\` instance. Please confirm you are returning an instance of \\`Map<unstable_routerContext, unknown>\\` from your \\`getLoadContext\\` function.\n\nError: ${e instanceof Error ? e.toString() : e}`\n          );\n          handleError(error);\n          return returnLastResortErrorResponse(error, serverMode);\n        }\n      }\n    } else {\n      loadContext = initialContext || {};\n    }\n    let url = new URL(request.url);\n    let normalizedBasename = _build.basename || \"/\";\n    let normalizedPath = url.pathname;\n    if (stripBasename(normalizedPath, normalizedBasename) === \"/_root.data\") {\n      normalizedPath = normalizedBasename;\n    } else if (normalizedPath.endsWith(\".data\")) {\n      normalizedPath = normalizedPath.replace(/\\.data$/, \"\");\n    }\n    if (stripBasename(normalizedPath, normalizedBasename) !== \"/\" && normalizedPath.endsWith(\"/\")) {\n      normalizedPath = normalizedPath.slice(0, -1);\n    }\n    let isSpaMode = getBuildTimeHeader(request, \"X-React-Router-SPA-Mode\") === \"yes\";\n    if (!_build.ssr) {\n      if (_build.prerender.length === 0) {\n        isSpaMode = true;\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\n        if (url.pathname.endsWith(\".data\")) {\n          errorHandler(\n            new ErrorResponseImpl(\n              404,\n              \"Not Found\",\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\n            ),\n            {\n              context: loadContext,\n              params,\n              request\n            }\n          );\n          return new Response(\"Not Found\", {\n            status: 404,\n            statusText: \"Not Found\"\n          });\n        } else {\n          isSpaMode = true;\n        }\n      }\n    }\n    let manifestUrl = getManifestPath(\n      _build.routeDiscovery.manifestPath,\n      normalizedBasename\n    );\n    if (url.pathname === manifestUrl) {\n      try {\n        let res = await handleManifestRequest(_build, routes, url);\n        return res;\n      } catch (e) {\n        handleError(e);\n        return new Response(\"Unknown Server Error\", { status: 500 });\n      }\n    }\n    let matches = matchServerRoutes(routes, normalizedPath, _build.basename);\n    if (matches && matches.length > 0) {\n      Object.assign(params, matches[0].params);\n    }\n    let response;\n    if (url.pathname.endsWith(\".data\")) {\n      let handlerUrl = new URL(request.url);\n      handlerUrl.pathname = normalizedPath;\n      let singleFetchMatches = matchServerRoutes(\n        routes,\n        handlerUrl.pathname,\n        _build.basename\n      );\n      response = await handleSingleFetchRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        handlerUrl,\n        loadContext,\n        handleError\n      );\n      if (_build.entry.module.handleDataRequest) {\n        response = await _build.entry.module.handleDataRequest(response, {\n          context: loadContext,\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\n          request\n        });\n        if (isRedirectResponse(response)) {\n          let result = getSingleFetchRedirect(\n            response.status,\n            response.headers,\n            _build.basename\n          );\n          if (request.method === \"GET\") {\n            result = {\n              [SingleFetchRedirectSymbol]: result\n            };\n          }\n          let headers = new Headers(response.headers);\n          headers.set(\"Content-Type\", \"text/x-script\");\n          return new Response(\n            encodeViaTurboStream(\n              result,\n              request.signal,\n              _build.entry.module.streamTimeout,\n              serverMode\n            ),\n            {\n              status: SINGLE_FETCH_REDIRECT_STATUS,\n              headers\n            }\n          );\n        }\n      }\n    } else if (!isSpaMode && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\n      response = await handleResourceRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        matches.slice(-1)[0].route.id,\n        request,\n        loadContext,\n        handleError\n      );\n    } else {\n      let { pathname } = url;\n      let criticalCss = void 0;\n      if (_build.unstable_getCriticalCss) {\n        criticalCss = await _build.unstable_getCriticalCss({ pathname });\n      } else if (mode === \"development\" /* Development */ && getDevServerHooks()?.getCriticalCss) {\n        criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);\n      }\n      response = await handleDocumentRequest(\n        serverMode,\n        _build,\n        staticHandler,\n        request,\n        loadContext,\n        handleError,\n        isSpaMode,\n        criticalCss\n      );\n    }\n    if (request.method === \"HEAD\") {\n      return new Response(null, {\n        headers: response.headers,\n        status: response.status,\n        statusText: response.statusText\n      });\n    }\n    return response;\n  };\n};\nasync function handleManifestRequest(build, routes, url) {\n  if (build.assets.version !== url.searchParams.get(\"version\")) {\n    return new Response(null, {\n      status: 204,\n      headers: {\n        \"X-Remix-Reload-Document\": \"true\"\n      }\n    });\n  }\n  let patches = {};\n  if (url.searchParams.has(\"p\")) {\n    let paths = /* @__PURE__ */ new Set();\n    url.searchParams.getAll(\"p\").forEach((path) => {\n      if (!path.startsWith(\"/\")) {\n        path = `/${path}`;\n      }\n      let segments = path.split(\"/\").slice(1);\n      segments.forEach((_, i) => {\n        let partialPath = segments.slice(0, i + 1).join(\"/\");\n        paths.add(`/${partialPath}`);\n      });\n    });\n    for (let path of paths) {\n      let matches = matchServerRoutes(routes, path, build.basename);\n      if (matches) {\n        for (let match of matches) {\n          let routeId = match.route.id;\n          let route = build.assets.routes[routeId];\n          if (route) {\n            patches[routeId] = route;\n          }\n        }\n      }\n    }\n    return Response.json(patches, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\n      }\n    });\n  }\n  return new Response(\"Invalid Request\", { status: 400 });\n}\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\n  let response = request.method !== \"GET\" ? await singleFetchAction(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  ) : await singleFetchLoaders(\n    build,\n    serverMode,\n    staticHandler,\n    request,\n    handlerUrl,\n    loadContext,\n    handleError\n  );\n  return response;\n}\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, isSpaMode, criticalCss) {\n  try {\n    let response = await staticHandler.query(request, {\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => renderHtml(ctx, isSpaMode) : void 0\n    });\n    return isResponse(response) ? response : renderHtml(response, isSpaMode);\n  } catch (error) {\n    handleError(error);\n    return new Response(null, { status: 500 });\n  }\n  async function renderHtml(context, isSpaMode2) {\n    if (isResponse(context)) {\n      return context;\n    }\n    let headers = getDocumentHeaders(build, context);\n    if (SERVER_NO_BODY_STATUS_CODES.has(context.statusCode)) {\n      return new Response(null, { status: context.statusCode, headers });\n    }\n    if (context.errors) {\n      Object.values(context.errors).forEach((err) => {\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let state = {\n      loaderData: context.loaderData,\n      actionData: context.actionData,\n      errors: serializeErrors2(context.errors, serverMode)\n    };\n    let baseServerHandoff = {\n      basename: build.basename,\n      future: build.future,\n      routeDiscovery: build.routeDiscovery,\n      ssr: build.ssr,\n      isSpaMode: isSpaMode2\n    };\n    let entryContext = {\n      manifest: build.assets,\n      routeModules: createEntryRouteModules(build.routes),\n      staticHandlerContext: context,\n      criticalCss,\n      serverHandoffString: createServerHandoffString({\n        ...baseServerHandoff,\n        criticalCss\n      }),\n      serverHandoffStream: encodeViaTurboStream(\n        state,\n        request.signal,\n        build.entry.module.streamTimeout,\n        serverMode\n      ),\n      renderMeta: {},\n      future: build.future,\n      ssr: build.ssr,\n      routeDiscovery: build.routeDiscovery,\n      isSpaMode: isSpaMode2,\n      serializeError: (err) => serializeError(err, serverMode)\n    };\n    let handleDocumentRequestFunction = build.entry.module.default;\n    try {\n      return await handleDocumentRequestFunction(\n        request,\n        context.statusCode,\n        headers,\n        entryContext,\n        loadContext\n      );\n    } catch (error) {\n      handleError(error);\n      let errorForSecondRender = error;\n      if (isResponse(error)) {\n        try {\n          let data2 = await unwrapResponse(error);\n          errorForSecondRender = new ErrorResponseImpl(\n            error.status,\n            error.statusText,\n            data2\n          );\n        } catch (e) {\n        }\n      }\n      context = getStaticContextFromError(\n        staticHandler.dataRoutes,\n        context,\n        errorForSecondRender\n      );\n      if (context.errors) {\n        context.errors = sanitizeErrors(context.errors, serverMode);\n      }\n      let state2 = {\n        loaderData: context.loaderData,\n        actionData: context.actionData,\n        errors: serializeErrors2(context.errors, serverMode)\n      };\n      entryContext = {\n        ...entryContext,\n        staticHandlerContext: context,\n        serverHandoffString: createServerHandoffString(baseServerHandoff),\n        serverHandoffStream: encodeViaTurboStream(\n          state2,\n          request.signal,\n          build.entry.module.streamTimeout,\n          serverMode\n        ),\n        renderMeta: {}\n      };\n      try {\n        return await handleDocumentRequestFunction(\n          request,\n          context.statusCode,\n          headers,\n          entryContext,\n          loadContext\n        );\n      } catch (error2) {\n        handleError(error2);\n        return returnLastResortErrorResponse(error2, serverMode);\n      }\n    }\n  }\n}\nasync function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {\n  try {\n    let response = await staticHandler.queryRoute(request, {\n      routeId,\n      requestContext: loadContext,\n      unstable_respond: build.future.unstable_middleware ? (ctx) => ctx : void 0\n    });\n    if (isResponse(response)) {\n      return response;\n    }\n    if (typeof response === \"string\") {\n      return new Response(response);\n    }\n    return Response.json(response);\n  } catch (error) {\n    if (isResponse(error)) {\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\n      return error;\n    }\n    if (isRouteErrorResponse(error)) {\n      if (error) {\n        handleError(error);\n      }\n      return errorResponseToJson(error, serverMode);\n    }\n    if (error instanceof Error && error.message === \"Expected a response from queryRoute\") {\n      let newError = new Error(\n        \"Expected a Response to be returned from resource route handler\"\n      );\n      handleError(newError);\n      return returnLastResortErrorResponse(newError, serverMode);\n    }\n    handleError(error);\n    return returnLastResortErrorResponse(error, serverMode);\n  }\n}\nfunction errorResponseToJson(errorResponse, serverMode) {\n  return Response.json(\n    serializeError(\n      // @ts-expect-error This is \"private\" from users but intended for internal use\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\n      serverMode\n    ),\n    {\n      status: errorResponse.status,\n      statusText: errorResponse.statusText,\n      headers: {\n        \"X-Remix-Error\": \"yes\"\n      }\n    }\n  );\n}\nfunction returnLastResortErrorResponse(error, serverMode) {\n  let message = \"Unexpected Server Error\";\n  if (serverMode !== \"production\" /* Production */) {\n    message += `\n\n${String(error)}`;\n  }\n  return new Response(message, {\n    status: 500,\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  });\n}\nfunction unwrapResponse(response) {\n  let contentType = response.headers.get(\"Content-Type\");\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\n}\n\n// lib/server-runtime/sessions.ts\nfunction flash(name) {\n  return `__flash_${name}__`;\n}\nvar createSession = (initialData = {}, id = \"\") => {\n  let map = new Map(Object.entries(initialData));\n  return {\n    get id() {\n      return id;\n    },\n    get data() {\n      return Object.fromEntries(map);\n    },\n    has(name) {\n      return map.has(name) || map.has(flash(name));\n    },\n    get(name) {\n      if (map.has(name)) return map.get(name);\n      let flashName = flash(name);\n      if (map.has(flashName)) {\n        let value = map.get(flashName);\n        map.delete(flashName);\n        return value;\n      }\n      return void 0;\n    },\n    set(name, value) {\n      map.set(name, value);\n    },\n    flash(name, value) {\n      map.set(flash(name), value);\n    },\n    unset(name) {\n      map.delete(name);\n    }\n  };\n};\nvar isSession = (object) => {\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\n};\nfunction createSessionStorage({\n  cookie: cookieArg,\n  createData,\n  readData,\n  updateData,\n  deleteData\n}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\n      let data2 = id && await readData(id);\n      return createSession(data2 || {}, id || \"\");\n    },\n    async commitSession(session, options) {\n      let { id, data: data2 } = session;\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\n      if (id) {\n        await updateData(id, data2, expires);\n      } else {\n        id = await createData(data2, expires);\n      }\n      return cookie.serialize(id, options);\n    },\n    async destroySession(session, options) {\n      await deleteData(session.id);\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\nfunction warnOnceAboutSigningSessionCookie(cookie) {\n  warnOnce(\n    cookie.isSigned,\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://reactrouter.com/explanation/sessions-and-cookies#signing-cookies for more information.`\n  );\n}\n\n// lib/server-runtime/sessions/cookieStorage.ts\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\n  warnOnceAboutSigningSessionCookie(cookie);\n  return {\n    async getSession(cookieHeader, options) {\n      return createSession(\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\n      );\n    },\n    async commitSession(session, options) {\n      let serializedCookie = await cookie.serialize(session.data, options);\n      if (serializedCookie.length > 4096) {\n        throw new Error(\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\n        );\n      }\n      return serializedCookie;\n    },\n    async destroySession(_session, options) {\n      return cookie.serialize(\"\", {\n        ...options,\n        maxAge: void 0,\n        expires: /* @__PURE__ */ new Date(0)\n      });\n    }\n  };\n}\n\n// lib/server-runtime/sessions/memoryStorage.ts\nfunction createMemorySessionStorage({ cookie } = {}) {\n  let map = /* @__PURE__ */ new Map();\n  return createSessionStorage({\n    cookie,\n    async createData(data2, expires) {\n      let id = Math.random().toString(36).substring(2, 10);\n      map.set(id, { data: data2, expires });\n      return id;\n    },\n    async readData(id) {\n      if (map.has(id)) {\n        let { data: data2, expires } = map.get(id);\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\n          return data2;\n        }\n        if (expires) map.delete(id);\n      }\n      return null;\n    },\n    async updateData(id, data2, expires) {\n      map.set(id, { data: data2, expires });\n    },\n    async deleteData(id) {\n      map.delete(id);\n    }\n  });\n}\n\n// lib/href.ts\nfunction href(path, ...args) {\n  let params = args[0];\n  return path.split(\"/\").map((segment) => {\n    if (segment === \"*\") {\n      return params ? params[\"*\"] : void 0;\n    }\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\n    if (!match) return segment;\n    const param = match[1];\n    const value = params ? params[param] : void 0;\n    const isRequired = match[2] === void 0;\n    if (isRequired && value === void 0) {\n      throw Error(\n        `Path '${path}' requires param '${param}' but it was not provided`\n      );\n    }\n    return value;\n  }).filter((segment) => segment !== void 0).join(\"/\");\n}\n\n// lib/dom/ssr/errors.ts\nfunction deserializeErrors2(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            let error = new ErrorConstructor(val.message);\n            error.stack = val.stack;\n            serialized[key] = error;\n          } catch (e) {\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        error.stack = val.stack;\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n// lib/dom/ssr/hydration.tsx\nfunction getHydrationData(state, routes, getRouteInfo, location, basename, isSpaMode) {\n  let hydrationData = {\n    ...state,\n    loaderData: { ...state.loaderData }\n  };\n  let initialMatches = matchRoutes(routes, location, basename);\n  if (initialMatches) {\n    for (let match of initialMatches) {\n      let routeId = match.route.id;\n      let routeInfo = getRouteInfo(routeId);\n      if (shouldHydrateRouteLoader(\n        routeId,\n        routeInfo.clientLoader,\n        routeInfo.hasLoader,\n        isSpaMode\n      ) && (routeInfo.hasHydrateFallback || !routeInfo.hasLoader)) {\n        delete hydrationData.loaderData[routeId];\n      } else if (!routeInfo.hasLoader) {\n        hydrationData.loaderData[routeId] = null;\n      }\n    }\n  }\n  return hydrationData;\n}\n\nexport {\n  Action,\n  createBrowserHistory,\n  invariant,\n  createPath,\n  parsePath,\n  unstable_createContext,\n  unstable_RouterContextProvider,\n  matchRoutes,\n  generatePath,\n  matchPath,\n  resolvePath,\n  data,\n  redirect,\n  redirectDocument,\n  replace,\n  ErrorResponseImpl,\n  isRouteErrorResponse,\n  IDLE_NAVIGATION,\n  IDLE_FETCHER,\n  IDLE_BLOCKER,\n  createRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ViewTransitionContext,\n  FetchersContext,\n  NavigationContext,\n  LocationContext,\n  RouteContext,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useNavigationType,\n  useMatch,\n  useNavigate,\n  useOutletContext,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useNavigation,\n  useRevalidator,\n  useMatches,\n  useLoaderData,\n  useRouteLoaderData,\n  useActionData,\n  useRouteError,\n  useAsyncValue,\n  useAsyncError,\n  useBlocker,\n  mapRouteProperties,\n  hydrationRouteProperties,\n  createMemoryRouter,\n  RouterProvider,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  Await,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  renderMatches,\n  withComponentProps,\n  withHydrateFallbackProps,\n  withErrorBoundaryProps,\n  createSearchParams,\n  SingleFetchRedirectSymbol,\n  getTurboStreamSingleFetchDataStrategy,\n  decodeViaTurboStream,\n  RemixErrorBoundary,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createClientRoutes,\n  shouldHydrateRouteLoader,\n  getPatchRoutesOnNavigationFunction,\n  useFogOFWarDiscovery,\n  FrameworkContext,\n  Links,\n  PrefetchPageLinks,\n  Meta,\n  Scripts,\n  createBrowserRouter,\n  createHashRouter,\n  BrowserRouter,\n  HashRouter,\n  HistoryRouter,\n  Link,\n  NavLink,\n  Form,\n  ScrollRestoration,\n  useLinkClickHandler,\n  useSearchParams,\n  useSubmit,\n  useFormAction,\n  useFetcher,\n  useFetchers,\n  useScrollRestoration,\n  useBeforeUnload,\n  usePrompt,\n  useViewTransitionState,\n  StaticRouter,\n  StaticRouterProvider,\n  createStaticHandler2 as createStaticHandler,\n  createStaticRouter,\n  ServerRouter,\n  createRoutesStub,\n  createCookie,\n  isCookie,\n  ServerMode,\n  setDevServerHooks,\n  createRequestHandler,\n  createSession,\n  isSession,\n  createSessionStorage,\n  createCookieSessionStorage,\n  createMemorySessionStorage,\n  href,\n  deserializeErrors2 as deserializeErrors,\n  getHydrationData\n};\n","import React from 'react';\nimport './Header.css';\n\nconst Header = ({ \n  onHomeClick,\n  onAboutClick,\n  onTopicsClick,\n  onThemeToggle,\n  onMobileMenuToggle,\n  isDarkMode,\n  isMobile,\n  isMobileMenuOpen,\n  isSidebarCollapsed,\n  onSidebarToggle\n}) => {\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <div className=\"header-brand\" onClick={onHomeClick}>\n              <h1 className=\"header-title\">\n                <span className=\"brand-icon\">\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M5 12.5L5 6.5C5 5.5 5.5 5 6.5 5H17.5C18.5 5 19 5.5 19 6.5V12.5\"></path>\n                    <path d=\"M12 5L12 19\"></path>\n                    <path d=\"M7 19L17 19\"></path>\n                    <path d=\"M5 12L7 14L9 12\"></path>\n                    <path d=\"M15 12L17 14L19 12\"></path>\n                  </svg>\n                </span>\n                InterviewOS\n              </h1>\n              <span className=\"header-subtitle\">Made with ❤️ by roottraveller</span>\n            </div>\n          </div>\n          <div className=\"header-right\">\n            <nav className=\"header-nav\">\n              <button className=\"nav-link\" onClick={onAboutClick}>About</button>\n              <button className=\"nav-link\" onClick={onTopicsClick}>All Topics</button>\n              <button className=\"nav-link\" onClick={onHomeClick}>Practice</button>\n              <button \n                className=\"theme-toggle\" \n                onClick={onThemeToggle}\n                title={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n                aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n              >\n                {isDarkMode ? (\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                  </svg>\n                ) : (\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                  </svg>\n                )}\n              </button>\n            </nav>\n            {/* Mobile theme toggle - positioned between brand and hamburger menu */}\n            <button \n              className=\"mobile-theme-toggle-header\" \n              onClick={onThemeToggle}\n              title={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n              aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n            >\n              {isDarkMode ? (\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                  <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                  <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                  <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                  <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                  <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                  <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                  <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                  <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                </svg>\n              ) : (\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                </svg>\n              )}\n            </button>\n            <button \n              className={`mobile-menu-button ${isMobileMenuOpen ? 'open' : ''}`}\n              onClick={onMobileMenuToggle}\n              aria-label=\"Toggle navigation menu\"\n            >\n              <span className=\"hamburger-line\"></span>\n              <span className=\"hamburger-line\"></span>\n              <span className=\"hamburger-line\"></span>\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Mobile navigation overlay */}\n      {isMobile && (\n        <div className={`mobile-nav-overlay ${isMobileMenuOpen ? 'open' : ''}`}>\n          <nav className=\"mobile-nav-links\">\n            <button className=\"mobile-nav-link\" onClick={() => { onAboutClick(); onMobileMenuToggle(); }}>\n              <span className=\"nav-icon\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n                  <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n                </svg>\n              </span>\n              About\n            </button>\n            <button className=\"mobile-nav-link\" onClick={() => { onTopicsClick(); onMobileMenuToggle(); }}>\n              <span className=\"nav-icon\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n                  <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\n                </svg>\n              </span>\n              All Topics\n            </button>\n            <button className=\"mobile-nav-link\" onClick={() => { onHomeClick(); onMobileMenuToggle(); }}>\n              <span className=\"nav-icon\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\n                </svg>\n              </span>\n              Practice\n            </button>\n            <div className=\"mobile-nav-divider\"></div>\n            <button \n              className=\"mobile-theme-toggle\" \n              onClick={() => {\n                onThemeToggle();\n                onMobileMenuToggle();\n              }}\n            >\n              <span className=\"nav-icon\">\n                {isDarkMode ? (\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n                    <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\"></line>\n                    <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\"></line>\n                    <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\"></line>\n                    <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\"></line>\n                    <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\"></line>\n                    <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\"></line>\n                    <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\"></line>\n                    <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\"></line>\n                  </svg>\n                ) : (\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n                  </svg>\n                )}\n              </span>\n              {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n            </button>\n          </nav>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Header; ","import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\n\nconst Sidebar = ({ \n  topics, \n  selectedTopic, \n  selectedSubtopic, \n  onTopicSelect, \n  onSubtopicSelect,\n  isMobile,\n  isMobileMenuOpen,\n  onMobileMenuClose,\n  isCollapsed = false,\n  onToggleCollapse\n}) => {\n  const [hoveredTopic, setHoveredTopic] = useState(null);\n\n  const handleTopicClick = (topicId) => {\n    // Toggle behavior: if topic is already selected, deselect it (go to home)\n    // If topic is not selected, select it\n    if (selectedTopic === topicId) {\n      onTopicSelect(null); // This will navigate to home page\n    } else {\n      onTopicSelect(topicId);\n    }\n  };\n\n  const handleSubtopicClick = (subtopicId) => {\n    onSubtopicSelect(subtopicId);\n    if (isMobile) {\n      onMobileMenuClose();\n    }\n  };\n\n  const handleOverlayClick = () => {\n    if (isMobile) {\n      onMobileMenuClose();\n    }\n  };\n\n  // Get topic initial for collapsed state\n  const getTopicInitial = (title) => {\n    if (title === 'JavaScript') return 'JS';\n    if (title === 'React') return 'R';\n    if (title === 'Algorithms & Data Structures') return 'A';\n    if (title === 'System Design') return 'SD';\n    return title.charAt(0);\n  };\n\n  // Close mobile menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (isMobile && isMobileMenuOpen && !event.target.closest('.sidebar') && !event.target.closest('.mobile-menu-button')) {\n        onMobileMenuClose();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [isMobile, isMobileMenuOpen, onMobileMenuClose]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (isMobile && isMobileMenuOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isMobile, isMobileMenuOpen]);\n\n  // Mobile overlay\n  if (isMobile && isMobileMenuOpen) {\n    return (\n      <>\n        <div className=\"mobile-overlay\" onClick={handleOverlayClick} />\n        <aside className={`sidebar mobile ${isMobileMenuOpen ? 'mobile-open' : ''}`}>\n          <div className=\"sidebar-header\">\n            <h2>Topics</h2>\n            <button \n              className=\"mobile-close-button\"\n              onClick={onMobileMenuClose}\n              aria-label=\"Close menu\"\n            >\n              ×\n            </button>\n          </div>\n          <div className=\"sidebar-content\">\n            {topics.map((topic) => (\n              <div key={topic.id} className=\"topic-section\">\n                <button\n                  className={`topic-button ${selectedTopic === topic.id ? 'selected' : ''}`}\n                  onClick={() => handleTopicClick(topic.id)}\n                  aria-expanded={selectedTopic === topic.id}\n                >\n                  <span className=\"topic-icon\" />\n                  <span className=\"topic-title\">{topic.title}</span>\n                  <span className=\"topic-count\">{topic.subtopics.length}</span>\n                </button>\n                {selectedTopic === topic.id && (\n                  <div className=\"subtopics\">\n                    {topic.subtopics.map((subtopic) => (\n                      <button\n                        key={subtopic.id}\n                        className={`subtopic-button ${selectedSubtopic === subtopic.id ? 'selected' : ''}`}\n                        onClick={() => handleSubtopicClick(subtopic.id)}\n                      >\n                        <span className=\"subtopic-dot\" />\n                        <span className=\"subtopic-title\">{subtopic.title}</span>\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </aside>\n      </>\n    );\n  }\n\n  // Desktop sidebar\n  return (\n    <aside className={`sidebar desktop ${isCollapsed ? 'collapsed' : ''}`}>\n      <div className=\"sidebar-header\">\n        {!isCollapsed && <h2>Topics</h2>}\n        {!isCollapsed && (\n          <button \n            className=\"sidebar-toggle-btn\"\n            onClick={onToggleCollapse}\n            title=\"Collapse sidebar\"\n            aria-label=\"Collapse sidebar\"\n          />\n        )}\n      </div>\n      <div className=\"sidebar-content\">\n        {topics.map((topic) => (\n          <div key={topic.id} className=\"topic-section\">\n            <button\n              className={`topic-button ${selectedTopic === topic.id ? 'selected' : ''}`}\n              onClick={() => handleTopicClick(topic.id)}\n              onMouseEnter={() => isCollapsed && setHoveredTopic(topic.id)}\n              onMouseLeave={() => isCollapsed && setHoveredTopic(null)}\n              aria-expanded={selectedTopic === topic.id}\n              aria-label={topic.title}\n              title={isCollapsed ? topic.title : ''}\n            >\n              <span className=\"topic-icon\">\n                {isCollapsed && <span className=\"topic-initial\">{getTopicInitial(topic.title)}</span>}\n              </span>\n              {!isCollapsed && (\n                <>\n                  <span className=\"topic-title\">{topic.title}</span>\n                  <span className=\"topic-count\">{topic.subtopics.length}</span>\n                </>\n              )}\n            </button>\n            {selectedTopic === topic.id && !isCollapsed && (\n              <div className=\"subtopics\">\n                {topic.subtopics.map((subtopic) => (\n                  <button\n                    key={subtopic.id}\n                    className={`subtopic-button ${selectedSubtopic === subtopic.id ? 'selected' : ''}`}\n                    onClick={() => handleSubtopicClick(subtopic.id)}\n                  >\n                    <span className=\"subtopic-dot\" />\n                    <span className=\"subtopic-title\">{subtopic.title}</span>\n                  </button>\n                ))}\n              </div>\n            )}\n            \n            {/* Collapsed state tooltip */}\n            {isCollapsed && hoveredTopic === topic.id && (\n              <div className=\"collapsed-tooltip\">\n                <div className=\"tooltip-content\">\n                  <h4>{topic.title}</h4>\n                  <div className=\"tooltip-subtopics\">\n                    {topic.subtopics.map((subtopic) => (\n                      <button\n                        key={subtopic.id}\n                        className={`tooltip-subtopic ${selectedSubtopic === subtopic.id ? 'selected' : ''}`}\n                        onClick={() => handleSubtopicClick(subtopic.id)}\n                      >\n                        {subtopic.title}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      \n      {/* Collapsed toggle button */}\n      {isCollapsed && (\n        <button \n          className=\"sidebar-toggle-btn\"\n          onClick={onToggleCollapse}\n          title=\"Expand sidebar\"\n          aria-label=\"Expand sidebar\"\n        />\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar; ","import React from 'react';\nimport './ContentPanel.css';\n\nconst ContentPanel = ({ content }) => {\n  return (\n    <div className=\"content-panel\">\n      <div className=\"content-wrapper\">\n        <h1>{content.title}</h1>\n        <div \n          dangerouslySetInnerHTML={{ __html: content.content }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ContentPanel; ","import React from 'react';\nimport './About.css';\n\nconst About = () => {\n  return (\n    <div className=\"about-container\">\n      <div className=\"about-content\">\n        <div className=\"about-hero\">\n          <h1>About InterviewOS</h1>\n          <p className=\"hero-subtitle\">Your comprehensive technical interview preparation platform</p>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>What is InterviewOS?</h2>\n          <p>\n            InterviewOS is a comprehensive platform designed to help software engineers, developers, and \n            technical professionals prepare for technical interviews. It provides structured, organized \n            content covering all major technical domains commonly tested in software engineering interviews.\n          </p>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>Key Features</h2>\n          <div className=\"features-list\">\n            <div className=\"feature-item\">\n              <div className=\"feature-icon\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n                  <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\n                </svg>\n              </div>\n              <div className=\"feature-content\">\n                <h3>Structured Learning Path</h3>\n                <p>Topics are organized in a logical hierarchy, making it easy to navigate from basics to advanced concepts.</p>\n              </div>\n            </div>\n            \n            <div className=\"feature-item\">\n              <div className=\"feature-icon\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polyline points=\"16 18 22 12 16 6\"></polyline>\n                  <polyline points=\"8 6 2 12 8 18\"></polyline>\n                </svg>\n              </div>\n              <div className=\"feature-content\">\n                <h3>Code Examples & Implementations</h3>\n                <p>Real-world code examples with detailed explanations to help you understand practical applications.</p>\n              </div>\n            </div>\n            \n            <div className=\"feature-item\">\n              <div className=\"feature-icon\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\n                  <circle cx=\"12\" cy=\"12\" r=\"2\"></circle>\n                </svg>\n              </div>\n              <div className=\"feature-content\">\n                <h3>Interview-Focused Content</h3>\n                <p>Content specifically curated for technical interviews, including common questions and patterns.</p>\n              </div>\n            </div>\n            \n            <div className=\"feature-item\">\n              <div className=\"feature-icon\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"></path>\n                </svg>\n              </div>\n              <div className=\"feature-content\">\n                <h3>Comprehensive Coverage</h3>\n                <p>From system design to data structures, algorithms to cloud computing - all essential topics covered.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>Topics Covered</h2>\n          <div className=\"topics-grid\">\n            <div className=\"topic-category\">\n              <h3>System Design</h3>\n              <ul>\n                <li>Scalability & Load Balancing</li>\n                <li>Caching Strategies</li>\n                <li>Database Design</li>\n                <li>Microservices Architecture</li>\n              </ul>\n            </div>\n            <div className=\"topic-category\">\n              <h3>Data Structures & Algorithms</h3>\n              <ul>\n                <li>Arrays, Linked Lists, Trees</li>\n                <li>Sorting & Searching</li>\n                <li>Graph Algorithms</li>\n                <li>Dynamic Programming</li>\n              </ul>\n            </div>\n            <div className=\"topic-category\">\n              <h3>Networking & Security</h3>\n              <ul>\n                <li>HTTP/HTTPS Protocols</li>\n                <li>Authentication & Authorization</li>\n                <li>Encryption & Hashing</li>\n                <li>Network Security</li>\n              </ul>\n            </div>\n            <div className=\"topic-category\">\n              <h3>Cloud & DevOps</h3>\n              <ul>\n                <li>AWS Services</li>\n                <li>Docker & Kubernetes</li>\n                <li>CI/CD Pipelines</li>\n                <li>Monitoring & Logging</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>Built With</h2>\n          <div className=\"tech-stack\">\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">React</span>\n              <span className=\"tech-version\">18.2.0</span>\n            </div>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">Modern CSS</span>\n              <span className=\"tech-version\">CSS Variables & Grid</span>\n            </div>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">Responsive Design</span>\n              <span className=\"tech-version\">Mobile-First Approach</span>\n            </div>\n            <div className=\"tech-item\">\n              <span className=\"tech-name\">Dark Mode</span>\n              <span className=\"tech-version\">System Preference Support</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>About the Creator</h2>\n          <div className=\"creator-info\">\n            <div className=\"creator-content\">\n              <h3>rimaurya</h3>\n              <p>\n                A passionate software engineer dedicated to helping fellow developers succeed in their \n                technical interviews. This platform represents a comprehensive collection of knowledge \n                and experience gained through years of preparing for and conducting technical interviews.\n              </p>\n              <div className=\"creator-links\">\n                <a href=\"https://github.com/roottraveller\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"creator-link\">\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path>\n                  </svg>\n                  GitHub\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"about-section\">\n          <h2>Contributing</h2>\n          <p>\n            This is an open-source project and contributions are welcome! If you find any errors, \n            have suggestions for improvements, or want to add new topics, please feel free to \n            contribute to the project.\n          </p>\n        </div>\n\n        <div className=\"about-footer\">\n          <p>\n            <strong>InterviewOS</strong> - Made with ❤️ by rimaurya\n          </p>\n          <p className=\"version-info\">Version 1.0.0 • Last updated: {new Date().getFullYear()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About; ","export const hashing = {\n  id: 'hashing',\n  title: 'Hashing',\n  content: `# Hashing\n\n## Definition\nHashing is a one-way mathematical function that converts input data of any size into a fixed-size string of characters.\n\n## Key Properties\n- **Deterministic**: Same input always produces same output\n- **Fixed Output Size**: Hash length is constant\n- **Avalanche Effect**: Small input change causes large output change\n- **One-way**: Computationally infeasible to reverse\n- **Collision Resistant**: Hard to find two inputs with same hash\n\n## Common Hash Functions\n- **MD5**: 128-bit (deprecated, cryptographically broken)\n- **SHA-1**: 160-bit (deprecated for security)\n- **SHA-256**: 256-bit (widely used)\n- **SHA-3**: Latest SHA standard\n- **BLAKE2**: Fast and secure\n\n## Password Hashing\n- **bcrypt**: Adaptive cost parameter\n- **scrypt**: Memory-hard function\n- **Argon2**: Winner of password hashing competition\n- **PBKDF2**: Password-Based Key Derivation Function\n\n## Salt\nRandom data added to password before hashing to prevent:\n- **Rainbow Table Attacks**: Precomputed hash lookups\n- **Dictionary Attacks**: Common password hashes\n\n## Use Cases\n- **Password Storage**: Secure password verification\n- **Data Integrity**: Verify file integrity\n- **Digital Signatures**: Message authentication\n- **Hash Tables**: Data structure indexing\n- **Blockchain**: Proof of work, block linking\n\n## Hash Collisions\nWhen two different inputs produce the same hash:\n- **Birthday Paradox**: Probability increases with attempts\n- **Cryptographic Attacks**: Finding collisions intentionally\n\n## Message Authentication Code (MAC)\n- **HMAC**: Hash-based MAC using secret key\n- **CMAC**: Cipher-based MAC\n\n## Best Practices\n- Use salt for passwords\n- Choose appropriate hash function\n- Regular security updates\n- Proper key management for HMAC\n\n## Interview Questions\n**Q: Why do we salt passwords before hashing?**\nA: To prevent rainbow table attacks and ensure unique hashes even for identical passwords.`\n}; ","/**\n * Main Application Data Configuration\n * \n * This file serves as the central data aggregator for the TechNotes Interview OS application.\n * It imports all individual topic modules from the data directory and organizes them into\n * a structured format for the application to consume.\n * \n * Structure:\n * - Imports all topic modules from ../data/\n * - Organizes topics into categories\n * - Exports a single appData object with topics array\n * - Each topic contains subtopics with content and metadata\n * \n * @author TechNotes Interview OS\n * @version 1.0.0\n */\n\n// Import all the individual subtopic files\nimport { acidProperties } from '../data/acidProperties';\nimport { activeActiveVsActivePassive } from '../data/activeActiveVsActivePassive';\nimport { algorithms } from '../data/algorithms';\nimport { apiDesign } from '../data/apiDesign';\nimport { apiGateway } from '../data/apiGateway';\nimport { applicationServer } from '../data/applicationServer';\nimport { authentication } from '../data/authentication';\nimport { authorization } from '../data/authorization';\nimport { backup } from '../data/backup';\nimport { baseProperties } from '../data/baseProperties';\nimport { bgp } from '../data/bgp';\nimport { bloomFilter } from '../data/bloomFilter';\nimport { bulkhead } from '../data/bulkhead';\nimport { cacheEvictionPolicies } from '../data/cacheEvictionPolicies';\nimport { cacheStrategies } from '../data/cacheStrategies';\nimport { caching } from '../data/caching';\nimport { capTheorem } from '../data/capTheorem';\nimport { cdn } from '../data/cdn';\nimport { cicd } from '../data/cicd';\nimport { circuitBreaker } from '../data/circuitBreaker';\nimport { cloudComputing } from '../data/cloudComputing';\nimport { compressionDecompression } from '../data/compressionDecompression';\nimport { concurrencyControlProblems } from '../data/concurrencyControlProblems';\nimport { consistentHashing } from '../data/consistentHashing';\nimport { consistentHashingVsLoadBalancing } from '../data/consistentHashingVsLoadBalancing';\nimport { containerization } from '../data/containerization';\nimport { containers } from '../data/containers';\nimport { cors } from '../data/cors';\nimport { databaseDesignPrinciples } from '../data/databaseDesignPrinciples';\nimport { databaseSharding } from '../data/databaseSharding';\nimport { databaseTypes } from '../data/databaseTypes';\nimport { dataStructures } from '../data/dataStructures';\nimport { ddos } from '../data/ddos';\nimport { deadlockDetectionPrevention } from '../data/deadlockDetectionPrevention';\nimport { distributedConsensus } from '../data/distributedConsensus';\nimport { distributedTransactions } from '../data/distributedTransactions';\nimport { dns } from '../data/dns';\nimport { docker } from '../data/docker';\nimport { edgeComputing } from '../data/edgeComputing';\nimport { elasticityVsScalability } from '../data/elasticityVsScalability';\nimport { encodingDecoding } from '../data/encodingDecoding';\nimport { encryption } from '../data/encryption';\nimport { encryptionDecryption } from '../data/encryptionDecryption';\nimport { eventSourcing } from '../data/eventSourcing';\nimport { eventStreaming } from '../data/eventStreaming';\nimport { failoverStrategies } from '../data/failoverStrategies';\nimport { forwardProxy } from '../data/forwardProxy';\nimport { gossipProtocol } from '../data/gossipProtocol';\nimport { graphql } from '../data/graphql';\nimport { hashing } from '../data/hashing';\nimport { hintedHandoff } from '../data/hintedHandoff';\nimport { http } from '../data/http';\nimport { httpHeaders } from '../data/httpHeaders';\nimport { httpStatusCodes } from '../data/httpStatusCodes';\nimport { httpVersions } from '../data/httpVersions';\nimport { httpVsHttps } from '../data/httpVsHttps';\nimport { https } from '../data/https';\nimport { hyperLogLog } from '../data/hyperLogLog';\nimport { indexing } from '../data/indexing';\nimport { isolationLevels } from '../data/isolationLevels';\nimport { jwt } from '../data/jwt';\nimport { keyExchange } from '../data/keyExchange';\nimport { kubernetes } from '../data/kubernetes';\nimport { loadBalancer } from '../data/loadBalancer';\nimport { localityOfReference } from '../data/localityOfReference';\nimport { logging } from '../data/logging';\nimport { merkleTree } from '../data/merkleTree';\nimport { messageQueues } from '../data/messageQueues';\nimport { microservices } from '../data/microservices';\nimport { monitoring } from '../data/monitoring';\nimport { monitoringObservability } from '../data/monitoringObservability';\nimport { mvcc } from '../data/mvcc';\nimport { networking } from '../data/networking';\nimport { networkProtocols } from '../data/networkProtocols';\nimport { normalization } from '../data/normalization';\nimport { nosql } from '../data/nosql';\nimport { oauth } from '../data/oauth';\nimport { oauth2 } from '../data/oauth2';\nimport { optimisticVsPessimisticLocking } from '../data/optimisticVsPessimisticLocking';\nimport { osiModel } from '../data/osiModel';\nimport { pacelcTheorem } from '../data/pacelcTheorem';\nimport { partitioning } from '../data/partitioning';\nimport { paxosConsensus } from '../data/paxosConsensus';\nimport { proxies } from '../data/proxies';\nimport { quorumConcepts } from '../data/quorumConcepts';\nimport { raftConsensus } from '../data/raftConsensus';\nimport { rateLimit } from '../data/rateLimit';\nimport { rateLimiting } from '../data/rateLimiting';\nimport { rbac } from '../data/rbac';\nimport { recovery } from '../data/recovery';\nimport { replication } from '../data/replication';\nimport { resourceStarvation } from '../data/resourceStarvation';\nimport { restApi } from '../data/restApi';\nimport { retryPattern } from '../data/retryPattern';\nimport { reverseProxy } from '../data/reverseProxy';\nimport { serializationDeserialization } from '../data/serializationDeserialization';\nimport { serverless } from '../data/serverless';\nimport { softwareDesignPatterns } from '../data/softwareDesignPatterns';\nimport { sql } from '../data/sql';\nimport { tcp } from '../data/tcp';\nimport { tcpIpModel } from '../data/tcpIpModel';\nimport { tcpVsUdp } from '../data/tcpVsUdp';\nimport { thunderingHerd } from '../data/thunderingHerd';\nimport { thunderingHerdProblem } from '../data/thunderingHerdProblem';\nimport { timeoutPattern } from '../data/timeoutPattern';\nimport { timestampingProtocol } from '../data/timestampingProtocol';\nimport { tracing } from '../data/tracing';\nimport { twoPhaseLocking } from '../data/twoPhaseLocking';\nimport { udp } from '../data/udp';\nimport { unicodeCharacters } from '../data/unicodeCharacters';\nimport { unixEpoch } from '../data/unixEpoch';\nimport { urlVsUriVsUrn } from '../data/urlVsUriVsUrn';\nimport { vectorClocks } from '../data/vectorClocks';\nimport { verticalVsHorizontalScaling } from '../data/verticalVsHorizontalScaling';\nimport { webServer } from '../data/webServer';\nimport { websockets as webSockets } from '../data/webSockets';\n\nexport const appData = {\n  topics: [\n    {\n      id: 'full-forms',\n      title: 'Must know Full form',\n      subtopics: [\n        {\n          id: 'tech-acronyms',\n          title: 'Technology Acronyms',\n          content: `\n            <h2>Essential Technology Acronyms</h2>\n            <p>A comprehensive list of must-know technology acronyms for technical interviews:</p>\n            \n            <h3>Security & Protocols</h3>\n            <ul>\n              <li><strong>TLS</strong> - Transport Layer Security</li>\n              <li><strong>SSL</strong> - Secure Sockets Layer</li>\n              <li><strong>SMTP</strong> - Simple Mail Transfer Protocol</li>\n              <li><strong>XMPP</strong> - Extensible Messaging and Presence Protocol</li>\n              <li><strong>AMQP</strong> - Advanced Message Queuing Protocol</li>\n              <li><strong>SSH</strong> - Secure Shell</li>\n              <li><strong>HMAC</strong> - Hash-Based Message Authentication Code</li>\n              <li><strong>SHA</strong> - Secure Hash Algorithm</li>\n            </ul>\n\n            <h3>Database & Storage</h3>\n            <ul>\n              <li><strong>OLTP</strong> - Online Transaction Processing</li>\n              <li><strong>OLAP</strong> - Online Analytical Processing</li>\n              <li><strong>TSDB</strong> - Time Series Database</li>\n              <li><strong>ORM</strong> - Object-Relational Mapping</li>\n              <li><strong>MVCC</strong> - Multi-Version Concurrency Control</li>\n              <li><strong>CQRS</strong> - Command and Query Responsibility Segregation</li>\n              <li><strong>GFS</strong> - Global File System</li>\n              <li><strong>HDFS</strong> - Hadoop Distributed File System</li>\n              <li><strong>RAID</strong> - Redundant Array of Independent Disks</li>\n            </ul>\n\n            <h3>Cloud & Infrastructure</h3>\n            <ul>\n              <li><strong>PaaS</strong> - Platform as a Service</li>\n              <li><strong>IaaS</strong> - Infrastructure as a Service</li>\n              <li><strong>SaaS</strong> - Software as a Service</li>\n              <li><strong>FaaS</strong> - Function as a Service</li>\n              <li><strong>BCP/DR</strong> - Business Continuity Plan/Disaster Recovery</li>\n              <li><strong>UTC</strong> - Coordinated Universal Time</li>\n            </ul>\n\n            <h3>Development & Standards</h3>\n            <ul>\n              <li><strong>JWT</strong> - JSON Web Token</li>\n              <li><strong>IDP</strong> - Identity Provider</li>\n              <li><strong>JSON</strong> - JavaScript Object Notation</li>\n              <li><strong>ISO</strong> - International Organization for Standardization</li>\n              <li><strong>UML</strong> - Unified Modeling Language</li>\n              <li><strong>RBAC</strong> - Role-Based Access Control</li>\n            </ul>\n\n            <h3>Security Threats</h3>\n            <ul>\n              <li><strong>CSRF</strong> - Cross-Site Request Forgery</li>\n              <li><strong>XSS</strong> - Cross-Site Scripting</li>\n              <li><strong>DDoS</strong> - Distributed Denial of Service</li>\n              <li><strong>SQLi</strong> - SQL Injection</li>\n            </ul>\n\n            <h3>Processing & Architecture</h3>\n            <ul>\n              <li><strong>SIMT</strong> - Single Instruction, Multiple Threads</li>\n              <li><strong>SIMD</strong> - Single Instruction, Multiple Data</li>\n              <li><strong>DAU</strong> - Daily Active Users</li>\n              <li><strong>ELK Stack</strong> - Elasticsearch, Logstash, and Kibana</li>\n            </ul>\n\n            <h3>Compliance & Regulations</h3>\n            <ul>\n              <li><strong>GDPR</strong> - General Data Protection Regulation</li>\n              <li><strong>PCI</strong> - Payment Card Industry</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'must-know-terms',\n      title: 'Must know Terms',\n      subtopics: [\n        // Database Fundamentals (15 subtopics) - Core database concepts and transaction management\n        {\n          ...databaseDesignPrinciples,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...unixEpoch,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...acidProperties,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...baseProperties,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...mvcc,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...concurrencyControlProblems,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...optimisticVsPessimisticLocking,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...twoPhaseLocking,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...timestampingProtocol,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...localityOfReference,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...isolationLevels,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...deadlockDetectionPrevention,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...distributedTransactions,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...databaseSharding,\n          category: 'Database Fundamentals'\n        },\n        {\n          ...databaseTypes,\n          category: 'Database Fundamentals'\n        },\n\n        // Distributed Systems Theory (15 subtopics) - Consensus algorithms and distributed coordination\n        {\n          ...capTheorem,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...pacelcTheorem,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...distributedConsensus,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...paxosConsensus,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...raftConsensus,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...quorumConcepts,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...hintedHandoff,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...gossipProtocol,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...thunderingHerd,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...resourceStarvation,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...vectorClocks,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...merkleTree,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...bloomFilter,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...hyperLogLog,\n          category: 'Distributed Systems Theory'\n        },\n        {\n          ...replication,\n          category: 'Distributed Systems Theory'\n        },\n\n        // System Architecture & Scalability (20 subtopics) - Architecture patterns and scalability\n        {\n          ...consistentHashing,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...loadBalancer,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...consistentHashingVsLoadBalancing,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...activeActiveVsActivePassive,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...apiGateway,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...cdn,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...circuitBreaker,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...rateLimiting,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...caching,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...messageQueues,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...microservices,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...apiDesign,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...eventSourcing,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...applicationServer,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...verticalVsHorizontalScaling,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...elasticityVsScalability,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...partitioning,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...hashing,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...proxies,\n          category: 'System Architecture & Scalability'\n        },\n        {\n          ...cloudComputing,\n          category: 'System Architecture & Scalability'\n        },\n\n        // Security & Authentication (10 subtopics) - Security protocols and access control\n        {\n          ...authentication,\n          category: 'Security & Authentication'\n        },\n        {\n          ...authorization,\n          category: 'Security & Authentication'\n        },\n        {\n          ...jwt,\n          category: 'Security & Authentication'\n        },\n        {\n          ...oauth,\n          category: 'Security & Authentication'\n        },\n        {\n          ...oauth2,\n          category: 'Security & Authentication'\n        },\n        {\n          ...rbac,\n          category: 'Security & Authentication'\n        },\n        {\n          ...keyExchange,\n          category: 'Security & Authentication'\n        },\n        {\n          ...encryption,\n          category: 'Security & Authentication'\n        },\n        {\n          ...encryptionDecryption,\n          category: 'Security & Authentication'\n        },\n        {\n          ...ddos,\n          category: 'Security & Authentication'\n        },\n\n        // Networking & Protocols (15 subtopics) - Network communication and protocols\n        {\n          ...networkProtocols,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...tcp,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...tcpVsUdp,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...osiModel,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...tcpIpModel,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...http,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...httpVsHttps,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...https,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...httpVersions,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...httpStatusCodes,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...httpHeaders,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...webSockets,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...dns,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...networking,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...cors,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...urlVsUriVsUrn,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...bgp,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...unicodeCharacters,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...serializationDeserialization,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...encodingDecoding,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...compressionDecompression,\n          category: 'Networking & Protocols'\n        },\n        {\n          ...udp,\n          category: 'Networking & Protocols'\n        },\n\n        // DevOps & Infrastructure (15 subtopics) - Deployment and infrastructure management\n        {\n          ...containerization,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...docker,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...kubernetes,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...cicd,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...monitoring,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...logging,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...backup,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...recovery,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...failoverStrategies,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...serverless,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...edgeComputing,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...containers,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...tracing,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...monitoringObservability,\n          category: 'DevOps & Infrastructure'\n        },\n        {\n          ...retryPattern,\n          category: 'DevOps & Infrastructure'\n        },\n\n        // Data Structures & Algorithms (10 subtopics) - Core CS fundamentals\n        {\n          ...dataStructures,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...algorithms,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...indexing,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...hashing,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...cacheStrategies,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...cacheEvictionPolicies,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...normalization,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...sql,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...nosql,\n          category: 'Data Structures & Algorithms'\n        },\n        {\n          ...softwareDesignPatterns,\n          category: 'Data Structures & Algorithms'\n        },\n\n        // Performance & Reliability (10 subtopics) - System performance and reliability patterns\n        {\n          ...bulkhead,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...timeoutPattern,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...thunderingHerdProblem,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...eventStreaming,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...graphql,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...restApi,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...rateLimit,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...forwardProxy,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...reverseProxy,\n          category: 'Performance & Reliability'\n        },\n        {\n          ...webServer,\n          category: 'Performance & Reliability'\n        }\n      ].sort((a, b) => a.title.localeCompare(b.title))\n    },\n    {\n      id: 'system-design',\n      title: 'System Design HLD',\n      subtopics: [\n        {\n          id: 'coming-soon',\n          title: 'Coming Soon',\n          content: `\n            <h2>System Design High Level Design</h2>\n            <p>This section will contain comprehensive system design concepts and high-level design patterns.</p>\n            \n            <div class=\"info-note\">\n              <strong>📚 External Resource:</strong>\n              <p>For now, you can access detailed system design content at:</p>\n              <a href=\"https://docs.google.com/document/d/1jVUeQGD_xFlnVPBEdSHrxka-CESJBe_xuV-IA-kKxOs/edit\" target=\"_blank\">\n                System Design HLD Google Doc\n              </a>\n            </div>\n\n            <h3>Topics to be covered:</h3>\n            <ul>\n              <li>Scalability Patterns</li>\n              <li>Database Design</li>\n              <li>Caching Strategies</li>\n              <li>Message Queues</li>\n              <li>API Design</li>\n              <li>System Architecture Patterns</li>\n              <li>Performance Optimization</li>\n              <li>Monitoring and Observability</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'system-design-lld',\n      title: 'System Design LLD',\n      subtopics: [\n        {\n          id: 'low-level-design-coming-soon',\n          title: 'Coming Soon',\n          content: `\n            <h2>System Design Low Level Design</h2>\n            <p>This section will contain comprehensive low-level design concepts and implementation patterns.</p>\n            \n            <div class=\"info-note\">\n              <strong>📚 External Resource:</strong>\n              <p>For now, you can access detailed low-level design content at:</p>\n              <a href=\"https://docs.google.com/document/d/195UBBc7vSewe9BWUHLAvQFClR4HTLloozVhjdgZ54H8/edit\" target=\"_blank\">\n                System Design LLD Google Doc\n              </a>\n            </div>\n\n            <h3>Topics to be covered:</h3>\n            <ul>\n              <li>Object-Oriented Design Principles</li>\n              <li>Design Patterns</li>\n              <li>Code Architecture</li>\n              <li>Data Structures Implementation</li>\n              <li>Algorithm Design</li>\n              <li>Class Diagrams and UML</li>\n              <li>API Design Patterns</li>\n              <li>Testing Strategies</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'java-quick-reference',\n      title: 'Java Quick Reference',\n      subtopics: [\n        {\n          id: 'java-fundamentals',\n          title: 'Java Fundamentals',\n          content: `\n            <h2>Java Quick Reference</h2>\n            <p>Essential Java concepts and syntax for technical interviews.</p>\n            \n            <h3>Core Java Concepts</h3>\n            <ul>\n              <li><strong>OOP Principles:</strong> Encapsulation, Inheritance, Polymorphism, Abstraction</li>\n              <li><strong>Collections Framework:</strong> List, Set, Map, Queue interfaces</li>\n              <li><strong>Exception Handling:</strong> try-catch, checked vs unchecked exceptions</li>\n              <li><strong>Multithreading:</strong> Thread, Runnable, ExecutorService</li>\n              <li><strong>Generics:</strong> Type safety and wildcards</li>\n              <li><strong>Lambda Expressions:</strong> Functional programming in Java 8+</li>\n              <li><strong>Streams API:</strong> Functional data processing</li>\n            </ul>\n\n            <h3>Common Data Structures</h3>\n            <ul>\n              <li><strong>ArrayList vs LinkedList:</strong> Performance characteristics</li>\n              <li><strong>HashMap vs TreeMap:</strong> Ordering and performance</li>\n              <li><strong>HashSet vs TreeSet:</strong> Uniqueness and sorting</li>\n              <li><strong>Stack and Queue:</strong> LIFO vs FIFO operations</li>\n            </ul>\n\n            <h3>Memory Management</h3>\n            <ul>\n              <li><strong>Heap vs Stack:</strong> Memory allocation</li>\n              <li><strong>Garbage Collection:</strong> Automatic memory management</li>\n              <li><strong>Memory Leaks:</strong> Common causes and prevention</li>\n            </ul>\n\n            <div class=\"info-note\">\n              <strong>💡 Interview Tip:</strong>\n              <p>Focus on understanding the \"why\" behind Java features, not just the \"how\". Interviewers often ask about trade-offs and design decisions.</p>\n            </div>\n          `\n        }\n      ]\n    },\n    {\n      id: 'kafka-zookeeper',\n      title: 'Kafka & Zookeeper',\n      subtopics: [\n        {\n          id: 'kafka-fundamentals',\n          title: 'Kafka Fundamentals',\n          content: `\n            <h2>Apache Kafka & Zookeeper</h2>\n            <p>Distributed streaming platform for building real-time data pipelines.</p>\n            \n            <h3>Kafka Core Concepts</h3>\n            <ul>\n              <li><strong>Topics:</strong> Categories of messages</li>\n              <li><strong>Partitions:</strong> Scalability and parallelism</li>\n              <li><strong>Producers:</strong> Applications that send messages</li>\n              <li><strong>Consumers:</strong> Applications that read messages</li>\n              <li><strong>Brokers:</strong> Kafka servers that store data</li>\n              <li><strong>Consumer Groups:</strong> Load balancing consumers</li>\n            </ul>\n\n            <h3>Zookeeper's Role</h3>\n            <ul>\n              <li><strong>Cluster Coordination:</strong> Managing Kafka brokers</li>\n              <li><strong>Configuration Management:</strong> Storing metadata</li>\n              <li><strong>Leader Election:</strong> Partition leadership</li>\n              <li><strong>Service Discovery:</strong> Broker registration</li>\n            </ul>\n\n            <h3>Key Features</h3>\n            <ul>\n              <li><strong>High Throughput:</strong> Millions of messages per second</li>\n              <li><strong>Fault Tolerance:</strong> Replication and failover</li>\n              <li><strong>Scalability:</strong> Horizontal scaling</li>\n              <li><strong>Durability:</strong> Persistent storage</li>\n              <li><strong>Ordering:</strong> Per-partition message ordering</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <ul>\n              <li>Event Streaming</li>\n              <li>Log Aggregation</li>\n              <li>Real-time Analytics</li>\n              <li>Microservices Communication</li>\n              <li>Data Integration</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'rabbitmq',\n      title: 'RabbitMQ',\n      subtopics: [\n        {\n          id: 'rabbitmq-fundamentals',\n          title: 'RabbitMQ Fundamentals',\n          content: `\n            <h2>RabbitMQ</h2>\n            <p>Message broker that implements the Advanced Message Queuing Protocol (AMQP).</p>\n            \n            <h3>Core Components</h3>\n            <ul>\n              <li><strong>Producer:</strong> Sends messages</li>\n              <li><strong>Queue:</strong> Stores messages</li>\n              <li><strong>Consumer:</strong> Receives messages</li>\n              <li><strong>Exchange:</strong> Routes messages to queues</li>\n              <li><strong>Binding:</strong> Links exchanges to queues</li>\n              <li><strong>Routing Key:</strong> Message routing criteria</li>\n            </ul>\n\n            <h3>Exchange Types</h3>\n            <ul>\n              <li><strong>Direct:</strong> Exact routing key match</li>\n              <li><strong>Topic:</strong> Pattern-based routing</li>\n              <li><strong>Fanout:</strong> Broadcast to all queues</li>\n              <li><strong>Headers:</strong> Attribute-based routing</li>\n            </ul>\n\n            <h3>Message Properties</h3>\n            <ul>\n              <li><strong>Persistence:</strong> Message durability</li>\n              <li><strong>Acknowledgments:</strong> Delivery confirmation</li>\n              <li><strong>TTL:</strong> Time-to-live for messages</li>\n              <li><strong>Priority:</strong> Message prioritization</li>\n            </ul>\n\n            <h3>Reliability Features</h3>\n            <ul>\n              <li><strong>Clustering:</strong> High availability</li>\n              <li><strong>Mirroring:</strong> Queue replication</li>\n              <li><strong>Dead Letter Queues:</strong> Failed message handling</li>\n              <li><strong>Publisher Confirms:</strong> Delivery guarantees</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'redis-cache',\n      title: 'Redis Cache',\n      subtopics: [\n        {\n          id: 'redis-fundamentals',\n          title: 'Redis Fundamentals',\n          content: `\n            <h2>Redis Cache</h2>\n            <p>In-memory data structure store used as database, cache, and message broker.</p>\n            \n            <h3>Data Types</h3>\n            <ul>\n              <li><strong>Strings:</strong> Basic key-value pairs</li>\n              <li><strong>Lists:</strong> Ordered collections</li>\n              <li><strong>Sets:</strong> Unordered unique collections</li>\n              <li><strong>Hashes:</strong> Field-value pairs</li>\n              <li><strong>Sorted Sets:</strong> Ordered sets with scores</li>\n              <li><strong>Bitmaps:</strong> Bit-level operations</li>\n              <li><strong>Streams:</strong> Log-like data structure</li>\n            </ul>\n\n            <h3>Key Features</h3>\n            <ul>\n              <li><strong>In-Memory:</strong> Extremely fast access</li>\n              <li><strong>Persistence:</strong> RDB and AOF options</li>\n              <li><strong>Replication:</strong> Master-slave architecture</li>\n              <li><strong>Clustering:</strong> Horizontal scaling</li>\n              <li><strong>Pub/Sub:</strong> Message passing</li>\n              <li><strong>Transactions:</strong> ACID properties</li>\n            </ul>\n\n            <h3>Caching Strategies</h3>\n            <ul>\n              <li><strong>Cache-Aside:</strong> Application manages cache</li>\n              <li><strong>Write-Through:</strong> Synchronous write to cache and DB</li>\n              <li><strong>Write-Behind:</strong> Asynchronous write to DB</li>\n              <li><strong>Refresh-Ahead:</strong> Proactive cache refresh</li>\n            </ul>\n\n            <h3>Common Use Cases</h3>\n            <ul>\n              <li>Session Storage</li>\n              <li>Application Caching</li>\n              <li>Real-time Analytics</li>\n              <li>Message Queuing</li>\n              <li>Leaderboards</li>\n              <li>Rate Limiting</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'aerospike',\n      title: 'Aerospike',\n      subtopics: [\n        {\n          id: 'aerospike-fundamentals',\n          title: 'Aerospike Fundamentals',\n          content: `\n            <h2>Aerospike</h2>\n            <p>High-performance NoSQL database designed for speed and scale.</p>\n            \n            <h3>Architecture</h3>\n            <ul>\n              <li><strong>Hybrid Memory:</strong> RAM + SSD optimization</li>\n              <li><strong>Shared-Nothing:</strong> Distributed architecture</li>\n              <li><strong>Smart Client:</strong> Direct node communication</li>\n              <li><strong>Automatic Sharding:</strong> Data distribution</li>\n            </ul>\n\n            <h3>Data Model</h3>\n            <ul>\n              <li><strong>Namespace:</strong> Database equivalent</li>\n              <li><strong>Set:</strong> Table equivalent</li>\n              <li><strong>Record:</strong> Row equivalent</li>\n              <li><strong>Bins:</strong> Column equivalent</li>\n              <li><strong>Key:</strong> Primary key</li>\n            </ul>\n\n            <h3>Key Features</h3>\n            <ul>\n              <li><strong>Sub-millisecond Latency:</strong> Predictable performance</li>\n              <li><strong>Linear Scalability:</strong> Horizontal scaling</li>\n              <li><strong>Strong Consistency:</strong> ACID transactions</li>\n              <li><strong>High Availability:</strong> 99.999% uptime</li>\n              <li><strong>Cross-Datacenter Replication:</strong> Global distribution</li>\n            </ul>\n\n            <h3>Storage Options</h3>\n            <ul>\n              <li><strong>In-Memory:</strong> Fastest access</li>\n              <li><strong>SSD:</strong> Persistent storage</li>\n              <li><strong>Hybrid:</strong> Index in memory, data on SSD</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <ul>\n              <li>Real-time Bidding</li>\n              <li>Fraud Detection</li>\n              <li>Session Management</li>\n              <li>IoT Data Processing</li>\n              <li>Gaming Leaderboards</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'memcached',\n      title: 'Memcached',\n      subtopics: [\n        {\n          id: 'memcached-fundamentals',\n          title: 'Memcached Fundamentals',\n          content: `\n            <h2>Memcached</h2>\n            <p>High-performance, distributed memory object caching system.</p>\n            \n            <h3>Architecture</h3>\n            <ul>\n              <li><strong>Client-Server:</strong> Simple protocol</li>\n              <li><strong>Distributed:</strong> Multiple server nodes</li>\n              <li><strong>No Replication:</strong> Each item stored once</li>\n              <li><strong>Hash-based:</strong> Key distribution</li>\n            </ul>\n\n            <h3>Key Characteristics</h3>\n            <ul>\n              <li><strong>In-Memory Only:</strong> No persistence</li>\n              <li><strong>Key-Value Store:</strong> Simple data model</li>\n              <li><strong>LRU Eviction:</strong> Least recently used</li>\n              <li><strong>Thread-Safe:</strong> Multi-threaded</li>\n              <li><strong>Protocol:</strong> Text and binary</li>\n            </ul>\n\n            <h3>Operations</h3>\n            <ul>\n              <li><strong>GET:</strong> Retrieve value by key</li>\n              <li><strong>SET:</strong> Store key-value pair</li>\n              <li><strong>ADD:</strong> Store if key doesn't exist</li>\n              <li><strong>REPLACE:</strong> Update existing key</li>\n              <li><strong>DELETE:</strong> Remove key</li>\n              <li><strong>INCR/DECR:</strong> Atomic increment/decrement</li>\n            </ul>\n\n            <h3>Advantages</h3>\n            <ul>\n              <li><strong>High Performance:</strong> Microsecond latency</li>\n              <li><strong>Simplicity:</strong> Easy to deploy and use</li>\n              <li><strong>Scalability:</strong> Horizontal scaling</li>\n              <li><strong>Memory Efficiency:</strong> Optimized memory usage</li>\n            </ul>\n\n            <h3>Limitations</h3>\n            <ul>\n              <li>No persistence</li>\n              <li>No replication</li>\n              <li>No complex data types</li>\n              <li>No authentication</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <ul>\n              <li>Web Application Caching</li>\n              <li>Database Query Caching</li>\n              <li>Session Storage</li>\n              <li>API Response Caching</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'mongodb',\n      title: 'MongoDB',\n      subtopics: [\n        {\n          id: 'mongodb-fundamentals',\n          title: 'MongoDB Fundamentals',\n          content: `\n            <h2>MongoDB</h2>\n            <p>Document-oriented NoSQL database for modern applications.</p>\n            \n            <h3>Document Model</h3>\n            <ul>\n              <li><strong>BSON:</strong> Binary JSON format</li>\n              <li><strong>Collections:</strong> Groups of documents</li>\n              <li><strong>Documents:</strong> Key-value pairs</li>\n              <li><strong>Fields:</strong> Data attributes</li>\n              <li><strong>Embedded Documents:</strong> Nested structures</li>\n            </ul>\n\n            <h3>Key Features</h3>\n            <ul>\n              <li><strong>Schema Flexibility:</strong> Dynamic schema</li>\n              <li><strong>Rich Query Language:</strong> Powerful queries</li>\n              <li><strong>Indexing:</strong> Performance optimization</li>\n              <li><strong>Aggregation:</strong> Data processing pipeline</li>\n              <li><strong>Replication:</strong> High availability</li>\n              <li><strong>Sharding:</strong> Horizontal scaling</li>\n            </ul>\n\n            <h3>CRUD Operations</h3>\n            <ul>\n              <li><strong>Create:</strong> insertOne(), insertMany()</li>\n              <li><strong>Read:</strong> find(), findOne()</li>\n              <li><strong>Update:</strong> updateOne(), updateMany()</li>\n              <li><strong>Delete:</strong> deleteOne(), deleteMany()</li>\n            </ul>\n\n            <h3>Aggregation Framework</h3>\n            <ul>\n              <li><strong>Pipeline:</strong> Sequential data processing</li>\n              <li><strong>Stages:</strong> $match, $group, $sort, $project</li>\n              <li><strong>Operators:</strong> $sum, $avg, $min, $max</li>\n              <li><strong>Lookup:</strong> Join operations</li>\n            </ul>\n\n            <h3>Indexing</h3>\n            <ul>\n              <li><strong>Single Field:</strong> Index on one field</li>\n              <li><strong>Compound:</strong> Index on multiple fields</li>\n              <li><strong>Text:</strong> Full-text search</li>\n              <li><strong>Geospatial:</strong> Location-based queries</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <ul>\n              <li>Content Management</li>\n              <li>Real-time Analytics</li>\n              <li>Internet of Things</li>\n              <li>Mobile Applications</li>\n              <li>Product Catalogs</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'neo4j',\n      title: 'Neo4J',\n      subtopics: [\n        {\n          id: 'neo4j-fundamentals',\n          title: 'Neo4J Fundamentals',\n          content: `\n            <h2>Neo4J</h2>\n            <p>Graph database management system for connected data.</p>\n            \n            <h3>Graph Model</h3>\n            <ul>\n              <li><strong>Nodes:</strong> Entities in the graph</li>\n              <li><strong>Relationships:</strong> Connections between nodes</li>\n              <li><strong>Properties:</strong> Key-value pairs on nodes/relationships</li>\n              <li><strong>Labels:</strong> Node categories</li>\n              <li><strong>Types:</strong> Relationship categories</li>\n            </ul>\n\n            <h3>Cypher Query Language</h3>\n            <ul>\n              <li><strong>Pattern Matching:</strong> (n)-[r]->(m)</li>\n              <li><strong>CREATE:</strong> Create nodes and relationships</li>\n              <li><strong>MATCH:</strong> Find patterns</li>\n              <li><strong>WHERE:</strong> Filter conditions</li>\n              <li><strong>RETURN:</strong> Specify output</li>\n              <li><strong>MERGE:</strong> Create or match</li>\n            </ul>\n\n            <h3>Key Features</h3>\n            <ul>\n              <li><strong>ACID Transactions:</strong> Data consistency</li>\n              <li><strong>Index-Free Adjacency:</strong> Fast traversals</li>\n              <li><strong>High Performance:</strong> Optimized for relationships</li>\n              <li><strong>Scalability:</strong> Horizontal and vertical scaling</li>\n              <li><strong>Clustering:</strong> High availability</li>\n            </ul>\n\n            <h3>Graph Algorithms</h3>\n            <ul>\n              <li><strong>Pathfinding:</strong> Shortest path, A*</li>\n              <li><strong>Centrality:</strong> PageRank, Betweenness</li>\n              <li><strong>Community Detection:</strong> Louvain, Label Propagation</li>\n              <li><strong>Similarity:</strong> Jaccard, Cosine</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <ul>\n              <li>Social Networks</li>\n              <li>Recommendation Engines</li>\n              <li>Fraud Detection</li>\n              <li>Knowledge Graphs</li>\n              <li>Network Management</li>\n              <li>Master Data Management</li>\n            </ul>\n\n            <h3>Advantages</h3>\n            <ul>\n              <li>Intuitive data modeling</li>\n              <li>Fast relationship traversals</li>\n              <li>Flexible schema</li>\n              <li>Rich query language</li>\n              <li>ACID compliance</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'mysql-sql',\n      title: 'MySQL & SQL',\n      subtopics: [\n        {\n          id: 'mysql-fundamentals',\n          title: 'MySQL Fundamentals',\n          content: `\n            <h2>MySQL & SQL</h2>\n            <p>Relational database management system and Structured Query Language.</p>\n            \n            <h3>SQL Fundamentals</h3>\n            <ul>\n              <li><strong>DDL:</strong> CREATE, ALTER, DROP (Data Definition)</li>\n              <li><strong>DML:</strong> INSERT, UPDATE, DELETE (Data Manipulation)</li>\n              <li><strong>DQL:</strong> SELECT (Data Query)</li>\n              <li><strong>DCL:</strong> GRANT, REVOKE (Data Control)</li>\n              <li><strong>TCL:</strong> COMMIT, ROLLBACK (Transaction Control)</li>\n            </ul>\n\n            <h3>MySQL Features</h3>\n            <ul>\n              <li><strong>Storage Engines:</strong> InnoDB, MyISAM</li>\n              <li><strong>ACID Compliance:</strong> Transactions support</li>\n              <li><strong>Replication:</strong> Master-slave, Master-master</li>\n              <li><strong>Partitioning:</strong> Horizontal data splitting</li>\n              <li><strong>Indexing:</strong> B-tree, Hash, Full-text</li>\n            </ul>\n\n            <h3>Query Optimization</h3>\n            <ul>\n              <li><strong>EXPLAIN:</strong> Query execution plan</li>\n              <li><strong>Indexes:</strong> Primary, Secondary, Composite</li>\n              <li><strong>Query Cache:</strong> Result caching</li>\n              <li><strong>Partitioning:</strong> Data distribution</li>\n              <li><strong>Normalization:</strong> Data organization</li>\n            </ul>\n\n            <h3>Advanced Features</h3>\n            <ul>\n              <li><strong>Stored Procedures:</strong> Server-side logic</li>\n              <li><strong>Triggers:</strong> Automatic actions</li>\n              <li><strong>Views:</strong> Virtual tables</li>\n              <li><strong>Functions:</strong> Built-in and user-defined</li>\n              <li><strong>JSON Support:</strong> Document storage</li>\n            </ul>\n\n            <h3>Performance Tuning</h3>\n            <ul>\n              <li><strong>Configuration:</strong> my.cnf optimization</li>\n              <li><strong>Buffer Pool:</strong> Memory management</li>\n              <li><strong>Connection Pooling:</strong> Resource management</li>\n              <li><strong>Slow Query Log:</strong> Performance monitoring</li>\n            </ul>\n\n            <h3>Common Patterns</h3>\n            <ul>\n              <li>CRUD Operations</li>\n              <li>Joins and Subqueries</li>\n              <li>Aggregate Functions</li>\n              <li>Window Functions</li>\n              <li>Common Table Expressions</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'cassandra-hbase',\n      title: 'Cassandra & HBase',\n      subtopics: [\n        {\n          id: 'cassandra-hbase-fundamentals',\n          title: 'Cassandra & HBase Fundamentals',\n          content: `\n            <h2>Cassandra & HBase</h2>\n            <p>Distributed NoSQL databases for big data applications.</p>\n            \n            <h3>Apache Cassandra</h3>\n            <ul>\n              <li><strong>Architecture:</strong> Peer-to-peer, masterless</li>\n              <li><strong>Data Model:</strong> Column-family (wide column)</li>\n              <li><strong>Consistency:</strong> Tunable consistency levels</li>\n              <li><strong>Partitioning:</strong> Consistent hashing</li>\n              <li><strong>Replication:</strong> Multi-datacenter support</li>\n            </ul>\n\n            <h3>Apache HBase</h3>\n            <ul>\n              <li><strong>Architecture:</strong> Master-slave with HDFS</li>\n              <li><strong>Data Model:</strong> Column-oriented</li>\n              <li><strong>Consistency:</strong> Strong consistency</li>\n              <li><strong>Storage:</strong> Hadoop Distributed File System</li>\n              <li><strong>Integration:</strong> Hadoop ecosystem</li>\n            </ul>\n\n            <h3>Cassandra Features</h3>\n            <ul>\n              <li><strong>Linear Scalability:</strong> Add nodes easily</li>\n              <li><strong>High Availability:</strong> No single point of failure</li>\n              <li><strong>CQL:</strong> Cassandra Query Language</li>\n              <li><strong>Materialized Views:</strong> Denormalized data</li>\n              <li><strong>Lightweight Transactions:</strong> Compare-and-set</li>\n            </ul>\n\n            <h3>HBase Features</h3>\n            <ul>\n              <li><strong>Random Access:</strong> Real-time read/write</li>\n              <li><strong>Automatic Sharding:</strong> Region splitting</li>\n              <li><strong>Compression:</strong> Data compression</li>\n              <li><strong>Versioning:</strong> Multiple versions per cell</li>\n              <li><strong>Coprocessors:</strong> Server-side processing</li>\n            </ul>\n\n            <h3>Use Cases</h3>\n            <h4>Cassandra:</h4>\n            <ul>\n              <li>Time-series data</li>\n              <li>IoT applications</li>\n              <li>Messaging systems</li>\n              <li>Product catalogs</li>\n            </ul>\n\n            <h4>HBase:</h4>\n            <ul>\n              <li>Real-time analytics</li>\n              <li>Content serving</li>\n              <li>Log processing</li>\n              <li>Search indexing</li>\n            </ul>\n\n            <h3>Comparison</h3>\n            <table>\n              <tr>\n                <th>Feature</th>\n                <th>Cassandra</th>\n                <th>HBase</th>\n              </tr>\n              <tr>\n                <td>Consistency</td>\n                <td>Eventual (tunable)</td>\n                <td>Strong</td>\n              </tr>\n              <tr>\n                <td>Architecture</td>\n                <td>Masterless</td>\n                <td>Master-slave</td>\n              </tr>\n              <tr>\n                <td>CAP Theorem</td>\n                <td>AP (Availability, Partition tolerance)</td>\n                <td>CP (Consistency, Partition tolerance)</td>\n              </tr>\n            </table>\n          `\n        }\n      ]\n    },\n    {\n      id: 'docker-containers',\n      title: 'Docker & Container',\n      subtopics: [\n        {\n          id: 'docker-fundamentals',\n          title: 'Docker Fundamentals',\n          content: `\n            <h2>Docker & Containers</h2>\n            <p>Containerization platform for application deployment and management.</p>\n            \n            <h3>Container Concepts</h3>\n            <ul>\n              <li><strong>Containerization:</strong> OS-level virtualization</li>\n              <li><strong>Images:</strong> Read-only templates</li>\n              <li><strong>Containers:</strong> Running instances of images</li>\n              <li><strong>Layers:</strong> Incremental changes</li>\n              <li><strong>Registry:</strong> Image storage and distribution</li>\n            </ul>\n\n            <h3>Docker Architecture</h3>\n            <ul>\n              <li><strong>Docker Engine:</strong> Container runtime</li>\n              <li><strong>Docker Daemon:</strong> Background service</li>\n              <li><strong>Docker CLI:</strong> Command-line interface</li>\n              <li><strong>Docker API:</strong> RESTful API</li>\n              <li><strong>Docker Hub:</strong> Public registry</li>\n            </ul>\n\n            <h3>Key Commands</h3>\n            <ul>\n              <li><strong>docker build:</strong> Create image from Dockerfile</li>\n              <li><strong>docker run:</strong> Create and start container</li>\n              <li><strong>docker ps:</strong> List running containers</li>\n              <li><strong>docker exec:</strong> Execute command in container</li>\n              <li><strong>docker stop/start:</strong> Control container lifecycle</li>\n              <li><strong>docker pull/push:</strong> Image management</li>\n            </ul>\n\n            <h3>Dockerfile</h3>\n            <ul>\n              <li><strong>FROM:</strong> Base image</li>\n              <li><strong>RUN:</strong> Execute commands</li>\n              <li><strong>COPY/ADD:</strong> Copy files</li>\n              <li><strong>WORKDIR:</strong> Set working directory</li>\n              <li><strong>EXPOSE:</strong> Declare ports</li>\n              <li><strong>CMD/ENTRYPOINT:</strong> Default command</li>\n            </ul>\n\n            <h3>Networking</h3>\n            <ul>\n              <li><strong>Bridge:</strong> Default network</li>\n              <li><strong>Host:</strong> Host network</li>\n              <li><strong>None:</strong> No networking</li>\n              <li><strong>Custom:</strong> User-defined networks</li>\n              <li><strong>Port Mapping:</strong> Host-container port binding</li>\n            </ul>\n\n            <h3>Storage</h3>\n            <ul>\n              <li><strong>Volumes:</strong> Persistent data storage</li>\n              <li><strong>Bind Mounts:</strong> Host directory mounting</li>\n              <li><strong>tmpfs:</strong> Temporary filesystem</li>\n              <li><strong>Data Containers:</strong> Shared storage</li>\n            </ul>\n\n            <h3>Best Practices</h3>\n            <ul>\n              <li>Use multi-stage builds</li>\n              <li>Minimize layer count</li>\n              <li>Use .dockerignore</li>\n              <li>Run as non-root user</li>\n              <li>Keep containers stateless</li>\n              <li>Use health checks</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'kubernetes',\n      title: 'Kubernetes (K8s)',\n      subtopics: [\n        {\n          id: 'kubernetes-fundamentals',\n          title: 'Kubernetes Fundamentals',\n          content: `\n            <h2>Kubernetes (K8s)</h2>\n            <p>Container orchestration platform for automating deployment, scaling, and management.</p>\n            \n            <h3>Core Components</h3>\n            <ul>\n              <li><strong>Master Node:</strong> Control plane</li>\n              <li><strong>Worker Nodes:</strong> Application workloads</li>\n              <li><strong>etcd:</strong> Distributed key-value store</li>\n              <li><strong>API Server:</strong> Central management</li>\n              <li><strong>Scheduler:</strong> Pod placement</li>\n              <li><strong>Controller Manager:</strong> Cluster state management</li>\n            </ul>\n\n            <h3>Workload Objects</h3>\n            <ul>\n              <li><strong>Pod:</strong> Smallest deployable unit</li>\n              <li><strong>ReplicaSet:</strong> Pod replication</li>\n              <li><strong>Deployment:</strong> Declarative updates</li>\n              <li><strong>StatefulSet:</strong> Stateful applications</li>\n              <li><strong>DaemonSet:</strong> Node-level services</li>\n              <li><strong>Job/CronJob:</strong> Batch workloads</li>\n            </ul>\n\n            <h3>Service Discovery</h3>\n            <ul>\n              <li><strong>Service:</strong> Stable network endpoint</li>\n              <li><strong>ClusterIP:</strong> Internal cluster access</li>\n              <li><strong>NodePort:</strong> External access via node</li>\n              <li><strong>LoadBalancer:</strong> Cloud load balancer</li>\n              <li><strong>Ingress:</strong> HTTP/HTTPS routing</li>\n            </ul>\n\n            <h3>Configuration</h3>\n            <ul>\n              <li><strong>ConfigMap:</strong> Configuration data</li>\n              <li><strong>Secret:</strong> Sensitive data</li>\n              <li><strong>Environment Variables:</strong> Runtime configuration</li>\n              <li><strong>Volume Mounts:</strong> File-based configuration</li>\n            </ul>\n\n            <h3>Storage</h3>\n            <ul>\n              <li><strong>Persistent Volume (PV):</strong> Cluster storage</li>\n              <li><strong>Persistent Volume Claim (PVC):</strong> Storage request</li>\n              <li><strong>Storage Classes:</strong> Dynamic provisioning</li>\n              <li><strong>Volume Types:</strong> Various storage backends</li>\n            </ul>\n\n            <h3>Scaling & Updates</h3>\n            <ul>\n              <li><strong>Horizontal Pod Autoscaler:</strong> Automatic scaling</li>\n              <li><strong>Vertical Pod Autoscaler:</strong> Resource adjustment</li>\n              <li><strong>Rolling Updates:</strong> Zero-downtime deployments</li>\n              <li><strong>Blue-Green Deployments:</strong> Release strategies</li>\n            </ul>\n\n            <h3>Security</h3>\n            <ul>\n              <li><strong>RBAC:</strong> Role-based access control</li>\n              <li><strong>Service Accounts:</strong> Pod identity</li>\n              <li><strong>Network Policies:</strong> Traffic control</li>\n              <li><strong>Pod Security Policies:</strong> Security constraints</li>\n            </ul>\n\n            <h3>kubectl Commands</h3>\n            <ul>\n              <li><strong>kubectl get:</strong> List resources</li>\n              <li><strong>kubectl describe:</strong> Detailed information</li>\n              <li><strong>kubectl apply:</strong> Deploy resources</li>\n              <li><strong>kubectl delete:</strong> Remove resources</li>\n              <li><strong>kubectl logs:</strong> View logs</li>\n              <li><strong>kubectl exec:</strong> Execute commands</li>\n            </ul>\n          `\n        }\n      ]\n    },\n    {\n      id: 'aws',\n      title: 'AWS',\n      subtopics: [\n        {\n          id: 'aws-fundamentals',\n          title: 'AWS Fundamentals',\n          content: `\n            <h2>Amazon Web Services (AWS)</h2>\n            <p>Cloud computing platform offering a wide range of services.</p>\n            \n            <h3>Core Services</h3>\n            <ul>\n              <li><strong>EC2:</strong> Elastic Compute Cloud (Virtual Servers)</li>\n              <li><strong>S3:</strong> Simple Storage Service (Object Storage)</li>\n              <li><strong>RDS:</strong> Relational Database Service</li>\n              <li><strong>VPC:</strong> Virtual Private Cloud (Networking)</li>\n              <li><strong>IAM:</strong> Identity and Access Management</li>\n              <li><strong>Lambda:</strong> Serverless Computing</li>\n            </ul>\n\n            <h3>Compute Services</h3>\n            <ul>\n              <li><strong>EC2:</strong> Virtual machines</li>\n              <li><strong>Lambda:</strong> Function as a Service</li>\n              <li><strong>ECS:</strong> Container orchestration</li>\n              <li><strong>EKS:</strong> Managed Kubernetes</li>\n              <li><strong>Fargate:</strong> Serverless containers</li>\n              <li><strong>Batch:</strong> Batch processing</li>\n            </ul>\n\n            <h3>Storage Services</h3>\n            <ul>\n              <li><strong>S3:</strong> Object storage</li>\n              <li><strong>EBS:</strong> Block storage</li>\n              <li><strong>EFS:</strong> File storage</li>\n              <li><strong>Glacier:</strong> Archive storage</li>\n              <li><strong>Storage Gateway:</strong> Hybrid storage</li>\n            </ul>\n\n            <h3>Database Services</h3>\n            <ul>\n              <li><strong>RDS:</strong> Managed relational databases</li>\n              <li><strong>DynamoDB:</strong> NoSQL database</li>\n              <li><strong>ElastiCache:</strong> In-memory caching</li>\n              <li><strong>Redshift:</strong> Data warehousing</li>\n              <li><strong>DocumentDB:</strong> MongoDB-compatible</li>\n            </ul>\n\n            <h3>Networking</h3>\n            <ul>\n              <li><strong>VPC:</strong> Virtual private cloud</li>\n              <li><strong>Route 53:</strong> DNS service</li>\n              <li><strong>CloudFront:</strong> Content delivery network</li>\n              <li><strong>ELB:</strong> Elastic Load Balancing</li>\n              <li><strong>API Gateway:</strong> API management</li>\n            </ul>\n\n            <h3>Security & Identity</h3>\n            <ul>\n              <li><strong>IAM:</strong> Identity and access management</li>\n              <li><strong>Cognito:</strong> User authentication</li>\n              <li><strong>KMS:</strong> Key management service</li>\n              <li><strong>WAF:</strong> Web application firewall</li>\n              <li><strong>Shield:</strong> DDoS protection</li>\n            </ul>\n\n            <h3>Monitoring & Management</h3>\n            <ul>\n              <li><strong>CloudWatch:</strong> Monitoring and logging</li>\n              <li><strong>CloudTrail:</strong> API logging</li>\n              <li><strong>Config:</strong> Resource configuration</li>\n              <li><strong>Systems Manager:</strong> Operational insights</li>\n              <li><strong>X-Ray:</strong> Distributed tracing</li>\n            </ul>\n\n            <h3>Well-Architected Framework</h3>\n            <ul>\n              <li><strong>Operational Excellence:</strong> Operations automation</li>\n              <li><strong>Security:</strong> Data protection</li>\n              <li><strong>Reliability:</strong> System resilience</li>\n              <li><strong>Performance Efficiency:</strong> Resource optimization</li>\n              <li><strong>Cost Optimization:</strong> Cost management</li>\n            </ul>\n\n            <h3>Common Patterns</h3>\n            <ul>\n              <li>Three-tier architecture</li>\n              <li>Microservices with containers</li>\n              <li>Serverless applications</li>\n              <li>Data lakes and analytics</li>\n              <li>Disaster recovery</li>\n            </ul>\n          `\n        }\n      ]\n    }\n  ]\n}; ","export const databaseDesignPrinciples = {\n  id: 'database-design-principles',\n  title: 'Database Design Principles',\n  content: `\n    <h2>Database Design Principles</h2>\n    <p>Fundamental principles that guide effective database design and implementation.</p>\n    \n    <h3>Core Design Principles</h3>\n    <ul>\n      <li><strong>Normalization:</strong> Organize data to reduce redundancy and improve data integrity</li>\n      <li><strong>Denormalization:</strong> Strategic redundancy for performance optimization</li>\n      <li><strong>Data Integrity:</strong> Ensure accuracy and consistency of data</li>\n      <li><strong>Scalability:</strong> Design for future growth and increased load</li>\n      <li><strong>Performance:</strong> Optimize for query efficiency and response times</li>\n    </ul>\n\n    <h3>Key Considerations</h3>\n    <ul>\n      <li><strong>Entity Relationships:</strong> Define clear relationships between data entities</li>\n      <li><strong>Indexing Strategy:</strong> Create appropriate indexes for query optimization</li>\n      <li><strong>Data Types:</strong> Choose optimal data types for storage efficiency</li>\n      <li><strong>Constraints:</strong> Implement business rules through database constraints</li>\n      <li><strong>Security:</strong> Design with data protection and access control in mind</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Best Practices:</strong>\n      <p>Good database design balances normalization for data integrity with denormalization for performance, considering the specific use case and access patterns.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.educative.io/blog/database-design-tutorial\" target=\"_blank\">Database Design Tutorial</a></li>\n        <li><a href=\"https://www.scaler.com/topics/dbms/database-design/\" target=\"_blank\">Database Design Concepts</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const unixEpoch = {\n  id: 'unix-epoch',\n  title: 'Unix Epoch',\n  content: `\n    <h2>Unix Epoch</h2>\n    <p>The Unix epoch is the starting point for Unix time measurement, representing <strong>00:00:00 Coordinated Universal Time (UTC) on 1 January 1970</strong>. It serves as the foundation for time representation in most computer systems and is crucial for system design interviews.</p>\n    \n    <h3>Key Definitions</h3>\n    <ul>\n      <li><strong>Unix Epoch:</strong> 00:00:00 UTC on January 1, 1970</li>\n      <li><strong>Unix Timestamp:</strong> Number of seconds elapsed since the Unix epoch</li>\n      <li><strong>Also known as:</strong> POSIX time, Unix time, epoch time, or seconds since epoch</li>\n      <li><strong>Representation:</strong> Typically stored as a signed integer (32-bit or 64-bit)</li>\n    </ul>\n\n    <h3>Technical Implementation</h3>\n    \n    <h4>Data Types and Storage</h4>\n    <ul>\n      <li><strong>32-bit signed integer:</strong> Range from December 13, 1901 to January 19, 2038</li>\n      <li><strong>64-bit signed integer:</strong> Range extends to approximately 292 billion years</li>\n      <li><strong>Precision:</strong> Standard Unix time has 1-second precision</li>\n      <li><strong>Microseconds:</strong> Some systems extend to microsecond precision</li>\n    </ul>\n\n    <h4>Code Examples</h4>\n    <div class=\"code-block\">\n      <h5>JavaScript</h5>\n      <pre><code>// Get current Unix timestamp\nconst timestamp = Math.floor(Date.now() / 1000);\nconsole.log(timestamp); // e.g., 1700000000\n\n// Convert Unix timestamp to Date\nconst date = new Date(timestamp * 1000);\nconsole.log(date.toISOString()); // 2023-11-14T22:13:20.000Z\n\n// Convert Date to Unix timestamp\nconst unixTime = Math.floor(new Date().getTime() / 1000);</code></pre>\n    </div>\n\n    <div class=\"code-block\">\n      <h5>Python</h5>\n      <pre><code>import time\nfrom datetime import datetime\n\n# Get current Unix timestamp\ntimestamp = int(time.time())\nprint(timestamp)  # e.g., 1700000000\n\n# Convert Unix timestamp to datetime\ndt = datetime.fromtimestamp(timestamp)\nprint(dt)  # 2023-11-14 22:13:20\n\n# Convert datetime to Unix timestamp\nunix_time = int(datetime.now().timestamp())</code></pre>\n    </div>\n\n    <div class=\"code-block\">\n      <h5>Java</h5>\n      <pre><code>import java.time.Instant;\nimport java.time.LocalDateTime;\nimport java.time.ZoneOffset;\n\n// Get current Unix timestamp\nlong timestamp = Instant.now().getEpochSecond();\nSystem.out.println(timestamp); // e.g., 1700000000\n\n// Convert Unix timestamp to LocalDateTime\nLocalDateTime dateTime = LocalDateTime.ofEpochSecond(\n    timestamp, 0, ZoneOffset.UTC);\nSystem.out.println(dateTime); // 2023-11-14T22:13:20</code></pre>\n    </div>\n\n    <h3>System Applications</h3>\n    \n    <h4>Operating Systems</h4>\n    <ul>\n      <li><strong>File Systems:</strong> File creation, modification, and access timestamps</li>\n      <li><strong>Process Management:</strong> Process start times and CPU usage tracking</li>\n      <li><strong>System Logs:</strong> Event timestamps in system and application logs</li>\n      <li><strong>Scheduling:</strong> Cron jobs and task scheduling based on Unix time</li>\n    </ul>\n\n    <h4>Database Systems</h4>\n    <ul>\n      <li><strong>Timestamp Columns:</strong> Storing event times and record creation dates</li>\n      <li><strong>Time-based Partitioning:</strong> Partitioning data by time ranges</li>\n      <li><strong>TTL (Time To Live):</strong> Automatic data expiration based on timestamps</li>\n      <li><strong>Replication:</strong> Ordering events in distributed database systems</li>\n    </ul>\n\n    <h4>Distributed Systems</h4>\n    <ul>\n      <li><strong>Event Ordering:</strong> Establishing chronological order of events</li>\n      <li><strong>Cache Expiration:</strong> TTL-based cache invalidation</li>\n      <li><strong>Rate Limiting:</strong> Time window-based request throttling</li>\n      <li><strong>Monitoring:</strong> Metrics collection and time-series data</li>\n    </ul>\n\n    <h3>Critical Issues and Considerations</h3>\n    \n    <h4>Y2038 Problem (Year 2038 Bug)</h4>\n    <div class=\"warning-note\">\n      <strong>⚠️ Critical Issue:</strong>\n      <p>32-bit signed integers will overflow on <strong>January 19, 2038, at 03:14:07 UTC</strong>. After this point, timestamps will wrap around to negative values, causing system failures.</p>\n      \n      <h5>Impact:</h5>\n      <ul>\n        <li>Legacy systems using 32-bit time_t will fail</li>\n        <li>Embedded systems and IoT devices at risk</li>\n        <li>Financial systems and critical infrastructure affected</li>\n        <li>Applications may crash or produce incorrect results</li>\n      </ul>\n      \n      <h5>Solutions:</h5>\n      <ul>\n        <li>Migrate to 64-bit time_t (already done in most modern systems)</li>\n        <li>Use alternative time representations for future dates</li>\n        <li>Update legacy systems and embedded devices</li>\n        <li>Implement proper testing for year 2038 scenarios</li>\n      </ul>\n    </div>\n\n    <h4>Leap Seconds</h4>\n    <ul>\n      <li><strong>Issue:</strong> Unix time doesn't account for leap seconds</li>\n      <li><strong>Impact:</strong> Can cause synchronization issues in distributed systems</li>\n      <li><strong>Solution:</strong> Use UTC with leap second handling or GPS time</li>\n    </ul>\n\n    <h4>Time Zone Considerations</h4>\n    <ul>\n      <li><strong>Storage:</strong> Always store timestamps in UTC (Unix time is UTC-based)</li>\n      <li><strong>Display:</strong> Convert to local time zones for user interfaces</li>\n      <li><strong>DST:</strong> Handle Daylight Saving Time transitions properly</li>\n      <li><strong>APIs:</strong> Use ISO 8601 format for human-readable timestamps</li>\n    </ul>\n\n    <h3>Best Practices for System Design</h3>\n    \n    <h4>Storage Recommendations</h4>\n    <ul>\n      <li><strong>Use 64-bit integers:</strong> Future-proof against Y2038 problem</li>\n      <li><strong>Store in UTC:</strong> Avoid time zone complications</li>\n      <li><strong>Include precision:</strong> Consider microseconds for high-precision needs</li>\n      <li><strong>Indexing:</strong> Create indexes on timestamp columns for efficient queries</li>\n    </ul>\n\n    <h4>API Design</h4>\n    <ul>\n      <li><strong>Accept multiple formats:</strong> Unix timestamps and ISO 8601</li>\n      <li><strong>Return consistent format:</strong> Standardize on one format for responses</li>\n      <li><strong>Include timezone info:</strong> When returning human-readable times</li>\n      <li><strong>Validation:</strong> Check for reasonable timestamp ranges</li>\n    </ul>\n\n    <h3>Common Interview Questions</h3>\n    <div class=\"interview-questions\">\n      <h4>Q: Why was January 1, 1970 chosen as the Unix epoch?</h4>\n      <p><strong>A:</strong> It was chosen as a \"nice round number\" that was recent enough to be relevant for computer systems at the time Unix was developed (late 1960s/early 1970s), but not so recent as to cause issues with representing earlier dates.</p>\n      \n      <h4>Q: How would you handle timestamps in a global distributed system?</h4>\n      <p><strong>A:</strong> Store all timestamps in UTC using Unix time, use NTP for clock synchronization, implement logical clocks (vector clocks) for event ordering, and handle time zone conversion at the application layer for user display.</p>\n      \n      <h4>Q: What's the maximum date that can be represented with 32-bit Unix time?</h4>\n      <p><strong>A:</strong> January 19, 2038, 03:14:07 UTC (2^31 - 1 seconds after the epoch).</p>\n    </div>\n\n    <h3>Notable Timestamps</h3>\n    <div class=\"code-block\">\n      <pre><code>0          - January 1, 1970, 00:00:00 UTC (The Epoch)\n86400      - January 2, 1970, 00:00:00 UTC (One day later)\n1000000000 - September 9, 2001, 01:46:40 UTC (Billion seconds)\n1234567890 - February 13, 2009, 23:31:30 UTC (Memorable number)\n1500000000 - July 14, 2017, 02:40:00 UTC\n1600000000 - September 13, 2020, 12:26:40 UTC\n1700000000 - November 14, 2023, 22:13:20 UTC\n2147483647 - January 19, 2038, 03:14:07 UTC (32-bit limit)</code></pre>\n    </div>\n\n    <h3>Tools and Utilities</h3>\n    <ul>\n      <li><strong>date command:</strong> Unix/Linux command for date/time operations</li>\n      <li><strong>Online converters:</strong> epochconverter.com, unixtimestamp.com</li>\n      <li><strong>Programming libraries:</strong> moment.js, datetime, java.time</li>\n      <li><strong>Database functions:</strong> UNIX_TIMESTAMP(), FROM_UNIXTIME() in MySQL</li>\n    </ul>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">Unix Time - Wikipedia</a></li>\n        <li><a href=\"https://www.epochconverter.com/\" target=\"_blank\">Epoch Converter Tool</a></li>\n        <li><a href=\"https://tools.ietf.org/html/rfc3339\" target=\"_blank\">RFC 3339 - Date and Time on the Internet</a></li>\n        <li><a href=\"https://en.wikipedia.org/wiki/Year_2038_problem\" target=\"_blank\">Year 2038 Problem - Wikipedia</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const acidProperties = {\n  id: \"acid-properties\",\n  title: \"ACID Properties\",\n  content: `\n    <h2>ACID Properties</h2>\n    <p>ACID properties are typically associated with traditional relational databases and emphasize strong consistency.</p>\n\n    <h3>Atomicity</h3>\n    <p>Atomicity ensures that a transaction either succeeds completely or fails completely. If any part of a transaction fails, the entire transaction is rolled back, and the database is left unchanged.</p>\n\n    <h3>Consistency</h3>\n    <p>Consistency ensures that the database remains in a valid state before and after the execution of a transaction. It ensures any transaction will bring the database from one valid state to another, and prevents the database from entering an invalid state.</p>\n\n    <h3>Isolation</h3>\n    <p>Isolation ensures that the execution of multiple transactions concurrently does not interfere with each other.</p>\n\n    <h3>Durability</h3>\n    <p>Durability ensures that once a transaction is committed, it's permanently stored in the database and should not be lost even in the event of system failures (e.g., power outage, or hardware failure).</p>\n\n    <div class=\"reference-links\">\n      <h4>📚 References</h4>\n      <ul>\n        <li><a href=\"https://www.educative.io/answers/what-are-acid-properties-in-a-database\" target=\"_blank\">What are ACID Properties in a Database</a></li>\n        <li><a href=\"https://www.scaler.com/topics/dbms/acid-properties-in-dbms/\" target=\"_blank\">ACID Properties in DBMS</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const baseProperties = {\n  id: \"base-properties\",\n  title: \"BASE Properties\",\n  content: `\n    <h2>BASE Properties</h2>\n    <p>BASE principles are often employed in distributed systems and NoSQL databases, prioritizing availability and partition tolerance over strict consistency.</p>\n\n    <h3>Basically Available</h3>\n    <p>Focuses on providing availability over consistency, meaning that the system should remain operational even in the face of failures or network partitions.</p>\n\n    <h3>Soft State</h3>\n    <p>Allows for temporary inconsistencies or relaxed consistency requirements, particularly useful in distributed systems.</p>\n\n    <h3>Eventually Consistent</h3>\n    <p>Promotes the idea that system-wide consistency will eventually be achieved, given enough time and lack of further updates.</p>\n\n    <div class=\"info-note\">\n      <strong>Note:</strong> BASE properties are the opposite of ACID properties and are commonly used in distributed systems where availability and partition tolerance are prioritized over strict consistency.\n    </div>\n  `\n}; ","export const mvcc = {\n  id: 'mvcc',\n  title: 'MVCC (Multi-Version Concurrency Control)',\n  content: `\n    <h2>Multi-Version Concurrency Control (MVCC)</h2>\n    <p>MVCC maintains multiple versions of each data item in the database to support concurrent read and write operations without blocking.</p>\n    \n    <h3>How MVCC Works</h3>\n    <ul>\n      <li><strong>Version Creation:</strong> When a transaction updates data, a new version is created instead of overwriting</li>\n      <li><strong>Timestamping:</strong> Each version is timestamped with the transaction's start time</li>\n      <li><strong>Visibility Rules:</strong> New versions are not visible to other transactions until the updating transaction commits</li>\n      <li><strong>Concurrent Access:</strong> Other transactions continue reading old versions until the update completes</li>\n    </ul>\n\n    <h3>Key Benefits</h3>\n    <ul>\n      <li><strong>No Read Blocking:</strong> Readers never block writers and vice versa</li>\n      <li><strong>Consistency:</strong> Each transaction sees a consistent snapshot of data</li>\n      <li><strong>High Concurrency:</strong> Multiple transactions can operate simultaneously</li>\n      <li><strong>Deadlock Reduction:</strong> Fewer locks needed, reducing deadlock potential</li>\n    </ul>\n\n    <h3>Implementation Details</h3>\n    <ul>\n      <li><strong>Version Storage:</strong> Multiple versions stored with metadata</li>\n      <li><strong>Garbage Collection:</strong> Obsolete versions are cleaned up periodically</li>\n      <li><strong>Transaction IDs:</strong> Each transaction gets a unique identifier</li>\n      <li><strong>Snapshot Isolation:</strong> Transactions see data as of their start time</li>\n    </ul>\n\n    <h3>Databases Using MVCC</h3>\n    <ul>\n      <li><strong>PostgreSQL:</strong> Native MVCC implementation</li>\n      <li><strong>Oracle:</strong> Uses MVCC with undo segments</li>\n      <li><strong>MySQL InnoDB:</strong> MVCC with undo logs</li>\n      <li><strong>SQL Server:</strong> Row versioning with MVCC</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Trade-offs:</strong>\n      <p>MVCC provides excellent concurrency but requires additional storage for multiple versions and periodic cleanup of obsolete data.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.postgresql.org/docs/current/mvcc.html\" target=\"_blank\">PostgreSQL MVCC Documentation</a></li>\n        <li><a href=\"https://www.scaler.com/topics/dbms/concurrency-control-in-dbms/\" target=\"_blank\">Concurrency Control in DBMS</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const concurrencyControlProblems = {\n  id: 'concurrency-control-problems',\n  title: 'Concurrency Control Problems in Database',\n  content: `\n    <h2>Concurrency Control Problems in Database</h2>\n    <p>When multiple transactions execute concurrently in a database, various problems can arise that compromise data integrity and consistency. Understanding these problems is crucial for designing robust database systems.</p>\n\n    <h3>1. Dirty Read</h3>\n    <p>A transaction (T1) modifies data, and Transaction (T2) reads this data before T1 commits its changes to the database. If T1 rolls back its changes later, T2 will have read data that was never actually committed to the database.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Example of Dirty Read:\n\nTime    Transaction T1              Transaction T2\n----    --------------              --------------\nt1      BEGIN TRANSACTION          \nt2      UPDATE account \n        SET balance = 1000\n        WHERE id = 1\nt3                                  BEGIN TRANSACTION\nt4                                  SELECT balance FROM account\n                                    WHERE id = 1\n                                    -- Reads 1000 (uncommitted)\nt5      ROLLBACK\n        -- Balance reverts to \n        -- original value\nt6                                  -- T2 has dirty data!\n                                    COMMIT</code></pre>\n    </div>\n\n    <h3>2. Non-Repeatable Reads</h3>\n    <p>Non-repeatable reads can occur where a transaction (T1) might read the same row multiple times but get different results if another transaction (T2) modifies and commits that row in between.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Example of Non-Repeatable Read:\n\nTime    Transaction T1              Transaction T2\n----    --------------              --------------\nt1      BEGIN TRANSACTION          \nt2      SELECT balance FROM account\n        WHERE id = 1\n        -- Reads 500\nt3                                  BEGIN TRANSACTION\nt4                                  UPDATE account\n                                    SET balance = 1000\n                                    WHERE id = 1\nt5                                  COMMIT\nt6      SELECT balance FROM account\n        WHERE id = 1\n        -- Now reads 1000!\n        -- Same query, different result\nt7      COMMIT</code></pre>\n    </div>\n\n    <h3>3. Phantom Reads</h3>\n    <p>A phantom read occurs when a transaction (T1) retrieves a set of rows that satisfy a certain condition, and then, during the course of the transaction, another transaction (T2) inserts or deletes rows that also meet the condition. Consequently, when the first transaction (T1) retrieves the same set of rows again, it encounters new rows (phantoms) or finds that some rows it previously retrieved are now missing.</p>\n\n    <div class=\"info-note\">\n      <strong>💡 Note:</strong> Phantom - something (as a ghost) that seems to be there but is not real.\n    </div>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Example of Phantom Read:\n\nTime    Transaction T1              Transaction T2\n----    --------------              --------------\nt1      BEGIN TRANSACTION          \nt2      SELECT COUNT(*) FROM employees\n        WHERE dept = 'Sales'\n        -- Returns 10\nt3                                  BEGIN TRANSACTION\nt4                                  INSERT INTO employees\n                                    VALUES ('John', 'Sales')\nt5                                  COMMIT\nt6      SELECT COUNT(*) FROM employees\n        WHERE dept = 'Sales'\n        -- Now returns 11!\n        -- Phantom row appeared\nt7      COMMIT</code></pre>\n    </div>\n\n    <h3>4. Lost Update</h3>\n    <p>Lost Update occurs in a concurrent access scenario when one transaction (T1) updates a piece of data, and before it commits its changes, another transaction (T2) updates the same data based on the original (stale) version it read. As a result, when T1 commits its changes, they are overwritten by the changes made by T2, leading to the loss of T1's updates.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Example of Lost Update:\n\nTime    Transaction T1              Transaction T2\n----    --------------              --------------\nt1      BEGIN TRANSACTION          BEGIN TRANSACTION\nt2      SELECT balance FROM account\n        WHERE id = 1\n        -- Reads 1000\nt3                                  SELECT balance FROM account\n                                    WHERE id = 1\n                                    -- Also reads 1000\nt4      -- Add 100\n        UPDATE account\n        SET balance = 1100\n        WHERE id = 1\nt5                                  -- Add 200\n                                    UPDATE account\n                                    SET balance = 1200\n                                    WHERE id = 1\nt6      COMMIT\nt7                                  COMMIT\n        -- T1's update is lost!\n        -- Final balance is 1200, not 1300</code></pre>\n    </div>\n\n    <h3>5. Dirty Write</h3>\n    <p>It occurs when one transaction (T1) overwrites uncommitted data modifications made by another transaction (T2).</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Example of Dirty Write:\n\nTime    Transaction T1              Transaction T2\n----    --------------              --------------\nt1      BEGIN TRANSACTION          \nt2      UPDATE product\n        SET price = 100\n        WHERE id = 1\n        -- Not committed yet\nt3                                  BEGIN TRANSACTION\nt4                                  UPDATE product\n                                    SET price = 150\n                                    WHERE id = 1\n                                    -- Overwrites uncommitted data\nt5      ROLLBACK\n        -- T1's change discarded\nt6                                  COMMIT\n        -- T2's change based on \n        -- invalid state</code></pre>\n    </div>\n\n    <h3>Summary of Problems</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Problem</th>\n          <th>Description</th>\n          <th>Impact</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Dirty Read</strong></td>\n          <td>Reading uncommitted data</td>\n          <td>Incorrect data, cascading errors</td>\n        </tr>\n        <tr>\n          <td><strong>Non-Repeatable Read</strong></td>\n          <td>Same query returns different results</td>\n          <td>Inconsistent analysis, logic errors</td>\n        </tr>\n        <tr>\n          <td><strong>Phantom Read</strong></td>\n          <td>New rows appear/disappear in result set</td>\n          <td>Incorrect aggregations, incomplete processing</td>\n        </tr>\n        <tr>\n          <td><strong>Lost Update</strong></td>\n          <td>Updates overwritten by concurrent transaction</td>\n          <td>Data loss, incorrect final state</td>\n        </tr>\n        <tr>\n          <td><strong>Dirty Write</strong></td>\n          <td>Overwriting uncommitted changes</td>\n          <td>Data corruption, invalid state</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Prevention Mechanisms</h3>\n    <ul>\n      <li><strong>Isolation Levels:</strong> Use appropriate transaction isolation levels (Read Uncommitted, Read Committed, Repeatable Read, Serializable)</li>\n      <li><strong>Locking Mechanisms:</strong> Implement pessimistic or optimistic locking strategies</li>\n      <li><strong>MVCC:</strong> Use Multi-Version Concurrency Control for better concurrency</li>\n      <li><strong>Timestamps:</strong> Use timestamp ordering protocols</li>\n      <li><strong>Validation:</strong> Implement validation-based concurrency control</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.scaler.com/topics/dbms/concurrency-control-in-dbms/\" target=\"_blank\">Concurrency Control in DBMS - Scaler</a></li>\n    </ul>\n  `\n}; ","export const optimisticVsPessimisticLocking = {\n  id: 'optimistic-vs-pessimistic-locking',\n  title: 'Optimistic vs Pessimistic Locking',\n  content: `\n    <h2>Optimistic vs Pessimistic Locking</h2>\n    <p>Two fundamental approaches to handling concurrent access to shared resources in database systems and distributed applications.</p>\n    \n    <h3>Pessimistic Locking</h3>\n    <h4>How it Works</h4>\n    <ul>\n      <li><strong>Lock First:</strong> Acquire locks before accessing data</li>\n      <li><strong>Block Others:</strong> Other transactions wait until lock is released</li>\n      <li><strong>Guaranteed Consistency:</strong> Prevents concurrent modifications</li>\n      <li><strong>Hold Until Commit:</strong> Locks held for entire transaction duration</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Data Integrity:</strong> Guarantees no conflicting updates</li>\n      <li><strong>Predictable:</strong> Consistent behavior under high contention</li>\n      <li><strong>Simple Logic:</strong> Straightforward to implement and reason about</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Performance Impact:</strong> Blocking reduces concurrency</li>\n      <li><strong>Deadlock Risk:</strong> Can lead to deadlock situations</li>\n      <li><strong>Lock Overhead:</strong> Resource consumption for lock management</li>\n      <li><strong>Reduced Throughput:</strong> Lower system throughput under contention</li>\n    </ul>\n\n    <h3>Optimistic Locking</h3>\n    <h4>How it Works</h4>\n    <ul>\n      <li><strong>Assume No Conflicts:</strong> Don't acquire locks during read/modify</li>\n      <li><strong>Version Checking:</strong> Use version numbers or timestamps</li>\n      <li><strong>Validate at Commit:</strong> Check for conflicts before committing</li>\n      <li><strong>Retry on Conflict:</strong> Rollback and retry if conflict detected</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>High Concurrency:</strong> No blocking during read/modify phase</li>\n      <li><strong>No Deadlocks:</strong> Eliminates deadlock scenarios</li>\n      <li><strong>Better Performance:</strong> Higher throughput with low contention</li>\n      <li><strong>Scalability:</strong> Scales better with increasing concurrent users</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Retry Overhead:</strong> Performance degrades with high contention</li>\n      <li><strong>Starvation Risk:</strong> Some transactions may never succeed</li>\n      <li><strong>Complex Logic:</strong> More complex error handling and retry logic</li>\n      <li><strong>Wasted Work:</strong> Rollback means discarding completed work</li>\n    </ul>\n\n    <h3>Implementation Examples</h3>\n    \n    <h4>Pessimistic Locking (SQL)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>-- Acquire exclusive lock\nSELECT * FROM accounts \nWHERE account_id = 123 \nFOR UPDATE;\n\n-- Perform updates\nUPDATE accounts \nSET balance = balance - 100 \nWHERE account_id = 123;\n\nCOMMIT;</code></pre>\n    </div>\n\n    <h4>Optimistic Locking (SQL)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>-- Read with version\nSELECT balance, version \nFROM accounts \nWHERE account_id = 123;\n\n-- Update with version check\nUPDATE accounts \nSET balance = balance - 100, \n    version = version + 1\nWHERE account_id = 123 \n  AND version = @original_version;\n\n-- Check if update succeeded\nIF @@ROWCOUNT = 0 \n  ROLLBACK; -- Conflict detected</code></pre>\n    </div>\n\n    <h3>When to Use Each Approach</h3>\n    \n    <h4>Use Pessimistic Locking When:</h4>\n    <ul>\n      <li><strong>High Contention:</strong> Many concurrent updates to same data</li>\n      <li><strong>Critical Data:</strong> Data integrity is paramount</li>\n      <li><strong>Long Transactions:</strong> Transactions take significant time</li>\n      <li><strong>Simple Requirements:</strong> Straightforward consistency needs</li>\n    </ul>\n\n    <h4>Use Optimistic Locking When:</h4>\n    <ul>\n      <li><strong>Low Contention:</strong> Conflicts are rare</li>\n      <li><strong>Read-Heavy Workloads:</strong> More reads than writes</li>\n      <li><strong>High Concurrency:</strong> Need maximum throughput</li>\n      <li><strong>Web Applications:</strong> Stateless web applications</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Best Practice:</strong>\n      <p>Many modern systems use a hybrid approach: optimistic locking for most operations with pessimistic locking for critical sections or high-contention scenarios.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.scaler.com/topics/dbms/concurrency-control-in-dbms/\" target=\"_blank\">Database Concurrency Control</a></li>\n        <li><a href=\"https://vladmihalcea.com/optimistic-vs-pessimistic-locking/\" target=\"_blank\">Optimistic vs Pessimistic Locking</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const twoPhaseLocking = {\n  id: 'two-phase-locking',\n  title: 'Two-Phase Locking (2PL)',\n  content: `\n    <h2>Two-Phase Locking (2PL)</h2>\n    <p>A concurrency control protocol that ensures serializability by dividing each transaction into two distinct phases: a growing phase where locks are acquired, and a shrinking phase where locks are released.</p>\n    \n    <h3>The Two Phases</h3>\n    \n    <h4>Phase 1: Growing Phase (Expanding)</h4>\n    <ul>\n      <li><strong>Lock Acquisition:</strong> Transaction can acquire locks on data items</li>\n      <li><strong>No Release:</strong> Cannot release any locks during this phase</li>\n      <li><strong>Read/Write Operations:</strong> Perform actual data operations</li>\n      <li><strong>Duration:</strong> Continues until first lock is released</li>\n    </ul>\n\n    <h4>Phase 2: Shrinking Phase (Contracting)</h4>\n    <ul>\n      <li><strong>Lock Release:</strong> Transaction can only release locks</li>\n      <li><strong>No Acquisition:</strong> Cannot acquire any new locks</li>\n      <li><strong>Completion:</strong> Phase ends when all locks are released</li>\n      <li><strong>Commit/Abort:</strong> Transaction commits or aborts</li>\n    </ul>\n\n    <h3>2PL Protocol Rules</h3>\n    <ol>\n      <li><strong>Before Reading:</strong> Transaction must acquire shared (S) lock on data item</li>\n      <li><strong>Before Writing:</strong> Transaction must acquire exclusive (X) lock on data item</li>\n      <li><strong>Lock Compatibility:</strong> Follow standard lock compatibility matrix</li>\n      <li><strong>Phase Restriction:</strong> Once a lock is released, no new locks can be acquired</li>\n      <li><strong>Lock Release:</strong> All locks must be released before transaction completion</li>\n    </ol>\n\n    <h3>Lock Compatibility Matrix</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>        |  S  |  X  |\n    ----+-----+-----+\n    S   | ✓   | ✗   |\n    ----+-----+-----+\n    X   | ✗   | ✗   |\n    \n    ✓ = Compatible (can coexist)\n    ✗ = Incompatible (must wait)</code></pre>\n    </div>\n\n    <h3>2PL Variants</h3>\n    \n    <h4>1. Basic 2PL</h4>\n    <ul>\n      <li><strong>Standard Protocol:</strong> Follows basic two-phase rules</li>\n      <li><strong>Deadlock Possible:</strong> Can lead to deadlock situations</li>\n      <li><strong>Cascading Rollback:</strong> May cause cascading aborts</li>\n    </ul>\n\n    <h4>2. Conservative 2PL (Static 2PL)</h4>\n    <ul>\n      <li><strong>Pre-declaration:</strong> All locks acquired before transaction starts</li>\n      <li><strong>Deadlock-Free:</strong> Eliminates deadlock possibility</li>\n      <li><strong>Reduced Concurrency:</strong> Lower concurrency due to early locking</li>\n      <li><strong>Practical Issues:</strong> Difficult to predict all needed locks</li>\n    </ul>\n\n    <h4>3. Strict 2PL</h4>\n    <ul>\n      <li><strong>Hold Until End:</strong> All exclusive locks held until transaction commits/aborts</li>\n      <li><strong>Prevents Cascading:</strong> Eliminates cascading rollbacks</li>\n      <li><strong>Most Common:</strong> Widely used in commercial databases</li>\n      <li><strong>Recovery Friendly:</strong> Simplifies recovery procedures</li>\n    </ul>\n\n    <h4>4. Rigorous 2PL</h4>\n    <ul>\n      <li><strong>All Locks Held:</strong> Both shared and exclusive locks held until end</li>\n      <li><strong>Maximum Safety:</strong> Highest level of isolation</li>\n      <li><strong>Lowest Concurrency:</strong> Most restrictive variant</li>\n      <li><strong>Simplified Implementation:</strong> Easier to implement and reason about</li>\n    </ul>\n\n    <h3>Example Transaction Flow</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Transaction T1:\nGrowing Phase:\n  1. Acquire S-lock on A    // Read A\n  2. Acquire X-lock on B    // Write B\n  3. Acquire S-lock on C    // Read C\n  4. Perform operations...\n\nShrinking Phase:\n  5. Release S-lock on A    // First release - shrinking starts\n  6. Release X-lock on B    // Cannot acquire new locks now\n  7. Release S-lock on C\n  8. COMMIT</code></pre>\n    </div>\n\n    <h3>Advantages</h3>\n    <ul>\n      <li><strong>Serializability:</strong> Guarantees serializable schedules</li>\n      <li><strong>Conflict Resolution:</strong> Handles read-write and write-write conflicts</li>\n      <li><strong>Widely Implemented:</strong> Standard in most database systems</li>\n      <li><strong>Theoretical Foundation:</strong> Well-understood mathematical properties</li>\n    </ul>\n\n    <h3>Disadvantages</h3>\n    <ul>\n      <li><strong>Deadlock Risk:</strong> Can lead to deadlock situations</li>\n      <li><strong>Reduced Concurrency:</strong> Blocking reduces system throughput</li>\n      <li><strong>Lock Overhead:</strong> Memory and CPU overhead for lock management</li>\n      <li><strong>Cascading Rollbacks:</strong> In basic 2PL, failures can cascade</li>\n    </ul>\n\n    <h3>Deadlock Handling</h3>\n    <ul>\n      <li><strong>Detection:</strong> Use wait-for graphs to detect cycles</li>\n      <li><strong>Prevention:</strong> Timestamp-based ordering (wound-wait, wait-die)</li>\n      <li><strong>Avoidance:</strong> Conservative 2PL or resource ordering</li>\n      <li><strong>Resolution:</strong> Abort victim transaction and restart</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Real-World Usage:</strong>\n      <p>Most commercial databases (MySQL InnoDB, PostgreSQL, SQL Server) use Strict 2PL as their default concurrency control mechanism, often combined with MVCC for better performance.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.scaler.com/topics/dbms/two-phase-locking-protocol/\" target=\"_blank\">Two-Phase Locking Protocol</a></li>\n        <li><a href=\"https://en.wikipedia.org/wiki/Two-phase_locking\" target=\"_blank\">Two-Phase Locking - Wikipedia</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const timestampingProtocol = {\n  id: 'timestamping-protocol',\n  title: 'Timestamping Protocol',\n  content: `\n    <h2>Timestamping Protocol</h2>\n    <p>A concurrency control method that uses timestamps to order transactions and ensure serializability without using locks, thereby avoiding deadlocks.</p>\n    \n    <h3>How Timestamping Works</h3>\n    <ul>\n      <li><strong>Unique Timestamps:</strong> Each transaction gets a unique timestamp when it starts</li>\n      <li><strong>Ordering:</strong> Timestamps define the serialization order of transactions</li>\n      <li><strong>Data Item Timestamps:</strong> Each data item maintains read and write timestamps</li>\n      <li><strong>Conflict Resolution:</strong> Uses timestamp comparison to resolve conflicts</li>\n    </ul>\n\n    <h3>Timestamp Assignment</h3>\n    <h4>Common Methods:</h4>\n    <ul>\n      <li><strong>System Clock:</strong> Use current system time</li>\n      <li><strong>Logical Counter:</strong> Incrementing counter for each transaction</li>\n      <li><strong>Transaction ID:</strong> Use unique transaction identifier</li>\n      <li><strong>Hybrid Approach:</strong> Combination of system time and counter</li>\n    </ul>\n\n    <h3>Data Item Metadata</h3>\n    <p>Each data item X maintains:</p>\n    <ul>\n      <li><strong>R-timestamp(X):</strong> Timestamp of last transaction that read X</li>\n      <li><strong>W-timestamp(X):</strong> Timestamp of last transaction that wrote X</li>\n      <li><strong>Value:</strong> Current value of the data item</li>\n    </ul>\n\n    <h3>Basic Timestamp Ordering Protocol</h3>\n    \n    <h4>Read Operation Rules</h4>\n    <p>When transaction Ti wants to read data item X:</p>\n    <ol>\n      <li><strong>Check Write Timestamp:</strong> If TS(Ti) < W-timestamp(X), abort Ti (reading obsolete data)</li>\n      <li><strong>Allow Read:</strong> If TS(Ti) ≥ W-timestamp(X), allow read</li>\n      <li><strong>Update R-timestamp:</strong> Set R-timestamp(X) = max(R-timestamp(X), TS(Ti))</li>\n    </ol>\n\n    <h4>Write Operation Rules</h4>\n    <p>When transaction Ti wants to write data item X:</p>\n    <ol>\n      <li><strong>Check Read Timestamp:</strong> If TS(Ti) < R-timestamp(X), abort Ti (overwriting needed data)</li>\n      <li><strong>Check Write Timestamp:</strong> If TS(Ti) < W-timestamp(X), abort Ti (obsolete write)</li>\n      <li><strong>Allow Write:</strong> If both checks pass, allow write</li>\n      <li><strong>Update W-timestamp:</strong> Set W-timestamp(X) = TS(Ti)</li>\n    </ol>\n\n    <h3>Example Execution</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Initial State:\nData Item A: R-ts(A)=0, W-ts(A)=0, Value=100\nData Item B: R-ts(B)=0, W-ts(B)=0, Value=200\n\nTransaction T1 (TS=10):\n1. Read A: TS(10) ≥ W-ts(0) ✓ → R-ts(A)=10\n2. Write B: TS(10) ≥ R-ts(0) and TS(10) ≥ W-ts(0) ✓ → W-ts(B)=10\n\nTransaction T2 (TS=5):\n3. Read A: TS(5) ≥ W-ts(0) ✓ → R-ts(A)=max(10,5)=10\n4. Write A: TS(5) < R-ts(10) ✗ → ABORT T2</code></pre>\n    </div>\n\n    <h3>Timestamp Ordering Variants</h3>\n    \n    <h4>1. Basic Timestamp Ordering</h4>\n    <ul>\n      <li><strong>Strict Rules:</strong> Follows basic read/write rules</li>\n      <li><strong>High Abort Rate:</strong> Many transactions may be aborted</li>\n      <li><strong>No Deadlocks:</strong> Eliminates deadlock possibility</li>\n    </ul>\n\n    <h4>2. Conservative Timestamp Ordering</h4>\n    <ul>\n      <li><strong>Wait for Smaller Timestamps:</strong> Wait for all smaller timestamp transactions</li>\n      <li><strong>Reduced Aborts:</strong> Fewer transaction aborts</li>\n      <li><strong>Increased Waiting:</strong> More waiting time</li>\n    </ul>\n\n    <h4>3. Multiversion Timestamp Ordering</h4>\n    <ul>\n      <li><strong>Multiple Versions:</strong> Maintain multiple versions of each data item</li>\n      <li><strong>Version Selection:</strong> Read appropriate version based on timestamp</li>\n      <li><strong>Better Concurrency:</strong> Reduces conflicts and aborts</li>\n    </ul>\n\n    <h3>Thomas Write Rule</h3>\n    <p>An optimization for write operations:</p>\n    <ul>\n      <li><strong>Obsolete Write Detection:</strong> If TS(Ti) < W-timestamp(X), instead of aborting</li>\n      <li><strong>Ignore Write:</strong> Simply ignore the write operation (don't abort)</li>\n      <li><strong>Reasoning:</strong> The write is obsolete and won't affect final result</li>\n      <li><strong>Benefit:</strong> Reduces unnecessary transaction aborts</li>\n    </ul>\n\n    <h3>Advantages</h3>\n    <ul>\n      <li><strong>Deadlock-Free:</strong> No possibility of deadlocks</li>\n      <li><strong>No Lock Management:</strong> Eliminates lock overhead</li>\n      <li><strong>Guaranteed Progress:</strong> System always makes progress</li>\n      <li><strong>Serializability:</strong> Ensures serializable execution</li>\n    </ul>\n\n    <h3>Disadvantages</h3>\n    <ul>\n      <li><strong>High Abort Rate:</strong> Many transactions may be aborted and restarted</li>\n      <li><strong>Starvation:</strong> Long-running transactions may be repeatedly aborted</li>\n      <li><strong>Timestamp Overhead:</strong> Maintaining timestamps for all data items</li>\n      <li><strong>Cascading Rollbacks:</strong> Uncommitted data may cause cascading aborts</li>\n    </ul>\n\n    <h3>Comparison with 2PL</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Aspect              | 2PL           | Timestamping\n--------------------|---------------|-------------\nDeadlocks           | Possible      | Impossible\nLock Management     | Required      | Not Required\nAbort Rate          | Lower         | Higher\nStarvation          | Possible      | Possible\nImplementation      | Complex       | Simpler\nConcurrency         | Moderate      | Higher (with MVCC)</code></pre>\n    </div>\n\n    <h3>Real-World Applications</h3>\n    <ul>\n      <li><strong>Distributed Databases:</strong> Useful in distributed transaction processing</li>\n      <li><strong>Real-Time Systems:</strong> Predictable behavior for real-time applications</li>\n      <li><strong>MVCC Systems:</strong> Combined with multiversion concurrency control</li>\n      <li><strong>Conflict Resolution:</strong> Used in replicated database systems</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Modern Usage:</strong>\n      <p>While pure timestamping protocols are less common in commercial databases, the concepts are widely used in distributed systems, NoSQL databases, and multiversion concurrency control systems.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.scaler.com/topics/dbms/timestamp-based-protocol/\" target=\"_blank\">Timestamp-Based Protocol</a></li>\n        <li><a href=\"https://en.wikipedia.org/wiki/Timestamp-based_concurrency_control\" target=\"_blank\">Timestamp-Based Concurrency Control</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const localityOfReference = {\n  id: 'locality-of-reference',\n  title: 'Locality of Reference',\n  content: `\n    <h2>Locality of Reference</h2>\n    <p>The principle that programs tend to access data and instructions that are near previously accessed data and instructions, both in time and space. This principle is fundamental to the design of cache systems and memory hierarchies.</p>\n    \n    <h3>Types of Locality</h3>\n    \n    <h4>1. Temporal Locality</h4>\n    <ul>\n      <li><strong>Definition:</strong> Recently accessed data is likely to be accessed again soon</li>\n      <li><strong>Examples:</strong> Loop variables, frequently called functions, recently used database records</li>\n      <li><strong>Cache Strategy:</strong> Keep recently used items in cache</li>\n      <li><strong>Time Window:</strong> Effectiveness decreases over time</li>\n    </ul>\n\n    <h4>2. Spatial Locality</h4>\n    <ul>\n      <li><strong>Definition:</strong> Data near recently accessed data is likely to be accessed soon</li>\n      <li><strong>Examples:</strong> Array elements, sequential file reads, adjacent memory addresses</li>\n      <li><strong>Cache Strategy:</strong> Prefetch neighboring data blocks</li>\n      <li><strong>Block Size:</strong> Optimal block size balances hit rate and overhead</li>\n    </ul>\n\n    <h3>Applications in Computer Systems</h3>\n    \n    <h4>CPU Cache Design</h4>\n    <ul>\n      <li><strong>Cache Lines:</strong> Load entire cache lines (64-128 bytes) for spatial locality</li>\n      <li><strong>LRU Policy:</strong> Least Recently Used eviction for temporal locality</li>\n      <li><strong>Prefetching:</strong> Hardware prefetchers predict access patterns</li>\n      <li><strong>Cache Hierarchy:</strong> L1, L2, L3 caches with different sizes and speeds</li>\n    </ul>\n\n    <h4>Virtual Memory</h4>\n    <ul>\n      <li><strong>Page Replacement:</strong> LRU and other algorithms based on temporal locality</li>\n      <li><strong>Working Set:</strong> Set of pages referenced in recent time window</li>\n      <li><strong>Thrashing:</strong> Occurs when working set exceeds available memory</li>\n      <li><strong>Page Size:</strong> Larger pages improve spatial locality</li>\n    </ul>\n\n    <h4>Database Systems</h4>\n    <ul>\n      <li><strong>Buffer Pool:</strong> Keep frequently accessed pages in memory</li>\n      <li><strong>Clustering:</strong> Store related records physically close together</li>\n      <li><strong>Index Design:</strong> B+ trees exploit spatial locality for range queries</li>\n      <li><strong>Query Optimization:</strong> Minimize random I/O operations</li>\n    </ul>\n\n    <h3>Programming Patterns</h3>\n    \n    <h4>Good Locality Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Good spatial locality - sequential access\nfor (int i = 0; i < n; i++) {\n    array[i] = array[i] * 2;\n}\n\n// Good temporal locality - reuse variables\nint sum = 0;\nfor (int i = 0; i < n; i++) {\n    sum += array[i];  // 'sum' reused frequently\n}</code></pre>\n    </div>\n\n    <h4>Poor Locality Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Poor spatial locality - random access\nfor (int i = 0; i < n; i++) {\n    array[random(n)] = value;\n}\n\n// Poor spatial locality - column-wise access of row-major array\nfor (int j = 0; j < cols; j++) {\n    for (int i = 0; i < rows; i++) {\n        matrix[i][j] = value;  // Non-sequential memory access\n    }\n}</code></pre>\n    </div>\n\n    <h3>Database Locality Optimizations</h3>\n    \n    <h4>Physical Design</h4>\n    <ul>\n      <li><strong>Clustering Index:</strong> Order table data by frequently queried columns</li>\n      <li><strong>Partitioning:</strong> Divide large tables into smaller, related partitions</li>\n      <li><strong>Denormalization:</strong> Store related data together to reduce joins</li>\n      <li><strong>Compression:</strong> Reduce I/O by compressing related data</li>\n    </ul>\n\n    <h4>Query Patterns</h4>\n    <ul>\n      <li><strong>Range Queries:</strong> Benefit from spatial locality in indexes</li>\n      <li><strong>Sequential Scans:</strong> Efficient when large portions of table accessed</li>\n      <li><strong>Index Scans:</strong> Leverage spatial locality in B+ tree leaf pages</li>\n      <li><strong>Join Algorithms:</strong> Hash joins and sort-merge joins optimize locality</li>\n    </ul>\n\n    <h3>Measuring Locality</h3>\n    \n    <h4>Metrics</h4>\n    <ul>\n      <li><strong>Cache Hit Ratio:</strong> Percentage of memory accesses served by cache</li>\n      <li><strong>Working Set Size:</strong> Number of unique pages accessed in time window</li>\n      <li><strong>Reuse Distance:</strong> Number of unique accesses between repeated accesses</li>\n      <li><strong>Miss Rate:</strong> Frequency of cache misses</li>\n    </ul>\n\n    <h4>Profiling Tools</h4>\n    <ul>\n      <li><strong>CPU Profilers:</strong> Intel VTune, perf, cachegrind</li>\n      <li><strong>Database Tools:</strong> EXPLAIN ANALYZE, buffer pool statistics</li>\n      <li><strong>Application Metrics:</strong> Custom instrumentation for access patterns</li>\n    </ul>\n\n    <h3>Optimization Strategies</h3>\n    \n    <h4>Data Structure Design</h4>\n    <ul>\n      <li><strong>Array of Structures vs Structure of Arrays:</strong> Choose based on access patterns</li>\n      <li><strong>Cache-Oblivious Algorithms:</strong> Automatically adapt to cache hierarchy</li>\n      <li><strong>Data Layout:</strong> Arrange data to match access patterns</li>\n      <li><strong>Prefetching:</strong> Explicitly prefetch data when patterns are predictable</li>\n    </ul>\n\n    <h4>Algorithm Design</h4>\n    <ul>\n      <li><strong>Blocking/Tiling:</strong> Process data in cache-sized chunks</li>\n      <li><strong>Loop Optimization:</strong> Reorder loops to improve spatial locality</li>\n      <li><strong>Data Reuse:</strong> Maximize reuse of loaded data before moving to new data</li>\n    </ul>\n\n    <h3>Real-World Impact</h3>\n    <ul>\n      <li><strong>Performance:</strong> Good locality can improve performance by 10-100x</li>\n      <li><strong>Energy Efficiency:</strong> Cache hits consume much less energy than memory accesses</li>\n      <li><strong>Scalability:</strong> Better locality reduces memory bandwidth requirements</li>\n      <li><strong>Cost:</strong> Reduces need for expensive high-speed memory</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Understanding and optimizing for locality of reference is crucial for high-performance systems. Modern processors and databases are designed around this principle, making it essential for system designers and developers.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Locality_of_reference\" target=\"_blank\">Locality of Reference - Wikipedia</a></li>\n        <li><a href=\"https://www.geeksforgeeks.org/locality-of-reference-and-cache-operation-in-cache-memory/\" target=\"_blank\">Locality in Cache Memory</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const isolationLevels = {\n  id: 'isolation-levels',\n  title: 'Isolation Levels',\n  content: `\n    <h2>Transaction Isolation Levels</h2>\n    <p>Isolation levels define the degree to which transactions are isolated from each other, balancing data consistency with system performance and concurrency.</p>\n    \n    <h3>The Four Standard Isolation Levels</h3>\n    \n    <h4>1. Read Uncommitted (Level 0)</h4>\n    <ul>\n      <li><strong>Description:</strong> Lowest isolation level, allows dirty reads</li>\n      <li><strong>Locks:</strong> No shared locks, minimal exclusive locks</li>\n      <li><strong>Allows:</strong> Dirty reads, non-repeatable reads, phantom reads</li>\n      <li><strong>Performance:</strong> Highest concurrency, lowest consistency</li>\n    </ul>\n\n    <h4>2. Read Committed (Level 1)</h4>\n    <ul>\n      <li><strong>Description:</strong> Prevents dirty reads but allows other anomalies</li>\n      <li><strong>Locks:</strong> Shared locks held only during read operation</li>\n      <li><strong>Allows:</strong> Non-repeatable reads, phantom reads</li>\n      <li><strong>Common Use:</strong> Default in many database systems</li>\n    </ul>\n\n    <h4>3. Repeatable Read (Level 2)</h4>\n    <ul>\n      <li><strong>Description:</strong> Prevents dirty and non-repeatable reads</li>\n      <li><strong>Locks:</strong> Shared locks held until transaction end</li>\n      <li><strong>Allows:</strong> Phantom reads (new rows in range queries)</li>\n      <li><strong>Use Case:</strong> When consistent reads within transaction are critical</li>\n    </ul>\n\n    <h4>4. Serializable (Level 3)</h4>\n    <ul>\n      <li><strong>Description:</strong> Highest isolation level, prevents all anomalies</li>\n      <li><strong>Locks:</strong> Range locks prevent phantom reads</li>\n      <li><strong>Allows:</strong> No concurrency anomalies</li>\n      <li><strong>Performance:</strong> Lowest concurrency, highest consistency</li>\n    </ul>\n\n    <h3>Concurrency Anomalies</h3>\n    \n    <h4>Dirty Read</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Time | Transaction A          | Transaction B\n-----|------------------------|------------------\nT1   | BEGIN                  |\nT2   |                        | BEGIN\nT3   | UPDATE account         |\n     | SET balance = 1000     |\nT4   |                        | SELECT balance\n     |                        | FROM account\n     |                        | -- Reads 1000 (dirty)\nT5   | ROLLBACK               |\nT6   |                        | -- Still thinks balance is 1000!</code></pre>\n    </div>\n\n    <h4>Non-Repeatable Read</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Time | Transaction A          | Transaction B\n-----|------------------------|------------------\nT1   | BEGIN                  |\nT2   | SELECT balance         |\n     | FROM account           |\n     | -- Returns 500         |\nT3   |                        | BEGIN\nT4   |                        | UPDATE account\n     |                        | SET balance = 1000\nT5   |                        | COMMIT\nT6   | SELECT balance         |\n     | FROM account           |\n     | -- Returns 1000 (different!)</code></pre>\n    </div>\n\n    <h4>Phantom Read</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Time | Transaction A          | Transaction B\n-----|------------------------|------------------\nT1   | BEGIN                  |\nT2   | SELECT COUNT(*)        |\n     | FROM account           |\n     | WHERE balance > 100    |\n     | -- Returns 5           |\nT3   |                        | BEGIN\nT4   |                        | INSERT INTO account\n     |                        | VALUES (999, 200)\nT5   |                        | COMMIT\nT6   | SELECT COUNT(*)        |\n     | FROM account           |\n     | WHERE balance > 100    |\n     | -- Returns 6 (phantom row!)</code></pre>\n    </div>\n\n    <h3>Isolation Level Comparison</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Level              | Dirty | Non-Rep | Phantom | Concurrency\n-------------------|-------|---------|---------|------------\nRead Uncommitted   |   ✓   |    ✓    |    ✓    |   Highest\nRead Committed     |   ✗   |    ✓    |    ✓    |    High\nRepeatable Read    |   ✗   |    ✗    |    ✓    |   Medium\nSerializable       |   ✗   |    ✗    |    ✗    |   Lowest\n\n✓ = Anomaly allowed\n✗ = Anomaly prevented</code></pre>\n    </div>\n\n    <h3>Implementation Mechanisms</h3>\n    \n    <h4>Lock-Based Implementation</h4>\n    <ul>\n      <li><strong>Read Uncommitted:</strong> No read locks, short-duration write locks</li>\n      <li><strong>Read Committed:</strong> Short-duration read locks, long-duration write locks</li>\n      <li><strong>Repeatable Read:</strong> Long-duration read and write locks</li>\n      <li><strong>Serializable:</strong> Range locks and predicate locks</li>\n    </ul>\n\n    <h4>MVCC Implementation</h4>\n    <ul>\n      <li><strong>Snapshot Isolation:</strong> Each transaction sees consistent snapshot</li>\n      <li><strong>Version Chains:</strong> Multiple versions of each row maintained</li>\n      <li><strong>Timestamp Ordering:</strong> Visibility based on transaction timestamps</li>\n      <li><strong>No Read Locks:</strong> Readers don't block writers</li>\n    </ul>\n\n    <h3>Database-Specific Behavior</h3>\n    \n    <h4>PostgreSQL</h4>\n    <ul>\n      <li><strong>Default:</strong> Read Committed</li>\n      <li><strong>Serializable:</strong> Uses Serializable Snapshot Isolation (SSI)</li>\n      <li><strong>No Read Uncommitted:</strong> Treats as Read Committed</li>\n      <li><strong>MVCC:</strong> Extensive use of multiversion concurrency control</li>\n    </ul>\n\n    <h4>MySQL InnoDB</h4>\n    <ul>\n      <li><strong>Default:</strong> Repeatable Read</li>\n      <li><strong>Gap Locks:</strong> Prevents phantom reads in Repeatable Read</li>\n      <li><strong>Consistent Read:</strong> Uses MVCC for non-locking reads</li>\n      <li><strong>Next-Key Locking:</strong> Combination of record and gap locks</li>\n    </ul>\n\n    <h4>SQL Server</h4>\n    <ul>\n      <li><strong>Default:</strong> Read Committed</li>\n      <li><strong>Snapshot Isolation:</strong> Available as additional option</li>\n      <li><strong>Read Committed Snapshot:</strong> MVCC-based Read Committed</li>\n      <li><strong>Lock Escalation:</strong> Automatic escalation to table locks</li>\n    </ul>\n\n    <h3>Choosing Isolation Levels</h3>\n    \n    <h4>Read Uncommitted - Use When:</h4>\n    <ul>\n      <li><strong>Reporting:</strong> Approximate results acceptable</li>\n      <li><strong>Analytics:</strong> Dirty reads won't significantly impact analysis</li>\n      <li><strong>High Throughput:</strong> Maximum concurrency required</li>\n      <li><strong>Non-Critical Data:</strong> Inconsistency is acceptable</li>\n    </ul>\n\n    <h4>Read Committed - Use When:</h4>\n    <ul>\n      <li><strong>Web Applications:</strong> Good balance of consistency and performance</li>\n      <li><strong>OLTP Systems:</strong> Standard for most transactional workloads</li>\n      <li><strong>Default Choice:</strong> Safe default for most applications</li>\n    </ul>\n\n    <h4>Repeatable Read - Use When:</h4>\n    <ul>\n      <li><strong>Financial Systems:</strong> Consistent reads within transaction critical</li>\n      <li><strong>Batch Processing:</strong> Need stable view during long operations</li>\n      <li><strong>Data Migration:</strong> Consistent snapshot during migration</li>\n    </ul>\n\n    <h4>Serializable - Use When:</h4>\n    <ul>\n      <li><strong>Critical Transactions:</strong> Absolute consistency required</li>\n      <li><strong>Audit Systems:</strong> Complete isolation necessary</li>\n      <li><strong>Low Concurrency:</strong> Few concurrent transactions</li>\n    </ul>\n\n    <h3>Setting Isolation Levels</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>-- SQL Standard\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED;\n\n-- PostgreSQL\nBEGIN ISOLATION LEVEL REPEATABLE READ;\n\n-- MySQL\nSET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;\n\n-- SQL Server\nSET TRANSACTION ISOLATION LEVEL SNAPSHOT;</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Best Practice:</strong>\n      <p>Start with Read Committed as the default, then adjust based on specific consistency requirements and performance characteristics. Use the lowest isolation level that meets your consistency needs.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://www.postgresql.org/docs/current/transaction-iso.html\" target=\"_blank\">PostgreSQL Transaction Isolation</a></li>\n        <li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-transaction-isolation-levels.html\" target=\"_blank\">MySQL InnoDB Isolation Levels</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const deadlockDetectionPrevention = {\n  id: 'deadlock-detection-prevention',\n  title: 'Deadlock Detection and Prevention',\n  content: `\n    <h2>Deadlock Detection and Prevention</h2>\n    <p>Deadlocks occur when two or more transactions wait indefinitely for each other to release resources. Understanding detection and prevention strategies is crucial for database system design.</p>\n    \n    <h3>What is a Deadlock?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Circular wait condition where transactions block each other indefinitely</li>\n      <li><strong>Resource Types:</strong> Locks on database objects (tables, rows, pages)</li>\n      <li><strong>Impact:</strong> System throughput degradation and transaction failures</li>\n      <li><strong>Inevitability:</strong> Cannot be completely eliminated in concurrent systems</li>\n    </ul>\n\n    <h3>Deadlock Example</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Time | Transaction A          | Transaction B\n-----|------------------------|------------------\nT1   | BEGIN                  | BEGIN\nT2   | LOCK account_1         |\nT3   |                        | LOCK account_2\nT4   | -- Try to lock         |\n     | account_2 (WAIT)       |\nT5   |                        | -- Try to lock\n     |                        | account_1 (WAIT)\n     | \n     | DEADLOCK! Both transactions wait forever</code></pre>\n    </div>\n\n    <h3>Deadlock Prevention Strategies</h3>\n    \n    <h4>1. Resource Ordering</h4>\n    <ul>\n      <li><strong>Concept:</strong> Always acquire locks in the same predetermined order</li>\n      <li><strong>Implementation:</strong> Order resources by ID, name, or hash value</li>\n      <li><strong>Advantage:</strong> Eliminates circular wait conditions</li>\n      <li><strong>Limitation:</strong> May not be practical for complex applications</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Good: Always lock accounts in ID order\nif (account1_id < account2_id) {\n    LOCK account1, account2;\n} else {\n    LOCK account2, account1;\n}</code></pre>\n    </div>\n\n    <h4>2. Timeout-Based Prevention</h4>\n    <ul>\n      <li><strong>Concept:</strong> Set maximum wait time for lock acquisition</li>\n      <li><strong>Implementation:</strong> Abort transaction if timeout exceeded</li>\n      <li><strong>Advantage:</strong> Simple to implement, bounds wait time</li>\n      <li><strong>Limitation:</strong> May abort transactions unnecessarily</li>\n    </ul>\n\n    <h4>3. Timestamp-Based Prevention</h4>\n    \n    <h5>Wait-Die Scheme</h5>\n    <ul>\n      <li><strong>Rule:</strong> Older transaction waits, younger transaction dies</li>\n      <li><strong>Logic:</strong> If TS(Ti) < TS(Tj), Ti waits; else Ti aborts</li>\n      <li><strong>Characteristic:</strong> Non-preemptive approach</li>\n    </ul>\n\n    <h5>Wound-Wait Scheme</h5>\n    <ul>\n      <li><strong>Rule:</strong> Older transaction wounds (aborts) younger, younger waits</li>\n      <li><strong>Logic:</strong> If TS(Ti) < TS(Tj), Tj aborts; else Ti waits</li>\n      <li><strong>Characteristic:</strong> Preemptive approach</li>\n    </ul>\n\n    <h3>Deadlock Detection</h3>\n    \n    <h4>Wait-For Graph</h4>\n    <ul>\n      <li><strong>Structure:</strong> Directed graph where nodes are transactions</li>\n      <li><strong>Edges:</strong> Ti → Tj means Ti waits for resource held by Tj</li>\n      <li><strong>Cycle Detection:</strong> Deadlock exists if graph contains cycles</li>\n      <li><strong>Algorithm:</strong> Use DFS or similar graph traversal</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Wait-For Graph Example:\nT1 → T2 → T3 → T1  (Cycle detected = Deadlock!)\n\nTransactions:\n- T1 waits for resource held by T2\n- T2 waits for resource held by T3  \n- T3 waits for resource held by T1</code></pre>\n    </div>\n\n    <h4>Detection Algorithm</h4>\n    <ol>\n      <li><strong>Build Graph:</strong> Create wait-for graph from current lock states</li>\n      <li><strong>Cycle Detection:</strong> Use DFS to detect cycles</li>\n      <li><strong>Victim Selection:</strong> Choose transaction to abort if cycle found</li>\n      <li><strong>Recovery:</strong> Abort victim and restart if necessary</li>\n    </ol>\n\n    <h3>Deadlock Resolution</h3>\n    \n    <h4>Victim Selection Criteria</h4>\n    <ul>\n      <li><strong>Age:</strong> Abort younger transactions (less work lost)</li>\n      <li><strong>Progress:</strong> Abort transaction with least progress</li>\n      <li><strong>Resources:</strong> Abort transaction holding fewest resources</li>\n      <li><strong>Rollback Cost:</strong> Minimize rollback overhead</li>\n      <li><strong>Priority:</strong> Consider transaction priority levels</li>\n    </ul>\n\n    <h4>Recovery Actions</h4>\n    <ul>\n      <li><strong>Complete Rollback:</strong> Abort entire transaction</li>\n      <li><strong>Partial Rollback:</strong> Rollback to savepoint (if supported)</li>\n      <li><strong>Resource Release:</strong> Release all locks held by victim</li>\n      <li><strong>Restart:</strong> Automatically restart aborted transaction</li>\n    </ul>\n\n    <h3>Database System Implementations</h3>\n    \n    <h4>MySQL InnoDB</h4>\n    <ul>\n      <li><strong>Detection:</strong> Automatic deadlock detection using wait-for graph</li>\n      <li><strong>Resolution:</strong> Abort transaction with smallest number of rows</li>\n      <li><strong>Timeout:</strong> innodb_lock_wait_timeout (default 50 seconds)</li>\n      <li><strong>Monitoring:</strong> SHOW ENGINE INNODB STATUS</li>\n    </ul>\n\n    <h4>PostgreSQL</h4>\n    <ul>\n      <li><strong>Detection:</strong> Periodic deadlock detection (every 1 second)</li>\n      <li><strong>Resolution:</strong> Abort one transaction in deadlock cycle</li>\n      <li><strong>Timeout:</strong> deadlock_timeout parameter</li>\n      <li><strong>Logging:</strong> Log deadlock details for analysis</li>\n    </ul>\n\n    <h4>SQL Server</h4>\n    <ul>\n      <li><strong>Detection:</strong> Lock monitor checks every 5 seconds</li>\n      <li><strong>Resolution:</strong> Choose deadlock victim based on cost</li>\n      <li><strong>Priority:</strong> SET DEADLOCK_PRIORITY to influence victim selection</li>\n      <li><strong>Monitoring:</strong> Deadlock graph events and traces</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Application Design</h4>\n    <ul>\n      <li><strong>Short Transactions:</strong> Keep transactions as brief as possible</li>\n      <li><strong>Consistent Ordering:</strong> Access resources in consistent order</li>\n      <li><strong>Avoid User Interaction:</strong> Don't wait for user input during transactions</li>\n      <li><strong>Use Appropriate Isolation:</strong> Use lowest isolation level that meets requirements</li>\n    </ul>\n\n    <h4>Database Design</h4>\n    <ul>\n      <li><strong>Proper Indexing:</strong> Reduce lock duration with efficient queries</li>\n      <li><strong>Partitioning:</strong> Reduce contention through data partitioning</li>\n      <li><strong>Lock Granularity:</strong> Use row-level locking when possible</li>\n      <li><strong>Connection Pooling:</strong> Manage connections efficiently</li>\n    </ul>\n\n    <h4>Monitoring and Debugging</h4>\n    <ul>\n      <li><strong>Deadlock Logs:</strong> Enable and monitor deadlock logging</li>\n      <li><strong>Lock Waits:</strong> Monitor lock wait times and patterns</li>\n      <li><strong>Query Analysis:</strong> Identify problematic query patterns</li>\n      <li><strong>Load Testing:</strong> Test under realistic concurrent loads</li>\n    </ul>\n\n    <h3>Deadlock Monitoring Queries</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>-- MySQL: Check recent deadlocks\nSHOW ENGINE INNODB STATUS;\n\n-- PostgreSQL: Enable deadlock logging\nSET log_lock_waits = on;\nSET deadlock_timeout = '1s';\n\n-- SQL Server: Deadlock graph\nSELECT * FROM sys.dm_exec_requests \nWHERE blocking_session_id > 0;</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Deadlocks are a natural consequence of concurrent access patterns. The goal is not to eliminate them entirely but to detect and resolve them quickly with minimal impact on system performance.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-deadlocks.html\" target=\"_blank\">MySQL InnoDB Deadlocks</a></li>\n        <li><a href=\"https://www.postgresql.org/docs/current/explicit-locking.html\" target=\"_blank\">PostgreSQL Explicit Locking</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const distributedTransactions = {\n  id: 'distributed-transactions',\n  title: 'Distributed Transactions',\n  content: `\n    <h2>Distributed Transactions</h2>\n    <p>Distributed transactions are transactions that span multiple databases, systems, or resources across a network, requiring coordination to ensure ACID properties are maintained across all participating systems.</p>\n    \n    <h3>What are Distributed Transactions?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Transactions that involve multiple resource managers or databases</li>\n      <li><strong>Scope:</strong> Operations across network boundaries</li>\n      <li><strong>Coordination:</strong> Requires distributed coordination protocols</li>\n      <li><strong>ACID Compliance:</strong> Must maintain atomicity, consistency, isolation, durability across all resources</li>\n    </ul>\n\n    <h3>Challenges in Distributed Transactions</h3>\n    \n    <h4>1. Network Failures</h4>\n    <ul>\n      <li><strong>Partitions:</strong> Network splits can isolate participants</li>\n      <li><strong>Timeouts:</strong> Slow networks can cause transaction timeouts</li>\n      <li><strong>Message Loss:</strong> Critical coordination messages may be lost</li>\n      <li><strong>Partial Failures:</strong> Some participants may fail while others succeed</li>\n    </ul>\n\n    <h4>2. Consistency Challenges</h4>\n    <ul>\n      <li><strong>Global Consistency:</strong> Ensuring all participants have consistent view</li>\n      <li><strong>Isolation Levels:</strong> Maintaining isolation across distributed resources</li>\n      <li><strong>Deadlock Detection:</strong> Detecting deadlocks across multiple systems</li>\n      <li><strong>Concurrent Access:</strong> Managing concurrent distributed transactions</li>\n    </ul>\n\n    <h3>Distributed Transaction Protocols</h3>\n    \n    <h4>1. Two-Phase Commit (2PC)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Phase 1: Prepare Phase\n1. Coordinator sends PREPARE to all participants\n2. Participants prepare transaction and vote YES/NO\n3. Participants write to undo/redo logs\n4. Coordinator collects all votes\n\nPhase 2: Commit Phase\nIf all votes are YES:\n1. Coordinator sends COMMIT to all participants\n2. Participants commit transaction\n3. Participants send ACK to coordinator\n\nIf any vote is NO:\n1. Coordinator sends ABORT to all participants\n2. Participants rollback transaction\n3. Participants send ACK to coordinator</code></pre>\n    </div>\n\n    <h4>2. Three-Phase Commit (3PC)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Phase 1: CanCommit Phase\n1. Coordinator sends CANCOMMIT to all participants\n2. Participants respond YES/NO based on ability to commit\n\nPhase 2: PreCommit Phase\nIf all responses are YES:\n1. Coordinator sends PRECOMMIT to all participants\n2. Participants prepare to commit and respond ACK\n\nPhase 3: DoCommit Phase\n1. Coordinator sends DOCOMMIT to all participants\n2. Participants commit transaction\n3. Participants send HAVECOMMITTED to coordinator</code></pre>\n    </div>\n\n    <h3>Implementation Examples</h3>\n    \n    <h4>Java Transaction API (JTA)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>@Transactional\npublic class DistributedTransactionExample {\n    \n    @Resource\n    private UserTransaction userTransaction;\n    \n    @Resource(name = \"jdbc/database1\")\n    private DataSource dataSource1;\n    \n    @Resource(name = \"jdbc/database2\")\n    private DataSource dataSource2;\n    \n    public void transferMoney(String fromAccount, String toAccount, \n                            BigDecimal amount) throws Exception {\n        \n        userTransaction.begin();\n        \n        try {\n            // Operation on Database 1\n            try (Connection conn1 = dataSource1.getConnection()) {\n                PreparedStatement stmt = conn1.prepareStatement(\n                    \"UPDATE accounts SET balance = balance - ? WHERE id = ?\");\n                stmt.setBigDecimal(1, amount);\n                stmt.setString(2, fromAccount);\n                stmt.executeUpdate();\n            }\n            \n            // Operation on Database 2\n            try (Connection conn2 = dataSource2.getConnection()) {\n                PreparedStatement stmt = conn2.prepareStatement(\n                    \"UPDATE accounts SET balance = balance + ? WHERE id = ?\");\n                stmt.setBigDecimal(1, amount);\n                stmt.setString(2, toAccount);\n                stmt.executeUpdate();\n            }\n            \n            userTransaction.commit();\n            \n        } catch (Exception e) {\n            userTransaction.rollback();\n            throw e;\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h4>XA Transactions</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// XA Transaction with multiple resources\npublic class XATransactionExample {\n    \n    public void performXATransaction() throws Exception {\n        // Create XA resources\n        XADataSource xaDS1 = new MysqlXADataSource();\n        XADataSource xaDS2 = new PostgresXADataSource();\n        \n        XAConnection xaConn1 = xaDS1.getXAConnection();\n        XAConnection xaConn2 = xaDS2.getXAConnection();\n        \n        XAResource xaRes1 = xaConn1.getXAResource();\n        XAResource xaRes2 = xaConn2.getXAResource();\n        \n        // Create transaction IDs\n        Xid xid1 = new XidImpl(1, \"db1\".getBytes(), \"tx1\".getBytes());\n        Xid xid2 = new XidImpl(1, \"db2\".getBytes(), \"tx1\".getBytes());\n        \n        try {\n            // Start XA transactions\n            xaRes1.start(xid1, XAResource.TMNOFLAGS);\n            xaRes2.start(xid2, XAResource.TMNOFLAGS);\n            \n            // Perform operations\n            Connection conn1 = xaConn1.getConnection();\n            Connection conn2 = xaConn2.getConnection();\n            \n            // Database operations...\n            \n            // End XA transactions\n            xaRes1.end(xid1, XAResource.TMSUCCESS);\n            xaRes2.end(xid2, XAResource.TMSUCCESS);\n            \n            // Prepare phase\n            int vote1 = xaRes1.prepare(xid1);\n            int vote2 = xaRes2.prepare(xid2);\n            \n            if (vote1 == XAResource.XA_OK && vote2 == XAResource.XA_OK) {\n                // Commit phase\n                xaRes1.commit(xid1, false);\n                xaRes2.commit(xid2, false);\n            } else {\n                // Rollback\n                xaRes1.rollback(xid1);\n                xaRes2.rollback(xid2);\n            }\n            \n        } catch (Exception e) {\n            xaRes1.rollback(xid1);\n            xaRes2.rollback(xid2);\n            throw e;\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Modern Alternatives</h3>\n    \n    <h4>1. Saga Pattern</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Saga implementation for distributed transactions\npublic class OrderSaga {\n    \n    public void processOrder(Order order) {\n        try {\n            // Step 1: Reserve inventory\n            inventoryService.reserveItems(order.getItems());\n            \n            // Step 2: Process payment\n            paymentService.processPayment(order.getPayment());\n            \n            // Step 3: Create shipment\n            shippingService.createShipment(order);\n            \n            // Step 4: Confirm order\n            orderService.confirmOrder(order);\n            \n        } catch (InventoryException e) {\n            // No compensation needed\n            throw new OrderProcessingException(\"Inventory not available\");\n            \n        } catch (PaymentException e) {\n            // Compensate: Release inventory\n            inventoryService.releaseItems(order.getItems());\n            throw new OrderProcessingException(\"Payment failed\");\n            \n        } catch (ShippingException e) {\n            // Compensate: Refund payment and release inventory\n            paymentService.refundPayment(order.getPayment());\n            inventoryService.releaseItems(order.getItems());\n            throw new OrderProcessingException(\"Shipping failed\");\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Event Sourcing with Eventual Consistency</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Event-driven approach\npublic class EventDrivenTransaction {\n    \n    @EventHandler\n    public void handleOrderCreated(OrderCreatedEvent event) {\n        // Publish events instead of direct calls\n        eventBus.publish(new InventoryReservationRequested(\n            event.getOrderId(), event.getItems()));\n    }\n    \n    @EventHandler  \n    public void handleInventoryReserved(InventoryReservedEvent event) {\n        eventBus.publish(new PaymentRequested(\n            event.getOrderId(), event.getAmount()));\n    }\n    \n    @EventHandler\n    public void handlePaymentProcessed(PaymentProcessedEvent event) {\n        eventBus.publish(new ShipmentRequested(\n            event.getOrderId(), event.getShippingAddress()));\n    }\n    \n    // Compensation events for failures\n    @EventHandler\n    public void handlePaymentFailed(PaymentFailedEvent event) {\n        eventBus.publish(new InventoryReleaseRequested(\n            event.getOrderId()));\n    }\n}</code></pre>\n    </div>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Design Principles</h4>\n    <ul>\n      <li><strong>Minimize Scope:</strong> Keep distributed transactions as small as possible</li>\n      <li><strong>Timeout Management:</strong> Set appropriate timeouts for all operations</li>\n      <li><strong>Idempotency:</strong> Ensure operations can be safely retried</li>\n      <li><strong>Compensation Logic:</strong> Design proper rollback mechanisms</li>\n    </ul>\n\n    <h4>Error Handling</h4>\n    <ul>\n      <li><strong>Retry Logic:</strong> Implement exponential backoff for transient failures</li>\n      <li><strong>Dead Letter Queues:</strong> Handle permanently failed transactions</li>\n      <li><strong>Circuit Breakers:</strong> Prevent cascade failures</li>\n      <li><strong>Monitoring:</strong> Track transaction success/failure rates</li>\n    </ul>\n\n    <h3>Performance Considerations</h3>\n    \n    <h4>Optimization Strategies</h4>\n    <ul>\n      <li><strong>Connection Pooling:</strong> Reuse database connections</li>\n      <li><strong>Batch Operations:</strong> Group multiple operations together</li>\n      <li><strong>Asynchronous Processing:</strong> Use async operations where possible</li>\n      <li><strong>Resource Optimization:</strong> Minimize lock holding time</li>\n    </ul>\n\n    <h4>Monitoring Metrics</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Transaction monitoring\npublic class TransactionMonitor {\n    private final MeterRegistry meterRegistry;\n    \n    public void recordTransactionStart(String transactionId) {\n        Timer.Sample sample = Timer.start(meterRegistry);\n        sample.stop(Timer.builder(\"distributed.transaction.duration\")\n            .tag(\"transaction.id\", transactionId)\n            .register(meterRegistry));\n    }\n    \n    public void recordTransactionOutcome(String outcome) {\n        Counter.builder(\"distributed.transaction.outcome\")\n            .tag(\"result\", outcome)\n            .register(meterRegistry)\n            .increment();\n    }\n}</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Distributed transactions are complex and can significantly impact system performance. Modern architectures often favor eventual consistency patterns like Saga or event sourcing over traditional 2PC for better scalability and resilience.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Distributed_transaction\" target=\"_blank\">Distributed Transactions - Wikipedia</a></li>\n        <li><a href=\"https://microservices.io/patterns/data/saga.html\" target=\"_blank\">Saga Pattern</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const databaseSharding = {\n  id: 'database-sharding',\n  title: 'Database Sharding',\n  content: `\n    <h2>Database Sharding</h2>\n    <p>Database sharding is a database architecture pattern that involves splitting a large database into smaller, more manageable pieces called shards, distributed across multiple servers.</p>\n\n    <h3>What is Sharding?</h3>\n    \n    <h4>Definition</h4>\n    <ul>\n      <li>Horizontal partitioning of data across multiple database instances</li>\n      <li>Each shard contains a subset of the total data</li>\n      <li>Shards are independent and can be hosted on different servers</li>\n      <li>Application logic determines which shard to query</li>\n    </ul>\n\n    <h4>Sharding vs Partitioning</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Partitioning</th>\n          <th>Sharding</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Scope</strong></td>\n          <td>Single database instance</td>\n          <td>Multiple database instances</td>\n        </tr>\n        <tr>\n          <td><strong>Hardware</strong></td>\n          <td>Same server</td>\n          <td>Different servers</td>\n        </tr>\n        <tr>\n          <td><strong>Scalability</strong></td>\n          <td>Vertical scaling</td>\n          <td>Horizontal scaling</td>\n        </tr>\n        <tr>\n          <td><strong>Complexity</strong></td>\n          <td>Lower</td>\n          <td>Higher</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Sharding Strategies</h3>\n\n    <h4>1. Range-Based Sharding</h4>\n    <ul>\n      <li>Data divided based on ranges of shard key values</li>\n      <li>Example: Users A-M on Shard 1, N-Z on Shard 2</li>\n      <li><strong>Pros:</strong> Simple to implement, range queries efficient</li>\n      <li><strong>Cons:</strong> Potential hotspots, uneven distribution</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Range-based sharding example\nfunction getShardByRange(userId) {\n  const firstChar = userId.charAt(0).toUpperCase();\n  if (firstChar >= 'A' && firstChar <= 'M') {\n    return 'shard1';\n  } else {\n    return 'shard2';\n  }\n}\n\n// Query routing\nconst shard = getShardByRange('john_doe');\nconst user = await shards[shard].query('SELECT * FROM users WHERE id = ?', [userId]);</code></pre>\n    </div>\n\n    <h4>2. Hash-Based Sharding</h4>\n    <ul>\n      <li>Hash function applied to shard key</li>\n      <li>Result determines target shard</li>\n      <li><strong>Pros:</strong> Even distribution, no hotspots</li>\n      <li><strong>Cons:</strong> Range queries difficult, resharding complex</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Hash-based sharding\nfunction getShardByHash(userId, numShards) {\n  const hash = hashFunction(userId);\n  return hash % numShards;\n}\n\n// Consistent hashing for better resharding\nclass ConsistentHashRing {\n  constructor() {\n    this.ring = new Map();\n    this.sortedKeys = [];\n  }\n\n  addShard(shardId) {\n    for (let i = 0; i < 100; i++) { // Virtual nodes\n      const key = hashFunction(\\`\\${shardId}:\\${i}\\`);\n      this.ring.set(key, shardId);\n    }\n    this.sortedKeys = Array.from(this.ring.keys()).sort((a, b) => a - b);\n  }\n\n  getShard(key) {\n    const hash = hashFunction(key);\n    const index = this.sortedKeys.findIndex(k => k >= hash);\n    const targetKey = index === -1 ? this.sortedKeys[0] : this.sortedKeys[index];\n    return this.ring.get(targetKey);\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. Directory-Based Sharding</h4>\n    <ul>\n      <li>Lookup service maintains mapping of keys to shards</li>\n      <li>Flexible shard assignment</li>\n      <li><strong>Pros:</strong> Dynamic rebalancing, complex routing logic</li>\n      <li><strong>Cons:</strong> Additional complexity, lookup service bottleneck</li>\n    </ul>\n\n    <h4>4. Geographic Sharding</h4>\n    <ul>\n      <li>Data distributed based on geographic location</li>\n      <li>Reduces latency for location-based queries</li>\n      <li>Compliance with data residency requirements</li>\n    </ul>\n\n    <h3>Shard Key Selection</h3>\n\n    <h4>Characteristics of Good Shard Keys</h4>\n    <ul>\n      <li><strong>High Cardinality:</strong> Many distinct values</li>\n      <li><strong>Even Distribution:</strong> Values spread uniformly</li>\n      <li><strong>Query Pattern Alignment:</strong> Supports common queries</li>\n      <li><strong>Immutable:</strong> Values don't change over time</li>\n    </ul>\n\n    <h4>Common Shard Key Patterns</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Pattern</th>\n          <th>Use Case</th>\n          <th>Example</th>\n          <th>Considerations</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>User ID</strong></td>\n          <td>User-centric applications</td>\n          <td>Social media, e-commerce</td>\n          <td>Good for user-specific queries</td>\n        </tr>\n        <tr>\n          <td><strong>Timestamp</strong></td>\n          <td>Time-series data</td>\n          <td>Logs, metrics, events</td>\n          <td>Hot spots on recent data</td>\n        </tr>\n        <tr>\n          <td><strong>Geographic Region</strong></td>\n          <td>Location-based services</td>\n          <td>Ride sharing, delivery</td>\n          <td>Uneven geographic distribution</td>\n        </tr>\n        <tr>\n          <td><strong>Tenant ID</strong></td>\n          <td>Multi-tenant applications</td>\n          <td>SaaS platforms</td>\n          <td>Tenant size variations</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Cross-Shard Operations</h3>\n\n    <h4>Challenges</h4>\n    <ul>\n      <li>Queries spanning multiple shards</li>\n      <li>Distributed transactions</li>\n      <li>Maintaining referential integrity</li>\n      <li>Aggregations across shards</li>\n    </ul>\n\n    <h4>Solutions</h4>\n\n    <h5>Scatter-Gather Pattern</h5>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Scatter-gather for cross-shard queries\nasync function searchUsersAcrossShards(searchTerm) {\n  const promises = shards.map(shard => \n    shard.query('SELECT * FROM users WHERE name LIKE ?', [\\`%\\${searchTerm}%\\`])\n  );\n  \n  const results = await Promise.all(promises);\n  return results.flat().sort((a, b) => a.name.localeCompare(b.name));\n}\n\n// Aggregation across shards\nasync function getTotalUserCount() {\n  const promises = shards.map(shard => \n    shard.query('SELECT COUNT(*) as count FROM users')\n  );\n  \n  const results = await Promise.all(promises);\n  return results.reduce((total, result) => total + result[0].count, 0);\n}</code></pre>\n    </div>\n\n    <h5>Denormalization</h5>\n    <ul>\n      <li>Replicate frequently accessed data across shards</li>\n      <li>Trade storage for query performance</li>\n      <li>Eventual consistency considerations</li>\n    </ul>\n\n    <h3>Resharding Strategies</h3>\n\n    <h4>When to Reshard</h4>\n    <ul>\n      <li>Uneven data distribution (hotspots)</li>\n      <li>Individual shard reaching capacity limits</li>\n      <li>Performance degradation</li>\n      <li>Adding or removing shards</li>\n    </ul>\n\n    <h4>Resharding Approaches</h4>\n\n    <h5>1. Stop-and-Copy</h5>\n    <ul>\n      <li>Stop application, redistribute data, restart</li>\n      <li>Simple but requires downtime</li>\n      <li>Suitable for smaller datasets</li>\n    </ul>\n\n    <h5>2. Online Resharding</h5>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Online resharding process\nclass OnlineResharding {\n  async reshard(sourceShards, targetShards) {\n    // Phase 1: Start dual writes\n    await this.enableDualWrites(sourceShards, targetShards);\n    \n    // Phase 2: Copy existing data\n    await this.copyExistingData(sourceShards, targetShards);\n    \n    // Phase 3: Switch reads to new shards\n    await this.switchReads(targetShards);\n    \n    // Phase 4: Stop dual writes, cleanup old shards\n    await this.cleanup(sourceShards);\n  }\n  \n  async enableDualWrites(sourceShards, targetShards) {\n    // Write to both old and new shards\n    this.dualWriteMode = true;\n  }\n  \n  async copyExistingData(sourceShards, targetShards) {\n    // Background process to copy data\n    for (const sourceShard of sourceShards) {\n      await this.copyShardData(sourceShard, targetShards);\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h3>Monitoring and Maintenance</h3>\n\n    <h4>Key Metrics</h4>\n    <ul>\n      <li><strong>Shard Distribution:</strong> Data size per shard</li>\n      <li><strong>Query Performance:</strong> Response times per shard</li>\n      <li><strong>Hot Spots:</strong> Uneven query distribution</li>\n      <li><strong>Cross-Shard Queries:</strong> Frequency and performance</li>\n      <li><strong>Connection Pool Usage:</strong> Per-shard connections</li>\n    </ul>\n\n    <h4>Maintenance Tasks</h4>\n    <ul>\n      <li>Regular rebalancing based on usage patterns</li>\n      <li>Monitoring shard health and performance</li>\n      <li>Backup and recovery procedures per shard</li>\n      <li>Schema migrations across all shards</li>\n    </ul>\n\n    <h3>Advantages and Disadvantages</h3>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Horizontal Scalability:</strong> Add more servers as needed</li>\n      <li><strong>Performance:</strong> Smaller datasets, faster queries</li>\n      <li><strong>Fault Isolation:</strong> Failure affects only one shard</li>\n      <li><strong>Geographic Distribution:</strong> Data closer to users</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Complexity:</strong> Application and operational complexity</li>\n      <li><strong>Cross-Shard Operations:</strong> Difficult and expensive</li>\n      <li><strong>Rebalancing:</strong> Complex resharding operations</li>\n      <li><strong>Consistency:</strong> Maintaining consistency across shards</li>\n    </ul>\n\n    <h3>Alternatives to Sharding</h3>\n\n    <h4>Before Sharding, Consider:</h4>\n    <ul>\n      <li><strong>Vertical Scaling:</strong> Upgrade hardware resources</li>\n      <li><strong>Read Replicas:</strong> Scale read operations</li>\n      <li><strong>Caching:</strong> Reduce database load</li>\n      <li><strong>Query Optimization:</strong> Improve existing queries</li>\n      <li><strong>Archiving:</strong> Move old data to separate storage</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li>Start simple, shard only when necessary</li>\n      <li>Choose shard keys carefully based on query patterns</li>\n      <li>Design application to be shard-aware from the beginning</li>\n      <li>Implement comprehensive monitoring and alerting</li>\n      <li>Plan for resharding and rebalancing operations</li>\n      <li>Use consistent hashing for better distribution</li>\n      <li>Minimize cross-shard operations in application design</li>\n      <li>Test failure scenarios and recovery procedures</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Sharding is a powerful technique for scaling databases horizontally, but it introduces significant complexity. Carefully evaluate whether simpler scaling approaches can meet your needs before implementing sharding.</p>\n    </div>\n  `\n}; ","export const databaseTypes = {\n  id: 'database-types',\n  title: 'Database Types',\n  content: `\n# Database Types\n\nUnderstanding different database types and their optimal use cases is crucial for system design and architecture decisions.\n\n## Overview\n\nDatabases can be categorized based on their data model, storage mechanism, and intended use cases. Each type has specific strengths and trade-offs.\n\n## Classification by Data Model\n\n### 1. Relational Databases (RDBMS)\n\n**Characteristics:**\n- Structured data with predefined schemas\n- ACID compliance\n- SQL query language\n- Strong consistency\n- Normalized data storage\n\n**Examples:**\n- PostgreSQL\n- MySQL\n- Oracle Database\n- SQL Server\n- SQLite\n\n**Use Cases:**\n- Financial systems\n- E-commerce applications\n- CRM systems\n- Applications requiring complex queries and transactions\n\n**Advantages:**\n- Strong consistency guarantees\n- Mature ecosystem and tooling\n- Complex query capabilities\n- Data integrity enforcement\n\n**Disadvantages:**\n- Limited horizontal scalability\n- Schema rigidity\n- Performance bottlenecks with complex joins\n\n### 2. NoSQL Databases\n\n#### Document Databases\n\n**Characteristics:**\n- Store data as documents (JSON, BSON, XML)\n- Flexible schema\n- Nested data structures\n- Rich query capabilities\n\n**Examples:**\n- MongoDB\n- CouchDB\n- Amazon DocumentDB\n- RavenDB\n\n**Use Cases:**\n- Content management systems\n- Real-time analytics\n- IoT applications\n- Rapid prototyping\n\n#### Key-Value Stores\n\n**Characteristics:**\n- Simple key-value pairs\n- High performance\n- Horizontal scalability\n- Eventually consistent\n\n**Examples:**\n- Redis\n- Amazon DynamoDB\n- Riak\n- Voldemort\n\n**Use Cases:**\n- Caching layers\n- Session storage\n- Shopping carts\n- Real-time recommendations\n\n#### Column-Family (Wide-Column)\n\n**Characteristics:**\n- Data stored in column families\n- Sparse data handling\n- Horizontal scaling\n- Time-series data optimization\n\n**Examples:**\n- Cassandra\n- HBase\n- Amazon SimpleDB\n- Google Bigtable\n\n**Use Cases:**\n- Time-series data\n- IoT sensor data\n- Event logging\n- Analytics workloads\n\n#### Graph Databases\n\n**Characteristics:**\n- Nodes and relationships\n- Traversal-based queries\n- Complex relationship modeling\n- ACID properties (many)\n\n**Examples:**\n- Neo4j\n- Amazon Neptune\n- ArangoDB\n- OrientDB\n\n**Use Cases:**\n- Social networks\n- Recommendation engines\n- Fraud detection\n- Knowledge graphs\n\n## Classification by Storage Mechanism\n\n### 1. In-Memory Databases\n\n**Characteristics:**\n- Data stored in RAM\n- Extremely fast access\n- Volatile storage (unless persisted)\n- Limited by memory capacity\n\n**Examples:**\n- Redis\n- Memcached\n- SAP HANA\n- VoltDB\n\n**Use Cases:**\n- Caching\n- Real-time analytics\n- High-frequency trading\n- Session management\n\n### 2. Disk-Based Databases\n\n**Characteristics:**\n- Data stored on persistent storage\n- Larger capacity\n- Slower access than memory\n- Durable storage\n\n**Examples:**\n- Most traditional databases\n- File-based databases\n- Embedded databases\n\n### 3. Hybrid Databases\n\n**Characteristics:**\n- Combination of in-memory and disk storage\n- Hot data in memory, cold data on disk\n- Optimized performance and capacity\n\n**Examples:**\n- SAP HANA\n- MemSQL\n- Oracle TimesTen\n\n## Classification by Use Case\n\n### 1. OLTP (Online Transaction Processing)\n\n**Characteristics:**\n- High concurrency\n- Short transactions\n- Real-time processing\n- ACID compliance\n\n**Examples:**\n- PostgreSQL\n- MySQL\n- Oracle Database\n- SQL Server\n\n**Use Cases:**\n- Banking systems\n- E-commerce transactions\n- Inventory management\n- Order processing\n\n### 2. OLAP (Online Analytical Processing)\n\n**Characteristics:**\n- Complex queries\n- Large data volumes\n- Batch processing\n- Read-heavy workloads\n\n**Examples:**\n- Amazon Redshift\n- Google BigQuery\n- Snowflake\n- Apache Spark\n\n**Use Cases:**\n- Business intelligence\n- Data warehousing\n- Reporting and analytics\n- Data mining\n\n### 3. HTAP (Hybrid Transactional/Analytical Processing)\n\n**Characteristics:**\n- Combines OLTP and OLAP\n- Real-time analytics on transactional data\n- Eliminates ETL delays\n- Complex architecture\n\n**Examples:**\n- SAP HANA\n- MemSQL\n- TiDB\n- CockroachDB\n\n## Specialized Database Types\n\n### 1. Time-Series Databases\n\n**Characteristics:**\n- Optimized for time-stamped data\n- High write throughput\n- Data compression\n- Time-based queries\n\n**Examples:**\n- InfluxDB\n- TimescaleDB\n- OpenTSDB\n- Prometheus\n\n**Use Cases:**\n- IoT monitoring\n- Financial data\n- System metrics\n- Sensor data\n\n### 2. Search Databases\n\n**Characteristics:**\n- Full-text search capabilities\n- Inverted indexes\n- Relevance scoring\n- Faceted search\n\n**Examples:**\n- Elasticsearch\n- Apache Solr\n- Amazon CloudSearch\n- Algolia\n\n**Use Cases:**\n- Website search\n- Log analysis\n- E-commerce product search\n- Document retrieval\n\n### 3. Spatial Databases\n\n**Characteristics:**\n- Geographic data storage\n- Spatial indexing\n- Location-based queries\n- GIS integration\n\n**Examples:**\n- PostGIS (PostgreSQL extension)\n- Oracle Spatial\n- MongoDB (with geospatial support)\n- Neo4j Spatial\n\n**Use Cases:**\n- Mapping applications\n- Location services\n- Urban planning\n- Environmental monitoring\n\n### 4. Blockchain Databases\n\n**Characteristics:**\n- Immutable ledger\n- Distributed consensus\n- Cryptographic hashing\n- Decentralized architecture\n\n**Examples:**\n- Bitcoin\n- Ethereum\n- Hyperledger Fabric\n- BigchainDB\n\n**Use Cases:**\n- Cryptocurrency\n- Supply chain tracking\n- Digital identity\n- Smart contracts\n\n## Database Selection Criteria\n\n### Performance Requirements\n\n| Criterion | RDBMS | NoSQL | In-Memory |\n|-----------|-------|-------|-----------|\n| Read Performance | Good | Excellent | Outstanding |\n| Write Performance | Good | Excellent | Outstanding |\n| Complex Queries | Excellent | Limited | Good |\n| Transactions | Excellent | Limited | Good |\n\n### Scalability Patterns\n\n| Pattern | Description | Best For |\n|---------|-------------|----------|\n| Vertical Scaling | Increase hardware resources | RDBMS, small to medium scale |\n| Horizontal Scaling | Add more servers | NoSQL, large scale |\n| Read Replicas | Multiple read-only copies | Read-heavy workloads |\n| Sharding | Partition data across servers | Large datasets |\n\n### Consistency Models\n\n| Model | Description | Trade-offs |\n|-------|-------------|------------|\n| Strong Consistency | All nodes see same data simultaneously | Lower availability, higher latency |\n| Eventual Consistency | Nodes converge to same state over time | Higher availability, potential conflicts |\n| Weak Consistency | No guarantees about when all nodes converge | Highest performance, complex application logic |\n\n## Best Practices\n\n### 1. Database Selection\n\n\\`\\`\\`javascript\n// Decision framework\nconst selectDatabase = (requirements) => {\n  const factors = {\n    dataStructure: requirements.structured ? 'RDBMS' : 'NoSQL',\n    scalability: requirements.scale > 1000000 ? 'NoSQL' : 'RDBMS',\n    consistency: requirements.strongConsistency ? 'RDBMS' : 'NoSQL',\n    queryComplexity: requirements.complexQueries ? 'RDBMS' : 'NoSQL',\n    performance: requirements.lowLatency ? 'InMemory' : 'Disk'\n  };\n  \n  return analyzeFactors(factors);\n};\n\\`\\`\\`\n\n### 2. Polyglot Persistence\n\n\\`\\`\\`javascript\n// Using multiple databases for different purposes\nconst architectureExample = {\n  userProfiles: 'PostgreSQL',      // Structured data, ACID\n  sessionData: 'Redis',            // Fast access, temporary\n  productCatalog: 'MongoDB',       // Flexible schema\n  recommendations: 'Neo4j',        // Graph relationships\n  analytics: 'ClickHouse',         // Time-series, OLAP\n  search: 'Elasticsearch'          // Full-text search\n};\n\\`\\`\\`\n\n### 3. Migration Strategies\n\n\\`\\`\\`sql\n-- Gradual migration approach\n-- 1. Set up new database alongside existing\n-- 2. Implement dual writes\n-- 3. Backfill historical data\n-- 4. Switch reads to new database\n-- 5. Remove old database\n\n-- Example: RDBMS to NoSQL migration\nBEGIN;\n  -- Write to both systems\n  INSERT INTO legacy_users (id, name, email) VALUES (1, 'John', 'john@example.com');\n  -- Also write to MongoDB\nCOMMIT;\n\\`\\`\\`\n\n## Common Anti-Patterns\n\n### 1. Wrong Database Choice\n\n\\`\\`\\`javascript\n// Anti-pattern: Using RDBMS for everything\nconst badExample = {\n  userSessions: 'PostgreSQL',    // Should use Redis\n  logData: 'MySQL',              // Should use time-series DB\n  socialGraph: 'Oracle',         // Should use graph DB\n  cache: 'SQL Server'            // Should use in-memory store\n};\n\n// Better approach: Right tool for the job\nconst goodExample = {\n  userSessions: 'Redis',\n  logData: 'InfluxDB',\n  socialGraph: 'Neo4j',\n  cache: 'Memcached'\n};\n\\`\\`\\`\n\n### 2. Over-normalization in NoSQL\n\n\\`\\`\\`javascript\n// Anti-pattern: Treating NoSQL like RDBMS\nconst overNormalized = {\n  users: { id: 1, name: 'John' },\n  addresses: { userId: 1, street: '123 Main St' },\n  orders: { userId: 1, productId: 1 },\n  products: { id: 1, name: 'Widget' }\n};\n\n// Better: Denormalized for NoSQL\nconst denormalized = {\n  users: {\n    id: 1,\n    name: 'John',\n    address: { street: '123 Main St' },\n    recentOrders: [\n      { id: 1, product: 'Widget', date: '2023-01-01' }\n    ]\n  }\n};\n\\`\\`\\`\n\n## Emerging Trends\n\n### 1. Multi-Model Databases\n\nDatabases that support multiple data models:\n- ArangoDB (Document, Graph, Key-Value)\n- Azure Cosmos DB (Multiple APIs)\n- OrientDB (Document, Graph, Object)\n\n### 2. Serverless Databases\n\nCloud-native databases with automatic scaling:\n- Amazon Aurora Serverless\n- Google Cloud Firestore\n- PlanetScale\n- Fauna\n\n### 3. NewSQL Databases\n\nCombining RDBMS benefits with NoSQL scalability:\n- CockroachDB\n- TiDB\n- VoltDB\n- NuoDB\n\n## Conclusion\n\nDatabase selection is a critical architectural decision that impacts:\n- **Performance**: Query speed and throughput\n- **Scalability**: Ability to handle growth\n- **Consistency**: Data accuracy guarantees\n- **Availability**: System uptime\n- **Cost**: Infrastructure and operational expenses\n\nUnderstanding the characteristics and trade-offs of different database types enables informed decisions that align with specific application requirements and constraints.\n\nThe trend toward polyglot persistence recognizes that different parts of an application may benefit from different database technologies, leading to more optimized and maintainable systems.\n`\n}; ","export const capTheorem = {\n  id: \"cap-theorem\",\n  title: \"CAP Theorem\",\n  content: `\n    <h2>CAP Theorem</h2>\n    <p>CAP theorem highlights the trade-offs in distributed systems.</p>\n\n    <h3>Consistency</h3>\n    <p>Consistency means all clients see the same data at the same time no matter which node they connect to.</p>\n\n    <h3>Availability</h3>\n    <p>Availability means any client which requests data gets a response even if some of the nodes are down.</p>\n\n    <h3>Partition Tolerance</h3>\n    <p>A partition indicates a communication break between two nodes. Partition tolerance means the system continues to operate despite network partitions.</p>\n\n    <div class=\"info-note\">\n      <strong>Key Insight:</strong> According to CAP theorem, a distributed system can only guarantee two of the three properties at any given time.\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>📚 References</h4>\n      <ul>\n        <li><a href=\"https://www.youtube.com/watch?v=BlkAOdFjGa8&list=PLGo1-Ya-AEQDFaT8RFh-lTQrh7RJCs4Ly&index=9\" target=\"_blank\">CAP Theorem Explained (Video)</a></li>\n        <li><a href=\"https://www.scaler.com/topics/cap-theorem-mongodb/\" target=\"_blank\">CAP Theorem MongoDB</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const pacelcTheorem = {\n  id: \"pacelc-theorem\",\n  title: \"PACELC Theorem\",\n  content: `\n    <h2>PACELC Theorem</h2>\n    <p>PACELC is an extension of the CAP theorem.</p>\n\n    <h3>The PACELC Trade-off</h3>\n    <p>If there is a partition (<strong>P</strong>), a distributed system can tradeoff between availability (<strong>A</strong>) and consistency (<strong>C</strong>), else (<strong>E</strong>), when the system is running normally in the absence of partitions, the system can tradeoff between latency (<strong>L</strong>) and consistency (<strong>C</strong>).</p>\n\n    <h3>Breaking Down PACELC</h3>\n    <ul>\n      <li><strong>P</strong> - Partition: Network partition occurs</li>\n      <li><strong>A</strong> - Availability: System remains available</li>\n      <li><strong>C</strong> - Consistency: Data consistency across nodes</li>\n      <li><strong>E</strong> - Else: Normal operation (no partitions)</li>\n      <li><strong>L</strong> - Latency: Response time performance</li>\n      <li><strong>C</strong> - Consistency: Data consistency during normal operation</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>Key Insight:</strong> PACELC extends CAP by considering the trade-offs that exist even when the system is operating normally without network partitions.\n    </div>\n  `\n}; ","export const distributedConsensus = {\n  id: 'distributed-consensus',\n  title: 'Distributed Consensus',\n  content: `\n    <h2>Distributed Consensus</h2>\n    <p>Consensus in distributed systems refers to the process by which a group of nodes or processes agree on a single value or sequence of values despite faulty nodes, message delays, and network partitions.</p>\n    \n    <h3>Why Consensus is Important</h3>\n    <ul>\n      <li><strong>Leader Election:</strong> Choosing a coordinator node in distributed systems</li>\n      <li><strong>Distributed Locking:</strong> Ensuring mutual exclusion across nodes</li>\n      <li><strong>Atomic Commit:</strong> Ensuring all nodes commit or abort transactions together</li>\n      <li><strong>State Machine Replication:</strong> Keeping replicas synchronized</li>\n    </ul>\n\n    <h3>Consensus Challenges</h3>\n    <ul>\n      <li><strong>Network Partitions:</strong> Nodes may become isolated from each other</li>\n      <li><strong>Node Failures:</strong> Servers can crash or become unresponsive</li>\n      <li><strong>Message Delays:</strong> Network latency and packet loss</li>\n      <li><strong>Byzantine Failures:</strong> Nodes may behave maliciously or arbitrarily</li>\n    </ul>\n\n    <h3>FLP Impossibility Theorem</h3>\n    <div class=\"info-note\">\n      <strong>📚 Theoretical Foundation:</strong>\n      <p>The Fischer-Lynch-Paterson theorem proves that it's impossible to achieve consensus in an asynchronous distributed system if even one process can fail, even if messages are never lost.</p>\n    </div>\n\n    <h3>Practical Consensus Algorithms</h3>\n    <ul>\n      <li><strong>Paxos:</strong> Classic consensus algorithm, complex but theoretically sound</li>\n      <li><strong>Raft:</strong> Simpler alternative to Paxos, easier to understand and implement</li>\n      <li><strong>PBFT:</strong> Practical Byzantine Fault Tolerance for malicious failures</li>\n      <li><strong>Tendermint:</strong> Byzantine fault-tolerant consensus for blockchain</li>\n    </ul>\n\n    <h3>Consensus Properties</h3>\n    <ul>\n      <li><strong>Agreement:</strong> All correct processes decide on the same value</li>\n      <li><strong>Validity:</strong> If all processes propose the same value, that value is decided</li>\n      <li><strong>Termination:</strong> All correct processes eventually decide on some value</li>\n    </ul>\n\n    <h3>Real-World Applications</h3>\n    <ul>\n      <li><strong>Distributed Databases:</strong> Ensuring consistent replication</li>\n      <li><strong>Blockchain:</strong> Agreeing on the next block</li>\n      <li><strong>Configuration Management:</strong> Consistent system configuration</li>\n      <li><strong>Service Discovery:</strong> Maintaining service registry consistency</li>\n    </ul>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://raft.github.io/\" target=\"_blank\">Raft Consensus Algorithm</a></li>\n        <li><a href=\"https://lamport.azurewebsites.net/pubs/paxos-simple.pdf\" target=\"_blank\">Paxos Made Simple</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const paxosConsensus = {\n  id: 'paxos-consensus',\n  title: 'Paxos Consensus Algorithm',\n  content: `\n    <h2>Paxos Consensus Algorithm</h2>\n    <p>Paxos is a family of protocols for solving consensus in a network of unreliable processors, designed to work even when nodes fail or messages are lost.</p>\n    \n    <h3>Three-Phase Protocol</h3>\n    \n    <h4>Phase 1: Prepare</h4>\n    <ul>\n      <li><strong>Proposer Action:</strong> Selects a proposal number (ballot number) and sends a \"prepare\" message to a majority of acceptors</li>\n      <li><strong>Acceptor Response:</strong> If the proposal number is higher than any previously seen, acceptor promises not to accept lower-numbered proposals</li>\n      <li><strong>Return Value:</strong> Acceptor returns the highest-numbered proposal it has accepted (if any)</li>\n    </ul>\n\n    <h4>Phase 2: Accept</h4>\n    <ul>\n      <li><strong>Proposer Action:</strong> If majority of acceptors respond to prepare, proposer sends \"accept\" message with proposal number and value</li>\n      <li><strong>Value Selection:</strong> Uses the value from the highest-numbered proposal returned in Phase 1, or chooses its own value if none returned</li>\n      <li><strong>Acceptor Response:</strong> Accepts the proposal if it hasn't promised to ignore it</li>\n    </ul>\n\n    <h4>Phase 3: Learn</h4>\n    <ul>\n      <li><strong>Decision:</strong> Once a proposer receives acceptance from a majority of acceptors, the value is considered chosen</li>\n      <li><strong>Notification:</strong> The proposer informs all nodes (learners) of the chosen value</li>\n      <li><strong>Completion:</strong> All nodes learn the consensus result</li>\n    </ul>\n\n    <h3>Key Properties</h3>\n    <ul>\n      <li><strong>Safety:</strong> Only one value can be chosen</li>\n      <li><strong>Liveness:</strong> Some value will eventually be chosen (under certain conditions)</li>\n      <li><strong>Fault Tolerance:</strong> Works as long as a majority of nodes are functioning</li>\n    </ul>\n\n    <h3>Paxos Variants</h3>\n    <ul>\n      <li><strong>Basic Paxos:</strong> Single-value consensus</li>\n      <li><strong>Multi-Paxos:</strong> Sequence of consensus decisions with optimizations</li>\n      <li><strong>Fast Paxos:</strong> Reduces message delays in common cases</li>\n      <li><strong>Flexible Paxos:</strong> Relaxes quorum requirements</li>\n    </ul>\n\n    <h3>Challenges</h3>\n    <ul>\n      <li><strong>Complexity:</strong> Difficult to understand and implement correctly</li>\n      <li><strong>Livelock:</strong> Competing proposers can prevent progress</li>\n      <li><strong>Performance:</strong> Multiple round trips can impact latency</li>\n      <li><strong>Leader Election:</strong> Often needs a separate mechanism to choose a distinguished proposer</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Industry Adoption:</strong>\n      <p>While Paxos is theoretically elegant, many systems use Raft instead due to its simpler design and easier implementation.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://medium.com/designing-distributed-systems/paxos-a-distributed-consensus-algorithm-41946d5d7d9\" target=\"_blank\">Paxos Algorithm Explained</a></li>\n        <li><a href=\"https://www.scylladb.com/glossary/paxos-consensus-algorithm/\" target=\"_blank\">Paxos Consensus Algorithm</a></li>\n        <li><a href=\"https://medium.com/designing-distributed-systems/flexible-paxos-relaxing-the-quorum-constraint-89caec294083\" target=\"_blank\">Flexible Paxos</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const raftConsensus = {\n  id: 'raft-consensus',\n  title: 'Raft Consensus Algorithm',\n  content: `\n    <h2>Raft Consensus Algorithm</h2>\n    <p>Raft is a consensus algorithm designed to be more understandable than Paxos while providing the same guarantees. It's used to manage a replicated log across multiple servers.</p>\n    \n    <h3>Key Design Goals</h3>\n    <ul>\n      <li><strong>Understandability:</strong> Easier to understand and implement than Paxos</li>\n      <li><strong>Equivalence:</strong> Provides same safety and availability guarantees as Paxos</li>\n      <li><strong>Efficiency:</strong> Performs as well as Paxos in practice</li>\n      <li><strong>Decomposition:</strong> Separates leader election, log replication, and safety</li>\n    </ul>\n\n    <h3>Raft Components</h3>\n    \n    <h4>1. Leader Election</h4>\n    <ul>\n      <li><strong>States:</strong> Follower, Candidate, Leader</li>\n      <li><strong>Terms:</strong> Logical clock that increases monotonically</li>\n      <li><strong>Election Process:</strong> Followers become candidates and request votes</li>\n      <li><strong>Majority Rule:</strong> Candidate with majority votes becomes leader</li>\n    </ul>\n\n    <h4>2. Log Replication</h4>\n    <ul>\n      <li><strong>Leader Responsibility:</strong> Accepts client requests and replicates to followers</li>\n      <li><strong>Log Entries:</strong> Each entry contains command, term, and index</li>\n      <li><strong>Consistency:</strong> Leader ensures followers have identical logs</li>\n      <li><strong>Commitment:</strong> Entry is committed when stored on majority of servers</li>\n    </ul>\n\n    <h4>3. Safety Properties</h4>\n    <ul>\n      <li><strong>Election Safety:</strong> At most one leader per term</li>\n      <li><strong>Leader Append-Only:</strong> Leader never overwrites or deletes entries</li>\n      <li><strong>Log Matching:</strong> If two logs contain entry with same index and term, they're identical</li>\n      <li><strong>Leader Completeness:</strong> If entry is committed, it will be present in all future leaders</li>\n      <li><strong>State Machine Safety:</strong> If server applies log entry at index, no other server applies different entry at same index</li>\n    </ul>\n\n    <h3>Raft Algorithm Steps</h3>\n    \n    <h4>Normal Operation</h4>\n    <ol>\n      <li><strong>Client Request:</strong> Client sends command to leader</li>\n      <li><strong>Log Entry:</strong> Leader appends entry to its log</li>\n      <li><strong>Replication:</strong> Leader sends AppendEntries RPCs to followers</li>\n      <li><strong>Majority Acknowledgment:</strong> Leader waits for majority to acknowledge</li>\n      <li><strong>Commit:</strong> Leader commits entry and applies to state machine</li>\n      <li><strong>Response:</strong> Leader responds to client</li>\n      <li><strong>Propagation:</strong> Leader notifies followers of commitment in next AppendEntries</li>\n    </ol>\n\n    <h4>Leader Failure</h4>\n    <ol>\n      <li><strong>Timeout:</strong> Followers detect leader failure via heartbeat timeout</li>\n      <li><strong>Candidacy:</strong> Follower increments term and becomes candidate</li>\n      <li><strong>Vote Request:</strong> Candidate requests votes from other servers</li>\n      <li><strong>Election:</strong> If majority votes received, candidate becomes leader</li>\n      <li><strong>Recovery:</strong> New leader replicates its log to followers</li>\n    </ol>\n\n    <h3>Advantages over Paxos</h3>\n    <ul>\n      <li><strong>Simplicity:</strong> Easier to understand and implement</li>\n      <li><strong>Strong Leader:</strong> Simplifies log replication</li>\n      <li><strong>Randomized Timeouts:</strong> Reduces election conflicts</li>\n      <li><strong>Membership Changes:</strong> Built-in support for cluster reconfiguration</li>\n    </ul>\n\n    <h3>Real-World Implementations</h3>\n    <ul>\n      <li><strong>etcd:</strong> Kubernetes' key-value store</li>\n      <li><strong>Consul:</strong> HashiCorp's service discovery tool</li>\n      <li><strong>TiKV:</strong> Distributed key-value database</li>\n      <li><strong>CockroachDB:</strong> Distributed SQL database</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Raft's success comes from its understandability - by making the algorithm easier to understand, it's easier to implement correctly and reason about in production systems.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://raft.github.io/\" target=\"_blank\">Raft Consensus Algorithm</a></li>\n        <li><a href=\"https://raft.github.io/raft.pdf\" target=\"_blank\">Original Raft Paper</a></li>\n        <li><a href=\"https://thesecretlivesofdata.com/raft/\" target=\"_blank\">Raft Visualization</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const quorumConcepts = {\n  id: 'quorum-concepts',\n  title: 'Quorum Concepts',\n  content: `\n    <h2>Quorum Concepts in Distributed Systems</h2>\n    <p>A quorum is the minimum number of nodes in a distributed system that must agree on an operation for it to be considered successful. Quorums are fundamental to achieving consistency and availability in distributed systems.</p>\n    \n    <h3>Basic Quorum Definition</h3>\n    <ul>\n      <li><strong>Minimum Agreement:</strong> Smallest number of nodes required to make decisions</li>\n      <li><strong>Majority Rule:</strong> Typically more than half of total nodes (N/2 + 1)</li>\n      <li><strong>Fault Tolerance:</strong> System remains operational despite node failures</li>\n      <li><strong>Consistency Guarantee:</strong> Prevents conflicting decisions</li>\n    </ul>\n\n    <h3>Quorum Mathematics</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>For N total nodes:\n- Simple Majority Quorum: Q = ⌊N/2⌋ + 1\n- Can tolerate: N - Q failures\n\nExamples:\n- 3 nodes: Q = 2, tolerates 1 failure\n- 5 nodes: Q = 3, tolerates 2 failures  \n- 7 nodes: Q = 4, tolerates 3 failures\n\nGeneral rule: To tolerate F failures, need N ≥ 2F + 1 nodes</code></pre>\n    </div>\n\n    <h3>Types of Quorums</h3>\n    \n    <h4>1. Read Quorum (QR)</h4>\n    <ul>\n      <li><strong>Purpose:</strong> Number of nodes that must respond to a read operation</li>\n      <li><strong>Consistency:</strong> Ensures reading most recent data</li>\n      <li><strong>Performance Trade-off:</strong> Higher QR = better consistency, slower reads</li>\n      <li><strong>Typical Values:</strong> 1 (eventual consistency) to N (strong consistency)</li>\n    </ul>\n\n    <h4>2. Write Quorum (QW)</h4>\n    <ul>\n      <li><strong>Purpose:</strong> Number of nodes that must acknowledge a write operation</li>\n      <li><strong>Durability:</strong> Ensures data is persisted on sufficient nodes</li>\n      <li><strong>Performance Trade-off:</strong> Higher QW = better durability, slower writes</li>\n      <li><strong>Typical Values:</strong> 1 (fast writes) to N (maximum durability)</li>\n    </ul>\n\n    <h3>Quorum Consistency Rules</h3>\n    \n    <h4>Strong Consistency Condition</h4>\n    <ul>\n      <li><strong>Formula:</strong> QR + QW > N</li>\n      <li><strong>Guarantee:</strong> Read and write quorums overlap</li>\n      <li><strong>Result:</strong> Reads always see most recent writes</li>\n      <li><strong>Example:</strong> N=5, QR=3, QW=3 (3+3 > 5)</li>\n    </ul>\n\n    <h4>Eventual Consistency</h4>\n    <ul>\n      <li><strong>Formula:</strong> QR + QW ≤ N</li>\n      <li><strong>Behavior:</strong> Reads may not see latest writes immediately</li>\n      <li><strong>Benefit:</strong> Better performance and availability</li>\n      <li><strong>Example:</strong> N=5, QR=1, QW=1 (1+1 ≤ 5)</li>\n    </ul>\n\n    <h3>Common Quorum Configurations</h3>\n    \n    <h4>Configuration Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>N=3 Cluster:\n- (QR=1, QW=3): Fast reads, slow writes, strong consistency\n- (QR=2, QW=2): Balanced, strong consistency  \n- (QR=1, QW=1): Fast operations, eventual consistency\n\nN=5 Cluster:\n- (QR=1, QW=5): Read-optimized, strong consistency\n- (QR=3, QW=3): Balanced, strong consistency\n- (QR=1, QW=3): Write-optimized, strong consistency\n- (QR=1, QW=1): Performance-optimized, eventual consistency</code></pre>\n    </div>\n\n    <h3>Quorum in Different Systems</h3>\n    \n    <h4>Apache Cassandra</h4>\n    <ul>\n      <li><strong>Consistency Levels:</strong> ONE, QUORUM, ALL for reads and writes</li>\n      <li><strong>LOCAL_QUORUM:</strong> Quorum within single data center</li>\n      <li><strong>EACH_QUORUM:</strong> Quorum in each data center</li>\n      <li><strong>Tunable Consistency:</strong> Per-operation consistency levels</li>\n    </ul>\n\n    <h4>Amazon DynamoDB</h4>\n    <ul>\n      <li><strong>Eventually Consistent Reads:</strong> May not reflect recent writes</li>\n      <li><strong>Strongly Consistent Reads:</strong> Returns most up-to-date data</li>\n      <li><strong>Write Consistency:</strong> Writes acknowledged after majority of nodes</li>\n    </ul>\n\n    <h4>MongoDB Replica Sets</h4>\n    <ul>\n      <li><strong>Write Concern:</strong> Majority write concern ensures quorum</li>\n      <li><strong>Read Preference:</strong> Primary, secondary, or majority reads</li>\n      <li><strong>Arbiter Nodes:</strong> Participate in elections but don't store data</li>\n    </ul>\n\n    <h3>Quorum-Based Algorithms</h3>\n    \n    <h4>PBFT (Practical Byzantine Fault Tolerance)</h4>\n    <ul>\n      <li><strong>Requirement:</strong> N ≥ 3F + 1 nodes to tolerate F Byzantine failures</li>\n      <li><strong>Phases:</strong> Pre-prepare, prepare, commit phases with quorums</li>\n      <li><strong>Safety:</strong> Requires 2F + 1 nodes for each phase</li>\n    </ul>\n\n    <h4>Raft Consensus</h4>\n    <ul>\n      <li><strong>Leader Election:</strong> Requires majority votes to become leader</li>\n      <li><strong>Log Replication:</strong> Majority acknowledgment for log entries</li>\n      <li><strong>Safety:</strong> Prevents split-brain scenarios</li>\n    </ul>\n\n    <h3>Advantages of Quorum Systems</h3>\n    <ul>\n      <li><strong>Fault Tolerance:</strong> System continues operating despite failures</li>\n      <li><strong>Consistency Control:</strong> Tunable consistency guarantees</li>\n      <li><strong>Availability:</strong> System available as long as quorum exists</li>\n      <li><strong>Flexibility:</strong> Can optimize for reads, writes, or balance</li>\n    </ul>\n\n    <h3>Challenges and Limitations</h3>\n    <ul>\n      <li><strong>Network Partitions:</strong> Quorum may not be reachable during partitions</li>\n      <li><strong>Performance Impact:</strong> Higher quorums increase latency</li>\n      <li><strong>Resource Usage:</strong> More nodes contacted per operation</li>\n      <li><strong>Configuration Complexity:</strong> Choosing optimal quorum sizes</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Quorum Selection</h4>\n    <ul>\n      <li><strong>Odd Number of Nodes:</strong> Avoid ties in voting scenarios</li>\n      <li><strong>Consider Workload:</strong> Read-heavy vs write-heavy applications</li>\n      <li><strong>Geographic Distribution:</strong> Account for network latency</li>\n      <li><strong>Failure Scenarios:</strong> Plan for expected failure patterns</li>\n    </ul>\n\n    <h4>Monitoring and Operations</h4>\n    <ul>\n      <li><strong>Quorum Health:</strong> Monitor availability of quorum nodes</li>\n      <li><strong>Performance Metrics:</strong> Track read/write latencies</li>\n      <li><strong>Consistency Monitoring:</strong> Detect consistency violations</li>\n      <li><strong>Capacity Planning:</strong> Plan for node additions/removals</li>\n    </ul>\n\n    <h3>Real-World Example</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Cassandra CQL with quorum consistency\nINSERT INTO users (id, name, email) \nVALUES (1, 'John', 'john@example.com')\nUSING CONSISTENCY QUORUM;\n\nSELECT * FROM users WHERE id = 1\nUSING CONSISTENCY QUORUM;</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Quorums provide a mathematical foundation for achieving consistency and fault tolerance in distributed systems. The choice of quorum size directly impacts the CAP theorem trade-offs between consistency, availability, and partition tolerance.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://cassandra.apache.org/doc/latest/architecture/dynamo.html#quorum\" target=\"_blank\">Cassandra Quorum Consistency</a></li>\n        <li><a href=\"https://en.wikipedia.org/wiki/Quorum_(distributed_computing)\" target=\"_blank\">Quorum in Distributed Computing</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const hintedHandoff = {\n  id: 'hinted-handoff',\n  title: 'Hinted Handoff',\n  content: `\n    <h2>Hinted Handoff</h2>\n    <p>Hinted handoff is a technique used in distributed databases to improve write availability during temporary node failures by storing write operations intended for unavailable nodes and replaying them when the nodes recover.</p>\n    \n    <h3>How Hinted Handoff Works</h3>\n    <ul>\n      <li><strong>Normal Operation:</strong> Writes are sent to designated replica nodes</li>\n      <li><strong>Node Failure:</strong> When a replica node is unavailable, coordinator stores a \"hint\"</li>\n      <li><strong>Hint Storage:</strong> Another node temporarily stores the write operation</li>\n      <li><strong>Recovery:</strong> When failed node recovers, hints are replayed to synchronize data</li>\n    </ul>\n\n    <h3>The Hinting Process</h3>\n    \n    <h4>Step-by-Step Flow</h4>\n    <ol>\n      <li><strong>Write Request:</strong> Client sends write to coordinator node</li>\n      <li><strong>Replica Selection:</strong> Coordinator identifies target replica nodes</li>\n      <li><strong>Failure Detection:</strong> One or more replicas are unavailable</li>\n      <li><strong>Hint Creation:</strong> Coordinator creates hint containing write data and target info</li>\n      <li><strong>Hint Storage:</strong> Hint stored on available node (often coordinator itself)</li>\n      <li><strong>Recovery Detection:</strong> Failed node comes back online</li>\n      <li><strong>Hint Replay:</strong> Stored hints are sent to recovered node</li>\n      <li><strong>Synchronization:</strong> Node applies missed writes and becomes consistent</li>\n    </ol>\n\n    <h3>Example Scenario</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Cluster: Nodes A, B, C, D, E\nReplication Factor: 3\nWrite Key: \"user123\"\nTarget Replicas: B, C, D\n\nScenario:\n1. Client writes \"user123\" data to Node A (coordinator)\n2. Node A tries to write to B, C, D\n3. Node C is down/unreachable\n4. Node A successfully writes to B and D\n5. Node A stores hint for Node C: \n   Hint = {target: C, key: \"user123\", data: {...}, timestamp: T1}\n6. When Node C recovers, Node A sends the hint\n7. Node C applies the missed write and becomes consistent</code></pre>\n    </div>\n\n    <h3>Benefits of Hinted Handoff</h3>\n    <ul>\n      <li><strong>Improved Availability:</strong> Writes succeed even when some replicas are down</li>\n      <li><strong>Eventual Consistency:</strong> Ensures all replicas eventually receive all writes</li>\n      <li><strong>Reduced Repair Overhead:</strong> Minimizes data that needs repair mechanisms</li>\n      <li><strong>Faster Recovery:</strong> Nodes catch up quickly when they return online</li>\n    </ul>\n\n    <h3>Implementation Details</h3>\n    \n    <h4>Hint Storage</h4>\n    <ul>\n      <li><strong>Local Storage:</strong> Hints stored on local disk of hinting node</li>\n      <li><strong>Hint Format:</strong> Contains target node, key, value, timestamp, TTL</li>\n      <li><strong>Compression:</strong> Hints may be compressed to save space</li>\n      <li><strong>Batching:</strong> Multiple hints can be batched for efficiency</li>\n    </ul>\n\n    <h4>Hint Management</h4>\n    <ul>\n      <li><strong>TTL (Time To Live):</strong> Hints expire after configured time</li>\n      <li><strong>Size Limits:</strong> Maximum hint storage per node</li>\n      <li><strong>Cleanup:</strong> Expired hints are periodically cleaned up</li>\n      <li><strong>Monitoring:</strong> Track hint queue sizes and replay rates</li>\n    </ul>\n\n    <h3>Cassandra Implementation</h3>\n    \n    <h4>Configuration Parameters</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># cassandra.yaml\nhinted_handoff_enabled: true\nmax_hint_window_in_ms: 10800000  # 3 hours\nhinted_handoff_throttle_in_kb: 1024\nmax_hints_delivery_threads: 2\nhints_directory: /var/lib/cassandra/hints\nhints_flush_period_in_ms: 10000\nmax_hints_file_size_in_mb: 128</code></pre>\n    </div>\n\n    <h4>Hint Replay Process</h4>\n    <ul>\n      <li><strong>Detection:</strong> Gossip protocol detects node recovery</li>\n      <li><strong>Scheduling:</strong> Hint replay scheduled for recovered node</li>\n      <li><strong>Throttling:</strong> Replay rate limited to avoid overwhelming node</li>\n      <li><strong>Verification:</strong> Timestamps ensure hints aren't stale</li>\n    </ul>\n\n    <h3>DynamoDB Implementation</h3>\n    <ul>\n      <li><strong>Automatic:</strong> Hinted handoff handled transparently</li>\n      <li><strong>Sloppy Quorums:</strong> Writes succeed with temporary replicas</li>\n      <li><strong>Anti-entropy:</strong> Background process ensures consistency</li>\n      <li><strong>Merkle Trees:</strong> Used to identify inconsistent data</li>\n    </ul>\n\n    <h3>Limitations and Challenges</h3>\n    \n    <h4>Storage Overhead</h4>\n    <ul>\n      <li><strong>Disk Usage:</strong> Hints consume additional storage space</li>\n      <li><strong>Memory Impact:</strong> Hint metadata kept in memory</li>\n      <li><strong>I/O Overhead:</strong> Additional disk writes for hint storage</li>\n    </ul>\n\n    <h4>Consistency Considerations</h4>\n    <ul>\n      <li><strong>Temporary Inconsistency:</strong> Data temporarily inconsistent across replicas</li>\n      <li><strong>Hint Loss:</strong> If hinting node fails, hints may be lost</li>\n      <li><strong>Ordering Issues:</strong> Hints may be applied out of order</li>\n    </ul>\n\n    <h4>Performance Impact</h4>\n    <ul>\n      <li><strong>Write Latency:</strong> Slight increase due to hint creation</li>\n      <li><strong>Recovery Load:</strong> Node recovery can be I/O intensive</li>\n      <li><strong>Network Traffic:</strong> Additional traffic during hint replay</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Configuration</h4>\n    <ul>\n      <li><strong>Reasonable TTL:</strong> Set hint TTL based on expected downtime</li>\n      <li><strong>Storage Limits:</strong> Configure appropriate hint storage limits</li>\n      <li><strong>Throttling:</strong> Set replay throttling to avoid overwhelming recovering nodes</li>\n    </ul>\n\n    <h4>Monitoring</h4>\n    <ul>\n      <li><strong>Hint Queues:</strong> Monitor hint queue sizes per node</li>\n      <li><strong>Replay Rates:</strong> Track hint replay throughput</li>\n      <li><strong>Storage Usage:</strong> Monitor hint storage consumption</li>\n      <li><strong>Failure Patterns:</strong> Identify frequently failing nodes</li>\n    </ul>\n\n    <h3>Alternatives and Complementary Techniques</h3>\n    \n    <h4>Read Repair</h4>\n    <ul>\n      <li><strong>On-Demand:</strong> Repairs inconsistencies during reads</li>\n      <li><strong>Complementary:</strong> Works alongside hinted handoff</li>\n      <li><strong>Immediate:</strong> Fixes inconsistencies as they're discovered</li>\n    </ul>\n\n    <h4>Anti-Entropy Repair</h4>\n    <ul>\n      <li><strong>Scheduled:</strong> Periodic full repair operations</li>\n      <li><strong>Comprehensive:</strong> Ensures all data is consistent</li>\n      <li><strong>Resource Intensive:</strong> Uses significant network and CPU</li>\n    </ul>\n\n    <h3>Real-World Considerations</h3>\n    <ul>\n      <li><strong>Network Partitions:</strong> Long partitions may exceed hint TTL</li>\n      <li><strong>Cascading Failures:</strong> Multiple node failures can overwhelm hinting</li>\n      <li><strong>Clock Skew:</strong> Time synchronization important for hint ordering</li>\n      <li><strong>Capacity Planning:</strong> Account for hint storage in capacity planning</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Hinted handoff is a crucial technique for maintaining high availability in distributed databases, but it's not a complete solution. It works best in combination with other consistency mechanisms like read repair and anti-entropy processes.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://cassandra.apache.org/doc/latest/operating/hints.html\" target=\"_blank\">Cassandra Hinted Handoff</a></li>\n        <li><a href=\"https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf\" target=\"_blank\">Amazon Dynamo Paper</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const gossipProtocol = {\n  id: 'gossip-protocol',\n  title: 'Gossip Protocol',\n  content: `\n    <h2>Gossip Protocol</h2>\n    <p>Gossip protocol (also known as epidemic protocol) is a decentralized communication protocol used in distributed systems for information dissemination, failure detection, and maintaining cluster membership information.</p>\n    \n    <h3>How Gossip Protocol Works</h3>\n    <ul>\n      <li><strong>Periodic Communication:</strong> Nodes periodically exchange information with randomly selected peers</li>\n      <li><strong>Information Spreading:</strong> Information propagates through the network like spreading rumors</li>\n      <li><strong>Eventual Consistency:</strong> All nodes eventually receive all information</li>\n      <li><strong>Fault Tolerance:</strong> No single point of failure in information dissemination</li>\n    </ul>\n\n    <h3>Basic Gossip Algorithm</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Every T seconds (gossip interval):\n1. Select random subset of nodes (fanout)\n2. Send current state/updates to selected nodes\n3. Receive updates from other nodes\n4. Merge received information with local state\n5. Update local view of cluster state\n\nExample:\n- Node A has update X\n- A gossips to random nodes B, C\n- B and C now have update X\n- B gossips to D, E; C gossips to F, G\n- Information spreads exponentially</code></pre>\n    </div>\n\n    <h3>Types of Gossip Protocols</h3>\n    \n    <h4>1. Anti-Entropy (State Transfer)</h4>\n    <ul>\n      <li><strong>Full State Sharing:</strong> Nodes exchange complete state information</li>\n      <li><strong>Conflict Resolution:</strong> Merge conflicting states using timestamps or version vectors</li>\n      <li><strong>Reliability:</strong> Ensures all nodes eventually have consistent state</li>\n      <li><strong>Overhead:</strong> Higher bandwidth usage due to full state transfer</li>\n    </ul>\n\n    <h4>2. Rumor Mongering (Update Propagation)</h4>\n    <ul>\n      <li><strong>Update Only:</strong> Only new updates/changes are propagated</li>\n      <li><strong>Efficiency:</strong> Lower bandwidth usage</li>\n      <li><strong>Reliability Risk:</strong> Updates might not reach all nodes</li>\n      <li><strong>Typical Use:</strong> Event notification, log replication</li>\n    </ul>\n\n    <h4>3. Hybrid Approach</h4>\n    <ul>\n      <li><strong>Combination:</strong> Uses both anti-entropy and rumor mongering</li>\n      <li><strong>Efficiency:</strong> Rumor mongering for recent updates</li>\n      <li><strong>Consistency:</strong> Anti-entropy for ensuring completeness</li>\n      <li><strong>Common Implementation:</strong> Most production systems use hybrid</li>\n    </ul>\n\n    <h3>Key Parameters</h3>\n    \n    <h4>Gossip Interval</h4>\n    <ul>\n      <li><strong>Definition:</strong> Time between gossip rounds</li>\n      <li><strong>Trade-off:</strong> Shorter interval = faster convergence, higher overhead</li>\n      <li><strong>Typical Values:</strong> 1-10 seconds</li>\n    </ul>\n\n    <h4>Fanout Factor</h4>\n    <ul>\n      <li><strong>Definition:</strong> Number of nodes contacted per gossip round</li>\n      <li><strong>Impact:</strong> Higher fanout = faster spreading, more network traffic</li>\n      <li><strong>Optimal Value:</strong> Usually 3-5 for good balance</li>\n    </ul>\n\n    <h4>Message TTL (Time To Live)</h4>\n    <ul>\n      <li><strong>Purpose:</strong> Prevents infinite message circulation</li>\n      <li><strong>Implementation:</strong> Hop count or timestamp-based expiration</li>\n      <li><strong>Tuning:</strong> Based on cluster size and network diameter</li>\n    </ul>\n\n    <h3>Applications in Distributed Systems</h3>\n    \n    <h4>1. Failure Detection</h4>\n    <ul>\n      <li><strong>Heartbeats:</strong> Nodes gossip their heartbeat information</li>\n      <li><strong>Suspicion:</strong> Nodes marked as suspicious if no recent heartbeat</li>\n      <li><strong>Failure Declaration:</strong> Node declared failed after timeout</li>\n      <li><strong>Recovery Detection:</strong> Failed nodes detected when they return</li>\n    </ul>\n\n    <h4>2. Membership Management</h4>\n    <ul>\n      <li><strong>Join Protocol:</strong> New nodes announce membership via gossip</li>\n      <li><strong>Leave Protocol:</strong> Departing nodes broadcast leave messages</li>\n      <li><strong>Member List:</strong> All nodes maintain view of cluster membership</li>\n      <li><strong>Consistency:</strong> Eventually consistent membership view</li>\n    </ul>\n\n    <h4>3. Configuration Propagation</h4>\n    <ul>\n      <li><strong>Settings Distribution:</strong> Spread configuration changes</li>\n      <li><strong>Schema Updates:</strong> Propagate database schema changes</li>\n      <li><strong>Feature Flags:</strong> Distribute feature toggle states</li>\n      <li><strong>Security Updates:</strong> Propagate security policy changes</li>\n    </ul>\n\n    <h3>Real-World Implementations</h3>\n    \n    <h4>Apache Cassandra</h4>\n    <ul>\n      <li><strong>Membership:</strong> Gossip for node join/leave/failure detection</li>\n      <li><strong>Schema:</strong> Database schema changes propagated via gossip</li>\n      <li><strong>Load Information:</strong> Nodes share load statistics</li>\n      <li><strong>Configuration:</strong> gossip_interval_in_ms, phi_convict_threshold</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Cassandra gossip settings\nendpoint_snitch: GossipingPropertyFileSnitch\ngossip_interval_in_ms: 1000\nphi_convict_threshold: 8\nfailure_detector_timeout_in_ms: 60000</code></pre>\n    </div>\n\n    <h4>Amazon DynamoDB</h4>\n    <ul>\n      <li><strong>Membership:</strong> Consistent hashing ring membership</li>\n      <li><strong>Failure Detection:</strong> Node health monitoring</li>\n      <li><strong>Metadata:</strong> Partition assignment information</li>\n    </ul>\n\n    <h4>Consul by HashiCorp</h4>\n    <ul>\n      <li><strong>Service Discovery:</strong> Service registration and health checks</li>\n      <li><strong>Failure Detection:</strong> SWIM protocol (gossip-based)</li>\n      <li><strong>Event System:</strong> Custom event propagation</li>\n    </ul>\n\n    <h4>Apache Kafka</h4>\n    <ul>\n      <li><strong>Cluster Metadata:</strong> Broker membership and topic metadata</li>\n      <li><strong>Controller Election:</strong> Leader election coordination</li>\n      <li><strong>Configuration:</strong> Dynamic configuration updates</li>\n    </ul>\n\n    <h3>Advantages</h3>\n    <ul>\n      <li><strong>Scalability:</strong> Works well with large numbers of nodes</li>\n      <li><strong>Fault Tolerance:</strong> No single point of failure</li>\n      <li><strong>Self-Healing:</strong> Automatically adapts to network changes</li>\n      <li><strong>Simple Implementation:</strong> Relatively easy to implement and understand</li>\n      <li><strong>Robustness:</strong> Tolerates message loss and node failures</li>\n    </ul>\n\n    <h3>Disadvantages</h3>\n    <ul>\n      <li><strong>Eventual Consistency:</strong> Not suitable for strong consistency requirements</li>\n      <li><strong>Network Overhead:</strong> Continuous background communication</li>\n      <li><strong>Convergence Time:</strong> Takes time for information to spread</li>\n      <li><strong>Duplicate Messages:</strong> Same information may be received multiple times</li>\n    </ul>\n\n    <h3>Mathematical Properties</h3>\n    \n    <h4>Convergence Time</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>For a network of N nodes with fanout f:\n- Information spreads exponentially: f^round\n- Rounds to reach all nodes: log_f(N)\n- Time to convergence: log_f(N) × gossip_interval\n\nExample: N=1000 nodes, f=3, interval=1s\n- Rounds needed: log₃(1000) ≈ 6.3 rounds\n- Convergence time: ~7 seconds</code></pre>\n    </div>\n\n    <h4>Reliability</h4>\n    <ul>\n      <li><strong>Message Loss:</strong> Probability of message loss decreases exponentially</li>\n      <li><strong>Node Failures:</strong> System tolerates up to (N-1)/2 simultaneous failures</li>\n      <li><strong>Network Partitions:</strong> Information spreads within each partition</li>\n    </ul>\n\n    <h3>Implementation Considerations</h3>\n    \n    <h4>Message Format</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>GossipMessage {\n    sender_id: NodeID,\n    message_type: enum { HEARTBEAT, MEMBERSHIP, DATA },\n    version: u64,\n    payload: bytes,\n    timestamp: u64,\n    ttl: u32\n}</code></pre>\n    </div>\n\n    <h4>State Management</h4>\n    <ul>\n      <li><strong>Version Vectors:</strong> Track causality and detect conflicts</li>\n      <li><strong>Timestamps:</strong> Last-write-wins conflict resolution</li>\n      <li><strong>Merkle Trees:</strong> Efficient state comparison</li>\n      <li><strong>Bloom Filters:</strong> Efficient duplicate detection</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Configuration Tuning</h4>\n    <ul>\n      <li><strong>Gossip Interval:</strong> Balance between convergence speed and overhead</li>\n      <li><strong>Fanout:</strong> Typically 3-5 for good reliability/efficiency balance</li>\n      <li><strong>Message Size:</strong> Keep messages small to reduce network overhead</li>\n      <li><strong>Compression:</strong> Compress large payloads</li>\n    </ul>\n\n    <h4>Monitoring</h4>\n    <ul>\n      <li><strong>Convergence Time:</strong> Monitor how quickly information spreads</li>\n      <li><strong>Message Rate:</strong> Track gossip message frequency</li>\n      <li><strong>Failed Deliveries:</strong> Monitor message delivery failures</li>\n      <li><strong>Membership Changes:</strong> Track join/leave/failure events</li>\n    </ul>\n\n    <h3>Security Considerations</h3>\n    <ul>\n      <li><strong>Authentication:</strong> Verify sender identity</li>\n      <li><strong>Encryption:</strong> Encrypt sensitive gossip messages</li>\n      <li><strong>Rate Limiting:</strong> Prevent gossip flooding attacks</li>\n      <li><strong>Message Validation:</strong> Validate message content and format</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Gossip protocols excel at disseminating information in large, dynamic distributed systems where eventual consistency is acceptable. They provide excellent fault tolerance and scalability but are not suitable for applications requiring strong consistency guarantees.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://cassandra.apache.org/doc/latest/architecture/gossip.html\" target=\"_blank\">Cassandra Gossip Protocol</a></li>\n        <li><a href=\"https://www.consul.io/docs/architecture/gossip\" target=\"_blank\">Consul Gossip Protocol</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const thunderingHerd = {\n  id: 'thundering-herd-problem',\n  title: 'Thundering Herd Problem',\n  content: `\n    <h2>Thundering Herd Problem</h2>\n    <p>The Thundering Herd Problem can occur in distributed systems when multiple clients or processes simultaneously request the same resource that has recently become available or has been updated. This simultaneous surge of requests can overwhelm the system, leading to increased latency, resource contention, and potentially system instability.</p>\n\n    <h3>What is Thundering Herd?</h3>\n    <p><strong>Thundering Herd means a sudden surge of activity or requests directed at a resource or a system.</strong></p>\n\n    <h3>Common Scenarios</h3>\n    \n    <h4>Cache Invalidation</h4>\n    <ul>\n      <li>When a popular cached item expires, multiple clients simultaneously try to fetch and rebuild the cache</li>\n      <li>All requests hit the backend database or service at once</li>\n      <li>Can cause database overload and cascading failures</li>\n    </ul>\n\n    <h4>Service Restart</h4>\n    <ul>\n      <li>When a service comes back online after downtime</li>\n      <li>All waiting clients immediately reconnect</li>\n      <li>Connection surge can overwhelm the newly started service</li>\n    </ul>\n\n    <h4>Lock Release</h4>\n    <ul>\n      <li>When a distributed lock is released</li>\n      <li>Multiple waiting processes compete for the lock simultaneously</li>\n      <li>Can cause CPU spikes and contention</li>\n    </ul>\n\n    <h3>Mitigation Strategies</h3>\n    \n    <h4>1. Jittered Backoff</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Add random delay to prevent simultaneous requests\nimport random\nimport time\n\ndef jittered_retry(base_delay=1.0, max_jitter=0.5):\n    \"\"\"Add randomness to retry delays\"\"\"\n    jitter = random.uniform(0, max_jitter)\n    delay = base_delay + jitter\n    time.sleep(delay)\n    \n# Example usage\nfor attempt in range(max_retries):\n    try:\n        result = fetch_resource()\n        break\n    except ResourceUnavailable:\n        jittered_retry(base_delay=2**attempt)</code></pre>\n    </div>\n\n    <h4>2. Request Coalescing</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Combine multiple requests for the same resource\nclass RequestCoalescer:\n    def __init__(self):\n        self.pending_requests = {}\n        self.locks = {}\n    \n    async def get_resource(self, key):\n        # If request already pending, wait for it\n        if key in self.pending_requests:\n            return await self.pending_requests[key]\n        \n        # Create new request promise\n        future = asyncio.Future()\n        self.pending_requests[key] = future\n        \n        try:\n            # Only one request actually fetches\n            result = await fetch_from_backend(key)\n            future.set_result(result)\n            return result\n        finally:\n            del self.pending_requests[key]</code></pre>\n    </div>\n\n    <h4>3. Probabilistic Early Expiration</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Refresh cache before actual expiration\ndef should_refresh_cache(ttl, elapsed_time, beta=1.0):\n    \"\"\"\n    Probabilistically determine if cache should be refreshed\n    based on XFetch algorithm\n    \"\"\"\n    import math\n    import random\n    \n    # Calculate probability of refresh\n    remaining_ttl = ttl - elapsed_time\n    if remaining_ttl <= 0:\n        return True\n    \n    # Probability increases as we approach expiration\n    probability = 1 - math.exp(-elapsed_time * beta / ttl)\n    return random.random() < probability\n\n# Usage in cache implementation\nclass ProbabilisticCache:\n    def get(self, key):\n        entry = self.cache.get(key)\n        if not entry:\n            return None\n            \n        elapsed = time.time() - entry.timestamp\n        if should_refresh_cache(entry.ttl, elapsed):\n            # Refresh in background\n            asyncio.create_task(self.refresh_entry(key))\n            \n        return entry.value</code></pre>\n    </div>\n\n    <h4>4. Circuit Breaker Pattern</h4>\n    <ul>\n      <li>Detect when backend is overwhelmed</li>\n      <li>Fail fast instead of adding more load</li>\n      <li>Gradually allow requests through when system recovers</li>\n    </ul>\n\n    <h4>5. Rate Limiting</h4>\n    <ul>\n      <li>Limit the number of requests per time window</li>\n      <li>Use token bucket or sliding window algorithms</li>\n      <li>Prevent any single event from triggering too many requests</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Facebook's Thundering Herd Solution</h4>\n    <ul>\n      <li>Uses \"Lease\" mechanism for cache updates</li>\n      <li>Only one client gets a lease to update cache</li>\n      <li>Other clients wait for the lease holder to complete</li>\n    </ul>\n\n    <h4>Netflix's Approach</h4>\n    <ul>\n      <li>Request collapsing at multiple layers</li>\n      <li>Hystrix circuit breakers to prevent cascading failures</li>\n      <li>Adaptive concurrency limits</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Add Randomness:</strong> Use jitter in retry delays and cache expiration</li>\n      <li><strong>Implement Request Deduplication:</strong> Coalesce identical requests</li>\n      <li><strong>Use Gradual Rollouts:</strong> Slowly increase traffic to recovering services</li>\n      <li><strong>Monitor and Alert:</strong> Track request spikes and system load</li>\n      <li><strong>Design for Failure:</strong> Assume thundering herds will happen</li>\n      <li><strong>Test at Scale:</strong> Simulate thundering herd scenarios in testing</li>\n    </ul>\n\n    <h3>Related Concepts</h3>\n    <ul>\n      <li><strong>Cache Stampede:</strong> Specific case of thundering herd for cache systems</li>\n      <li><strong>Connection Storms:</strong> Thundering herd for network connections</li>\n      <li><strong>Retry Storms:</strong> Cascading retries causing additional load</li>\n      <li><strong>Cold Start Problem:</strong> Related issue when systems start without warm caches</li>\n    </ul>\n  `\n}; ","export const resourceStarvation = {\n  id: 'resource-starvation',\n  title: 'Resource Starvation',\n  content: `\n    <h2>Resource Starvation</h2>\n    <p>Resource starvation occurs in distributed systems when certain processes or entities are unable to access the resources (CPU, Memory, Network, I/O, Lock etc) they need, leading to degradation or failure of the system.</p>\n\n    <h3>Types of Resources Subject to Starvation</h3>\n    \n    <h4>CPU Starvation</h4>\n    <ul>\n      <li>Low-priority processes never get CPU time</li>\n      <li>High-priority processes monopolize the CPU</li>\n      <li>Can lead to system unresponsiveness</li>\n    </ul>\n\n    <h4>Memory Starvation</h4>\n    <ul>\n      <li>Processes unable to allocate required memory</li>\n      <li>Memory leaks consuming available memory</li>\n      <li>Can trigger out-of-memory errors</li>\n    </ul>\n\n    <h4>Network Starvation</h4>\n    <ul>\n      <li>Bandwidth consumed by heavy users</li>\n      <li>Connection pool exhaustion</li>\n      <li>Network congestion preventing access</li>\n    </ul>\n\n    <h4>I/O Starvation</h4>\n    <ul>\n      <li>Disk I/O bottlenecks</li>\n      <li>File handle exhaustion</li>\n      <li>Database connection starvation</li>\n    </ul>\n\n    <h4>Lock Starvation</h4>\n    <ul>\n      <li>Threads unable to acquire locks</li>\n      <li>Writer starvation in reader-writer locks</li>\n      <li>Priority inversion problems</li>\n    </ul>\n\n    <h3>Common Causes</h3>\n    \n    <h4>Priority Inversion</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Priority Inversion Example\n# Low priority task holds lock needed by high priority task\n\nclass PriorityInversionDemo:\n    def __init__(self):\n        self.resource_lock = threading.Lock()\n        \n    def low_priority_task(self):\n        with self.resource_lock:\n            # Long running operation\n            time.sleep(10)\n            print(\"Low priority task completed\")\n    \n    def high_priority_task(self):\n        # Waits for low priority task\n        with self.resource_lock:\n            print(\"High priority task completed\")\n    \n    def medium_priority_task(self):\n        # CPU intensive task\n        while True:\n            calculate_something()\n            # Prevents low priority from completing\n            # Thus blocking high priority indirectly</code></pre>\n    </div>\n\n    <h4>Unfair Scheduling</h4>\n    <ul>\n      <li>Scheduler bias towards certain processes</li>\n      <li>Lack of fairness mechanisms</li>\n      <li>No aging or priority boost for waiting processes</li>\n    </ul>\n\n    <h4>Resource Leaks</h4>\n    <ul>\n      <li>Memory leaks reducing available memory</li>\n      <li>Connection leaks exhausting pools</li>\n      <li>File descriptor leaks</li>\n    </ul>\n\n    <h3>Detection Methods</h3>\n    \n    <h4>Monitoring Metrics</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Resource Starvation Detection\nclass StarvationDetector:\n    def __init__(self):\n        self.wait_times = defaultdict(list)\n        self.threshold = 30  # seconds\n        \n    def record_wait_time(self, process_id, wait_time):\n        self.wait_times[process_id].append(wait_time)\n        \n        # Check for starvation\n        if wait_time > self.threshold:\n            self.alert_starvation(process_id, wait_time)\n    \n    def detect_patterns(self):\n        for process_id, times in self.wait_times.items():\n            avg_wait = sum(times) / len(times)\n            if avg_wait > self.threshold:\n                print(f\"Process {process_id} experiencing starvation\")\n                print(f\"Average wait time: {avg_wait}s\")\n    \n    def alert_starvation(self, process_id, wait_time):\n        alert = {\n            \"type\": \"RESOURCE_STARVATION\",\n            \"process_id\": process_id,\n            \"wait_time\": wait_time,\n            \"timestamp\": time.time()\n        }\n        send_alert(alert)</code></pre>\n    </div>\n\n    <h3>Prevention Strategies</h3>\n    \n    <h4>Fair Scheduling Algorithms</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Fair Queue Implementation\nclass FairQueue:\n    def __init__(self):\n        self.queues = defaultdict(deque)\n        self.last_served = defaultdict(float)\n        \n    def enqueue(self, client_id, request):\n        self.queues[client_id].append(request)\n    \n    def dequeue(self):\n        # Find client with oldest last_served time\n        if not self.queues:\n            return None\n            \n        # Fair selection based on time since last served\n        now = time.time()\n        selected_client = min(\n            self.queues.keys(),\n            key=lambda c: self.last_served.get(c, 0)\n        )\n        \n        if self.queues[selected_client]:\n            request = self.queues[selected_client].popleft()\n            self.last_served[selected_client] = now\n            return request\n            \n        return None</code></pre>\n    </div>\n\n    <h4>Resource Quotas</h4>\n    <ul>\n      <li>Set per-process resource limits</li>\n      <li>Implement rate limiting</li>\n      <li>Use cgroups for resource isolation</li>\n    </ul>\n\n    <h4>Aging Mechanisms</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Priority Aging to Prevent Starvation\nclass AgingScheduler:\n    def __init__(self, age_increment=1, max_priority=10):\n        self.processes = []\n        self.age_increment = age_increment\n        self.max_priority = max_priority\n        \n    def add_process(self, process):\n        process['age'] = 0\n        process['effective_priority'] = process['priority']\n        self.processes.append(process)\n    \n    def age_processes(self):\n        \"\"\"Increase priority of waiting processes\"\"\"\n        for process in self.processes:\n            if process['state'] == 'waiting':\n                process['age'] += self.age_increment\n                process['effective_priority'] = min(\n                    process['priority'] + process['age'],\n                    self.max_priority\n                )\n    \n    def select_next_process(self):\n        \"\"\"Select highest effective priority process\"\"\"\n        ready_processes = [p for p in self.processes \n                          if p['state'] == 'ready']\n        if not ready_processes:\n            return None\n            \n        selected = max(ready_processes, \n                      key=lambda p: p['effective_priority'])\n        selected['age'] = 0  # Reset age when selected\n        return selected</code></pre>\n    </div>\n\n    <h3>Mitigation Techniques</h3>\n    \n    <h4>Resource Pools with Timeouts</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Connection Pool with Timeout\nclass ResourcePool:\n    def __init__(self, max_size=10, timeout=5):\n        self.resources = Queue(maxsize=max_size)\n        self.timeout = timeout\n        self.waiters = []\n        \n    def acquire(self):\n        start_time = time.time()\n        try:\n            # Try to get resource with timeout\n            resource = self.resources.get(timeout=self.timeout)\n            wait_time = time.time() - start_time\n            \n            # Track wait times for monitoring\n            if wait_time > self.timeout * 0.8:\n                log_warning(f\"Long wait time: {wait_time}s\")\n                \n            return resource\n        except Empty:\n            raise ResourceStarvationError(\n                f\"Could not acquire resource after {self.timeout}s\"\n            )\n    \n    def release(self, resource):\n        try:\n            self.resources.put_nowait(resource)\n        except Full:\n            log_error(\"Resource pool full on release\")</code></pre>\n    </div>\n\n    <h4>Circuit Breakers</h4>\n    <ul>\n      <li>Fail fast when resources are exhausted</li>\n      <li>Prevent cascading starvation</li>\n      <li>Allow system to recover</li>\n    </ul>\n\n    <h4>Backpressure Mechanisms</h4>\n    <ul>\n      <li>Slow down producers when consumers can't keep up</li>\n      <li>Reject requests when at capacity</li>\n      <li>Provide feedback to upstream systems</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Database Connection Starvation</h4>\n    <ul>\n      <li>Long-running queries holding connections</li>\n      <li>Connection pool exhaustion</li>\n      <li>Solution: Connection timeouts and query optimization</li>\n    </ul>\n\n    <h4>Thread Pool Starvation</h4>\n    <ul>\n      <li>All threads blocked on I/O</li>\n      <li>No threads available for new requests</li>\n      <li>Solution: Separate I/O and compute thread pools</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Monitor Resource Usage:</strong> Track utilization and wait times</li>\n      <li><strong>Set Resource Limits:</strong> Prevent any single entity from monopolizing resources</li>\n      <li><strong>Implement Fairness:</strong> Use fair queuing and scheduling algorithms</li>\n      <li><strong>Use Timeouts:</strong> Prevent indefinite waiting</li>\n      <li><strong>Design for Graceful Degradation:</strong> Handle resource exhaustion gracefully</li>\n      <li><strong>Test Under Load:</strong> Identify starvation scenarios before production</li>\n      <li><strong>Document Resource Requirements:</strong> Know what resources each component needs</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://stackoverflow.com/questions/1162587/what-is-starvation\" target=\"_blank\">What is Starvation - Stack Overflow</a></li>\n    </ul>\n  `\n}; ","export const vectorClocks = {\n  id: 'vector-clocks',\n  title: 'Vector Clocks',\n  content: `\n    <h2>Vector Clocks</h2>\n    <p>Vector clocks are a mechanism for generating a partial ordering of events in a distributed system and detecting causality violations. They provide a way to determine the causal relationship between events across different processes.</p>\n    \n    <h3>What are Vector Clocks?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Data structure that captures causality information in distributed systems</li>\n      <li><strong>Purpose:</strong> Determine if events are causally related or concurrent</li>\n      <li><strong>Structure:</strong> Array/vector where each element represents logical time of a process</li>\n      <li><strong>Ordering:</strong> Provides partial ordering of events across processes</li>\n    </ul>\n\n    <h3>How Vector Clocks Work</h3>\n    \n    <h4>Basic Principles</h4>\n    <ul>\n      <li><strong>Each Process:</strong> Maintains its own vector clock</li>\n      <li><strong>Vector Size:</strong> Equal to the number of processes in the system</li>\n      <li><strong>Index Mapping:</strong> Each index corresponds to a specific process</li>\n      <li><strong>Clock Updates:</strong> Updated on local events and message passing</li>\n    </ul>\n\n    <h4>Vector Clock Rules</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Vector Clock Update Rules:\n\n1. Initialization:\n   - Each process Pi initializes VC[i] = [0, 0, ..., 0]\n   - VC[i][i] represents Pi's logical time\n\n2. Local Event:\n   - When Pi performs local event: VC[i][i] = VC[i][i] + 1\n\n3. Send Message:\n   - Before sending message: VC[i][i] = VC[i][i] + 1\n   - Attach current VC[i] to the message\n\n4. Receive Message:\n   - When Pi receives message with VC_msg:\n   - For all j: VC[i][j] = max(VC[i][j], VC_msg[j])\n   - Then: VC[i][i] = VC[i][i] + 1</code></pre>\n    </div>\n\n    <h3>Implementation Example</h3>\n    \n    <h4>Vector Clock Class</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class VectorClock {\n    private int[] clock;\n    private int processId;\n    private int numProcesses;\n    \n    public VectorClock(int processId, int numProcesses) {\n        this.processId = processId;\n        this.numProcesses = numProcesses;\n        this.clock = new int[numProcesses];\n        Arrays.fill(clock, 0);\n    }\n    \n    // Handle local event\n    public void tick() {\n        clock[processId]++;\n    }\n    \n    // Prepare message with current timestamp\n    public VectorClock sendEvent() {\n        tick();\n        return new VectorClock(this);\n    }\n    \n    // Handle received message\n    public void receiveEvent(VectorClock otherClock) {\n        // Update vector clock based on received timestamp\n        for (int i = 0; i < numProcesses; i++) {\n            if (i != processId) {\n                clock[i] = Math.max(clock[i], otherClock.clock[i]);\n            }\n        }\n        // Increment own logical time\n        tick();\n    }\n    \n    // Copy constructor\n    public VectorClock(VectorClock other) {\n        this.processId = other.processId;\n        this.numProcesses = other.numProcesses;\n        this.clock = other.clock.clone();\n    }\n    \n    // Compare vector clocks for causality\n    public Ordering compare(VectorClock other) {\n        boolean thisBeforeOther = true;\n        boolean otherBeforeThis = true;\n        \n        for (int i = 0; i < numProcesses; i++) {\n            if (this.clock[i] > other.clock[i]) {\n                otherBeforeThis = false;\n            }\n            if (this.clock[i] < other.clock[i]) {\n                thisBeforeOther = false;\n            }\n        }\n        \n        if (thisBeforeOther && !otherBeforeThis) {\n            return Ordering.BEFORE;\n        } else if (otherBeforeThis && !thisBeforeOther) {\n            return Ordering.AFTER;\n        } else if (thisBeforeOther && otherBeforeThis) {\n            return Ordering.EQUAL;\n        } else {\n            return Ordering.CONCURRENT;\n        }\n    }\n    \n    public enum Ordering {\n        BEFORE, AFTER, EQUAL, CONCURRENT\n    }\n    \n    @Override\n    public String toString() {\n        return Arrays.toString(clock);\n    }\n}</code></pre>\n    </div>\n\n    <h4>Distributed Process Example</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class DistributedProcess {\n    private VectorClock vectorClock;\n    private int processId;\n    private String processName;\n    \n    public DistributedProcess(int processId, String name, int totalProcesses) {\n        this.processId = processId;\n        this.processName = name;\n        this.vectorClock = new VectorClock(processId, totalProcesses);\n    }\n    \n    // Perform local computation\n    public void performLocalEvent(String eventDescription) {\n        vectorClock.tick();\n        System.out.printf(\"%s: Local event '%s' at %s%n\", \n            processName, eventDescription, vectorClock);\n    }\n    \n    // Send message to another process\n    public Message sendMessage(String content, DistributedProcess recipient) {\n        VectorClock messageTimestamp = vectorClock.sendEvent();\n        Message message = new Message(content, messageTimestamp, \n            processId, recipient.processId);\n        \n        System.out.printf(\"%s: Sending message '%s' to %s at %s%n\",\n            processName, content, recipient.processName, messageTimestamp);\n        \n        return message;\n    }\n    \n    // Receive message from another process\n    public void receiveMessage(Message message) {\n        System.out.printf(\"%s: Received message '%s' with timestamp %s%n\",\n            processName, message.getContent(), message.getTimestamp());\n        \n        vectorClock.receiveEvent(message.getTimestamp());\n        \n        System.out.printf(\"%s: Updated vector clock to %s%n\",\n            processName, vectorClock);\n    }\n    \n    // Check causality between events\n    public void compareTo(DistributedProcess other, String event1, String event2) {\n        VectorClock.Ordering ordering = this.vectorClock.compare(other.vectorClock);\n        \n        System.out.printf(\"Causality: %s (%s) %s %s (%s)%n\",\n            event1, this.vectorClock,\n            ordering.toString().toLowerCase(),\n            event2, other.vectorClock);\n    }\n    \n    public VectorClock getVectorClock() {\n        return vectorClock;\n    }\n}\n\nclass Message {\n    private String content;\n    private VectorClock timestamp;\n    private int senderId;\n    private int recipientId;\n    \n    public Message(String content, VectorClock timestamp, \n                   int senderId, int recipientId) {\n        this.content = content;\n        this.timestamp = timestamp;\n        this.senderId = senderId;\n        this.recipientId = recipientId;\n    }\n    \n    // Getters\n    public String getContent() { return content; }\n    public VectorClock getTimestamp() { return timestamp; }\n    public int getSenderId() { return senderId; }\n    public int getRecipientId() { return recipientId; }\n}</code></pre>\n    </div>\n\n    <h3>Practical Example</h3>\n    \n    <h4>Three-Process System</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class VectorClockDemo {\n    public static void main(String[] args) {\n        // Create three processes\n        DistributedProcess p1 = new DistributedProcess(0, \"P1\", 3);\n        DistributedProcess p2 = new DistributedProcess(1, \"P2\", 3);\n        DistributedProcess p3 = new DistributedProcess(2, \"P3\", 3);\n        \n        System.out.println(\"=== Vector Clock Demo ===\");\n        \n        // P1 performs local event\n        p1.performLocalEvent(\"Initialize database\");\n        // P1: [1, 0, 0]\n        \n        // P2 performs local event  \n        p2.performLocalEvent(\"Start web server\");\n        // P2: [0, 1, 0]\n        \n        // P1 sends message to P2\n        Message msg1 = p1.sendMessage(\"Database ready\", p2);\n        // P1: [2, 0, 0]\n        \n        // P2 receives message from P1\n        p2.receiveMessage(msg1);\n        // P2: [2, 2, 0]\n        \n        // P2 sends message to P3\n        Message msg2 = p2.sendMessage(\"System ready\", p3);\n        // P2: [2, 3, 0]\n        \n        // P3 receives message from P2\n        p3.receiveMessage(msg2);\n        // P3: [2, 3, 1]\n        \n        // P3 performs local event\n        p3.performLocalEvent(\"Process request\");\n        // P3: [2, 3, 2]\n        \n        // P1 performs another local event\n        p1.performLocalEvent(\"Backup database\");\n        // P1: [3, 0, 0]\n        \n        System.out.println(\"\\n=== Causality Analysis ===\");\n        \n        // Analyze causality relationships\n        analyzeCausality(p1, p2, \"P1 backup\", \"P2 after receiving msg\");\n        analyzeCausality(p2, p3, \"P2 send to P3\", \"P3 process request\");\n        analyzeCausality(p1, p3, \"P1 backup\", \"P3 process request\");\n    }\n    \n    private static void analyzeCausality(DistributedProcess p1, \n                                       DistributedProcess p2,\n                                       String event1, String event2) {\n        VectorClock.Ordering ordering = p1.getVectorClock()\n            .compare(p2.getVectorClock());\n        \n        System.out.printf(\"%s %s %s%n\", \n            event1, orderingToString(ordering), event2);\n    }\n    \n    private static String orderingToString(VectorClock.Ordering ordering) {\n        switch (ordering) {\n            case BEFORE: return \"happened before\";\n            case AFTER: return \"happened after\";\n            case EQUAL: return \"is equal to\";\n            case CONCURRENT: return \"is concurrent with\";\n            default: return \"unknown relation to\";\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Vector Clock Properties</h3>\n    \n    <h4>Causality Detection</h4>\n    <ul>\n      <li><strong>Happens-Before:</strong> VC1 < VC2 if VC1[i] ≤ VC2[i] for all i, and VC1[j] < VC2[j] for some j</li>\n      <li><strong>Concurrent Events:</strong> Neither VC1 < VC2 nor VC2 < VC1</li>\n      <li><strong>Causal Consistency:</strong> All causally related events are ordered</li>\n      <li><strong>Partial Ordering:</strong> Not all events can be ordered</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Accurate Causality:</strong> Captures true causal relationships</li>\n      <li><strong>No False Positives:</strong> Concurrent events are correctly identified</li>\n      <li><strong>Distributed:</strong> No central coordination required</li>\n      <li><strong>Consistent:</strong> Provides consistent view across processes</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Space Overhead:</strong> O(n) space where n is number of processes</li>\n      <li><strong>Message Overhead:</strong> Each message carries full vector</li>\n      <li><strong>Scalability:</strong> Grows linearly with number of processes</li>\n      <li><strong>Dynamic Systems:</strong> Difficult to handle process failures/joins</li>\n    </ul>\n\n    <h3>Applications</h3>\n    \n    <h4>1. Distributed Debugging</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class DistributedDebugger {\n    private VectorClock currentTime;\n    private List<DebugEvent> eventLog;\n    \n    public void logEvent(String eventType, String description) {\n        currentTime.tick();\n        DebugEvent event = new DebugEvent(\n            eventType, description, \n            new VectorClock(currentTime)\n        );\n        eventLog.add(event);\n    }\n    \n    public void analyzeEventOrdering() {\n        for (int i = 0; i < eventLog.size(); i++) {\n            for (int j = i + 1; j < eventLog.size(); j++) {\n                DebugEvent event1 = eventLog.get(i);\n                DebugEvent event2 = eventLog.get(j);\n                \n                VectorClock.Ordering ordering = \n                    event1.getTimestamp().compare(event2.getTimestamp());\n                \n                if (ordering == VectorClock.Ordering.CONCURRENT) {\n                    System.out.printf(\"Potential race condition: %s || %s%n\",\n                        event1.getDescription(), event2.getDescription());\n                }\n            }\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Consistent Snapshots</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class ConsistentSnapshot {\n    private Map<Integer, VectorClock> processStates;\n    \n    public boolean isConsistentSnapshot() {\n        // Check if snapshot satisfies consistency condition\n        for (Map.Entry<Integer, VectorClock> entry1 : processStates.entrySet()) {\n            for (Map.Entry<Integer, VectorClock> entry2 : processStates.entrySet()) {\n                if (!entry1.getKey().equals(entry2.getKey())) {\n                    VectorClock vc1 = entry1.getValue();\n                    VectorClock vc2 = entry2.getValue();\n                    \n                    // Check consistency condition\n                    if (vc1.compare(vc2) == VectorClock.Ordering.AFTER) {\n                        // If vc1 > vc2, then all events causally before\n                        // vc1 should be included in the snapshot\n                        if (!allCausalPredecessorsIncluded(vc1)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    \n    private boolean allCausalPredecessorsIncluded(VectorClock vc) {\n        // Implementation depends on specific requirements\n        return true;\n    }\n}</code></pre>\n    </div>\n\n    <h3>Optimizations</h3>\n    \n    <h4>1. Sparse Vector Clocks</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Only store non-zero entries\npublic class SparseVectorClock {\n    private Map<Integer, Integer> clock;\n    private int processId;\n    \n    public SparseVectorClock(int processId) {\n        this.processId = processId;\n        this.clock = new HashMap<>();\n        clock.put(processId, 0);\n    }\n    \n    public void tick() {\n        clock.put(processId, clock.get(processId) + 1);\n    }\n    \n    public void update(SparseVectorClock other) {\n        for (Map.Entry<Integer, Integer> entry : other.clock.entrySet()) {\n            int pid = entry.getKey();\n            int time = entry.getValue();\n            \n            if (pid != processId) {\n                clock.put(pid, Math.max(clock.getOrDefault(pid, 0), time));\n            }\n        }\n        tick();\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Bounded Vector Clocks</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Limit vector size for scalability\npublic class BoundedVectorClock {\n    private static final int MAX_SIZE = 64;\n    private Map<Integer, Integer> clock;\n    private int processId;\n    \n    public void addProcess(int pid) {\n        if (clock.size() < MAX_SIZE) {\n            clock.put(pid, 0);\n        } else {\n            // Use approximation strategies\n            compactClock();\n        }\n    }\n    \n    private void compactClock() {\n        // Remove least recently updated entries\n        // or use other approximation strategies\n    }\n}</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Vector clocks provide precise causality tracking but come with overhead that grows with system size. For large-scale systems, consider alternatives like logical clocks or hybrid approaches that balance accuracy with scalability.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Vector_clock\" target=\"_blank\">Vector Clocks - Wikipedia</a></li>\n        <li><a href=\"https://www.cs.rutgers.edu/~pxk/417/notes/clocks/index.html\" target=\"_blank\">Logical Clocks in Distributed Systems</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const merkleTree = {\n  id: 'merkle-tree',\n  title: 'Merkle Tree',\n  content: `\n    <h2>Merkle Tree</h2>\n    <p>A Merkle tree (also known as hash tree) is a binary tree data structure where each leaf node represents a data block and each non-leaf node stores the cryptographic hash of its child nodes. It provides efficient and secure verification of large data structures.</p>\n    \n    <h3>What is a Merkle Tree?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Binary tree where each node contains a cryptographic hash</li>\n      <li><strong>Leaf Nodes:</strong> Contain hashes of data blocks</li>\n      <li><strong>Internal Nodes:</strong> Contain hashes of their child nodes</li>\n      <li><strong>Root Hash:</strong> Single hash representing the entire tree</li>\n    </ul>\n\n    <h3>Structure and Properties</h3>\n    \n    <h4>Tree Construction</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Merkle Tree Construction:\n\n1. Start with data blocks: [D1, D2, D3, D4]\n\n2. Create leaf nodes with hashes:\n   H1 = hash(D1)\n   H2 = hash(D2)  \n   H3 = hash(D3)\n   H4 = hash(D4)\n\n3. Create parent nodes:\n   H12 = hash(H1 + H2)\n   H34 = hash(H3 + H4)\n\n4. Create root node:\n   Root = hash(H12 + H34)\n\nTree Structure:\n        Root\n       /    \\\\\n     H12    H34\n    /  \\\\   /  \\\\\n   H1  H2 H3  H4\n   |   |  |   |\n   D1  D2 D3  D4</code></pre>\n    </div>\n\n    <h4>Key Properties</h4>\n    <ul>\n      <li><strong>Tamper Detection:</strong> Any change in data changes the root hash</li>\n      <li><strong>Efficient Verification:</strong> O(log n) proof size for data integrity</li>\n      <li><strong>Partial Verification:</strong> Can verify individual blocks without downloading entire dataset</li>\n      <li><strong>Immutable:</strong> Once constructed, tree structure represents fixed data state</li>\n    </ul>\n\n    <h3>Implementation</h3>\n    \n    <h4>Basic Merkle Tree Class</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>import java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.*;\n\npublic class MerkleTree {\n    private MerkleNode root;\n    private List<String> dataBlocks;\n    private MessageDigest digest;\n    \n    public MerkleTree(List<String> data) throws NoSuchAlgorithmException {\n        this.dataBlocks = new ArrayList<>(data);\n        this.digest = MessageDigest.getInstance(\"SHA-256\");\n        this.root = buildTree(data);\n    }\n    \n    private MerkleNode buildTree(List<String> data) {\n        if (data.isEmpty()) {\n            return null;\n        }\n        \n        // Create leaf nodes\n        List<MerkleNode> nodes = new ArrayList<>();\n        for (String block : data) {\n            nodes.add(new MerkleNode(hash(block), block));\n        }\n        \n        // Build tree bottom-up\n        while (nodes.size() > 1) {\n            List<MerkleNode> nextLevel = new ArrayList<>();\n            \n            for (int i = 0; i < nodes.size(); i += 2) {\n                MerkleNode left = nodes.get(i);\n                MerkleNode right = (i + 1 < nodes.size()) ? \n                    nodes.get(i + 1) : nodes.get(i); // Duplicate if odd number\n                \n                String combinedHash = hash(left.getHash() + right.getHash());\n                MerkleNode parent = new MerkleNode(combinedHash, null);\n                parent.setLeft(left);\n                parent.setRight(right);\n                \n                nextLevel.add(parent);\n            }\n            \n            nodes = nextLevel;\n        }\n        \n        return nodes.get(0);\n    }\n    \n    private String hash(String data) {\n        digest.reset();\n        byte[] hashBytes = digest.digest(data.getBytes());\n        StringBuilder sb = new StringBuilder();\n        for (byte b : hashBytes) {\n            sb.append(String.format(\"%02x\", b));\n        }\n        return sb.toString();\n    }\n    \n    public String getRootHash() {\n        return root != null ? root.getHash() : null;\n    }\n    \n    // Generate proof for data block at given index\n    public List<String> generateProof(int index) {\n        if (index < 0 || index >= dataBlocks.size()) {\n            throw new IndexOutOfBoundsException(\"Invalid index\");\n        }\n        \n        List<String> proof = new ArrayList<>();\n        generateProofHelper(root, index, dataBlocks.size(), proof);\n        return proof;\n    }\n    \n    private void generateProofHelper(MerkleNode node, int index, \n                                   int totalLeaves, List<String> proof) {\n        if (node.isLeaf()) {\n            return;\n        }\n        \n        int leftSubtreeSize = getLeftSubtreeSize(totalLeaves);\n        \n        if (index < leftSubtreeSize) {\n            // Target is in left subtree, add right sibling to proof\n            proof.add(node.getRight().getHash());\n            generateProofHelper(node.getLeft(), index, \n                              leftSubtreeSize, proof);\n        } else {\n            // Target is in right subtree, add left sibling to proof\n            proof.add(node.getLeft().getHash());\n            generateProofHelper(node.getRight(), index - leftSubtreeSize, \n                              totalLeaves - leftSubtreeSize, proof);\n        }\n    }\n    \n    private int getLeftSubtreeSize(int totalLeaves) {\n        if (totalLeaves == 1) return 1;\n        int powerOf2 = 1;\n        while (powerOf2 < totalLeaves) {\n            powerOf2 *= 2;\n        }\n        return Math.min(powerOf2 / 2, totalLeaves - powerOf2 / 2);\n    }\n    \n    // Verify proof for given data and index\n    public boolean verifyProof(String data, int index, List<String> proof) {\n        String calculatedHash = hash(data);\n        \n        for (String siblingHash : proof) {\n            if (isLeftChild(index)) {\n                calculatedHash = hash(calculatedHash + siblingHash);\n            } else {\n                calculatedHash = hash(siblingHash + calculatedHash);\n            }\n            index = index / 2;\n        }\n        \n        return calculatedHash.equals(getRootHash());\n    }\n    \n    private boolean isLeftChild(int index) {\n        return index % 2 == 0;\n    }\n}\n\nclass MerkleNode {\n    private String hash;\n    private String data;\n    private MerkleNode left;\n    private MerkleNode right;\n    \n    public MerkleNode(String hash, String data) {\n        this.hash = hash;\n        this.data = data;\n    }\n    \n    public boolean isLeaf() {\n        return left == null && right == null;\n    }\n    \n    // Getters and setters\n    public String getHash() { return hash; }\n    public String getData() { return data; }\n    public MerkleNode getLeft() { return left; }\n    public MerkleNode getRight() { return right; }\n    public void setLeft(MerkleNode left) { this.left = left; }\n    public void setRight(MerkleNode right) { this.right = right; }\n}</code></pre>\n    </div>\n\n    <h3>Practical Example</h3>\n    \n    <h4>File Integrity Verification</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class FileIntegrityChecker {\n    private MerkleTree merkleTree;\n    \n    public void createFileSignature(List<String> fileChunks) \n            throws NoSuchAlgorithmException {\n        this.merkleTree = new MerkleTree(fileChunks);\n        System.out.println(\"File signature (root hash): \" + \n                          merkleTree.getRootHash());\n    }\n    \n    public boolean verifyFileChunk(String chunkData, int chunkIndex) {\n        try {\n            // Generate proof for the chunk\n            List<String> proof = merkleTree.generateProof(chunkIndex);\n            \n            // Verify the chunk against the proof\n            boolean isValid = merkleTree.verifyProof(chunkData, chunkIndex, proof);\n            \n            System.out.printf(\"Chunk %d verification: %s%n\", \n                            chunkIndex, isValid ? \"VALID\" : \"INVALID\");\n            \n            return isValid;\n            \n        } catch (Exception e) {\n            System.out.println(\"Verification failed: \" + e.getMessage());\n            return false;\n        }\n    }\n    \n    public static void main(String[] args) throws NoSuchAlgorithmException {\n        // Simulate file chunks\n        List<String> fileChunks = Arrays.asList(\n            \"chunk1: Hello World\",\n            \"chunk2: This is a test\",\n            \"chunk3: Merkle trees are cool\",\n            \"chunk4: Cryptographic verification\"\n        );\n        \n        FileIntegrityChecker checker = new FileIntegrityChecker();\n        checker.createFileSignature(fileChunks);\n        \n        // Verify original chunks\n        System.out.println(\"\\n=== Verifying Original Chunks ===\");\n        for (int i = 0; i < fileChunks.size(); i++) {\n            checker.verifyFileChunk(fileChunks.get(i), i);\n        }\n        \n        // Try to verify tampered chunk\n        System.out.println(\"\\n=== Verifying Tampered Chunk ===\");\n        checker.verifyFileChunk(\"chunk1: Hello World TAMPERED\", 0);\n    }\n}</code></pre>\n    </div>\n\n    <h3>Advanced Features</h3>\n    \n    <h4>Sparse Merkle Tree</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class SparseMerkleTree {\n    private static final String EMPTY_HASH = \"0000000000000000\";\n    private int depth;\n    private Map<String, String> nodes;\n    \n    public SparseMerkleTree(int depth) {\n        this.depth = depth;\n        this.nodes = new HashMap<>();\n        \n        // Pre-compute empty subtree hashes\n        precomputeEmptyHashes();\n    }\n    \n    private void precomputeEmptyHashes() {\n        String currentHash = EMPTY_HASH;\n        nodes.put(getEmptyKey(0), currentHash);\n        \n        for (int level = 1; level <= depth; level++) {\n            currentHash = hash(currentHash + currentHash);\n            nodes.put(getEmptyKey(level), currentHash);\n        }\n    }\n    \n    public void update(String key, String value) {\n        String leafHash = hash(value);\n        updatePath(key, leafHash, depth);\n    }\n    \n    private void updatePath(String key, String value, int level) {\n        if (level == 0) {\n            nodes.put(key, value);\n            return;\n        }\n        \n        String parentKey = getParentKey(key, level);\n        String siblingKey = getSiblingKey(key, level);\n        \n        // Recursively update path to root\n        updatePath(parentKey, value, level - 1);\n        \n        // Update parent hash\n        String leftHash = getNodeHash(getLeftChild(parentKey, level - 1));\n        String rightHash = getNodeHash(getRightChild(parentKey, level - 1));\n        String parentHash = hash(leftHash + rightHash);\n        \n        nodes.put(parentKey, parentHash);\n    }\n    \n    public List<String> generateProof(String key) {\n        List<String> proof = new ArrayList<>();\n        \n        for (int level = depth; level > 0; level--) {\n            String siblingKey = getSiblingKey(key, level);\n            String siblingHash = getNodeHash(siblingKey);\n            proof.add(siblingHash);\n            \n            key = getParentKey(key, level);\n        }\n        \n        return proof;\n    }\n    \n    private String getNodeHash(String key) {\n        return nodes.getOrDefault(key, getEmptyHashForKey(key));\n    }\n    \n    private String getEmptyHashForKey(String key) {\n        int level = getKeyLevel(key);\n        return nodes.get(getEmptyKey(level));\n    }\n    \n    private String getEmptyKey(int level) {\n        return \"EMPTY_\" + level;\n    }\n    \n    // Helper methods for key manipulation\n    private String getParentKey(String key, int level) {\n        return key.substring(0, key.length() - 1);\n    }\n    \n    private String getSiblingKey(String key, int level) {\n        String parent = getParentKey(key, level);\n        char lastBit = key.charAt(key.length() - 1);\n        char siblingBit = (lastBit == '0') ? '1' : '0';\n        return parent + siblingBit;\n    }\n    \n    private String getLeftChild(String key, int level) {\n        return key + \"0\";\n    }\n    \n    private String getRightChild(String key, int level) {\n        return key + \"1\";\n    }\n    \n    private int getKeyLevel(String key) {\n        return depth - key.length();\n    }\n    \n    private String hash(String data) {\n        // Simple hash function for demonstration\n        return Integer.toHexString(data.hashCode());\n    }\n}</code></pre>\n    </div>\n\n    <h3>Applications</h3>\n    \n    <h4>1. Blockchain Technology</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class BlockchainBlock {\n    private String previousHash;\n    private long timestamp;\n    private List<Transaction> transactions;\n    private String merkleRoot;\n    private int nonce;\n    \n    public BlockchainBlock(String previousHash, List<Transaction> transactions) {\n        this.previousHash = previousHash;\n        this.timestamp = System.currentTimeMillis();\n        this.transactions = new ArrayList<>(transactions);\n        this.merkleRoot = calculateMerkleRoot();\n        this.nonce = 0;\n    }\n    \n    private String calculateMerkleRoot() {\n        try {\n            List<String> txHashes = transactions.stream()\n                .map(tx -> tx.getHash())\n                .collect(Collectors.toList());\n            \n            MerkleTree tree = new MerkleTree(txHashes);\n            return tree.getRootHash();\n            \n        } catch (Exception e) {\n            throw new RuntimeException(\"Failed to calculate Merkle root\", e);\n        }\n    }\n    \n    public boolean verifyTransaction(Transaction tx, int index, \n                                   List<String> merkleProof) {\n        try {\n            List<String> txHashes = transactions.stream()\n                .map(t -> t.getHash())\n                .collect(Collectors.toList());\n            \n            MerkleTree tree = new MerkleTree(txHashes);\n            return tree.verifyProof(tx.getHash(), index, merkleProof);\n            \n        } catch (Exception e) {\n            return false;\n        }\n    }\n    \n    // Getters\n    public String getMerkleRoot() { return merkleRoot; }\n    public List<Transaction> getTransactions() { return transactions; }\n}</code></pre>\n    </div>\n\n    <h4>2. Distributed File Systems</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class DistributedFileSystem {\n    private Map<String, MerkleTree> fileTrees;\n    \n    public DistributedFileSystem() {\n        this.fileTrees = new ConcurrentHashMap<>();\n    }\n    \n    public void storeFile(String fileName, List<String> chunks) \n            throws NoSuchAlgorithmException {\n        MerkleTree tree = new MerkleTree(chunks);\n        fileTrees.put(fileName, tree);\n        \n        System.out.printf(\"Stored file '%s' with root hash: %s%n\",\n                         fileName, tree.getRootHash());\n    }\n    \n    public boolean verifyFileChunk(String fileName, String chunkData, \n                                 int chunkIndex) {\n        MerkleTree tree = fileTrees.get(fileName);\n        if (tree == null) {\n            System.out.println(\"File not found: \" + fileName);\n            return false;\n        }\n        \n        try {\n            List<String> proof = tree.generateProof(chunkIndex);\n            boolean isValid = tree.verifyProof(chunkData, chunkIndex, proof);\n            \n            System.out.printf(\"File '%s' chunk %d: %s%n\",\n                            fileName, chunkIndex, \n                            isValid ? \"VERIFIED\" : \"CORRUPTED\");\n            \n            return isValid;\n            \n        } catch (Exception e) {\n            System.out.println(\"Verification error: \" + e.getMessage());\n            return false;\n        }\n    }\n    \n    public String getFileSignature(String fileName) {\n        MerkleTree tree = fileTrees.get(fileName);\n        return tree != null ? tree.getRootHash() : null;\n    }\n    \n    // Efficient file synchronization between nodes\n    public List<Integer> findDifferentChunks(String fileName, \n                                           String remoteRootHash) {\n        MerkleTree localTree = fileTrees.get(fileName);\n        if (localTree == null) {\n            return Collections.emptyList();\n        }\n        \n        String localRootHash = localTree.getRootHash();\n        if (localRootHash.equals(remoteRootHash)) {\n            return Collections.emptyList(); // Files are identical\n        }\n        \n        // In a real implementation, this would use the tree structure\n        // to efficiently identify which chunks differ\n        List<Integer> differentChunks = new ArrayList<>();\n        // ... implementation details ...\n        \n        return differentChunks;\n    }\n}</code></pre>\n    </div>\n\n    <h3>Performance Characteristics</h3>\n    \n    <h4>Time Complexity</h4>\n    <ul>\n      <li><strong>Construction:</strong> O(n) where n is number of data blocks</li>\n      <li><strong>Proof Generation:</strong> O(log n) for any single block</li>\n      <li><strong>Proof Verification:</strong> O(log n) for any single block</li>\n      <li><strong>Root Hash Calculation:</strong> O(n) for complete tree</li>\n    </ul>\n\n    <h4>Space Complexity</h4>\n    <ul>\n      <li><strong>Tree Storage:</strong> O(n) for complete tree</li>\n      <li><strong>Proof Size:</strong> O(log n) hashes per proof</li>\n      <li><strong>Sparse Tree:</strong> O(k) where k is number of non-empty leaves</li>\n    </ul>\n\n    <h3>Optimizations</h3>\n    \n    <h4>Parallel Construction</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class ParallelMerkleTree {\n    private ExecutorService executor;\n    \n    public ParallelMerkleTree() {\n        this.executor = Executors.newFixedThreadPool(\n            Runtime.getRuntime().availableProcessors());\n    }\n    \n    public MerkleNode buildTreeParallel(List<String> data) \n            throws InterruptedException, ExecutionException {\n        \n        List<MerkleNode> currentLevel = data.parallelStream()\n            .map(block -> new MerkleNode(hash(block), block))\n            .collect(Collectors.toList());\n        \n        while (currentLevel.size() > 1) {\n            List<Future<MerkleNode>> futures = new ArrayList<>();\n            \n            for (int i = 0; i < currentLevel.size(); i += 2) {\n                final int index = i;\n                final List<MerkleNode> nodes = currentLevel;\n                \n                Future<MerkleNode> future = executor.submit(() -> {\n                    MerkleNode left = nodes.get(index);\n                    MerkleNode right = (index + 1 < nodes.size()) ? \n                        nodes.get(index + 1) : nodes.get(index);\n                    \n                    String combinedHash = hash(left.getHash() + right.getHash());\n                    MerkleNode parent = new MerkleNode(combinedHash, null);\n                    parent.setLeft(left);\n                    parent.setRight(right);\n                    \n                    return parent;\n                });\n                \n                futures.add(future);\n            }\n            \n            currentLevel = futures.stream()\n                .map(future -> {\n                    try {\n                        return future.get();\n                    } catch (Exception e) {\n                        throw new RuntimeException(e);\n                    }\n                })\n                .collect(Collectors.toList());\n        }\n        \n        return currentLevel.get(0);\n    }\n    \n    public void shutdown() {\n        executor.shutdown();\n    }\n}</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Merkle trees provide an elegant solution for efficient data integrity verification in distributed systems. The logarithmic proof size makes them particularly valuable for blockchain applications and large-scale data verification scenarios.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Merkle_tree\" target=\"_blank\">Merkle Tree - Wikipedia</a></li>\n        <li><a href=\"https://brilliant.org/wiki/merkle-tree/\" target=\"_blank\">Merkle Trees - Brilliant</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const bloomFilter = {\n  id: 'bloom-filter',\n  title: 'Bloom Filter',\n  content: `\n    <h2>Bloom Filter</h2>\n    <p>A Bloom filter is a space-efficient probabilistic data structure designed to test whether an element is a member of a set. It can have false positives but never false negatives, making it useful for applications where approximate membership testing is acceptable.</p>\n    \n    <h3>What is a Bloom Filter?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Probabilistic data structure for set membership testing</li>\n      <li><strong>Space Efficient:</strong> Uses much less memory than storing actual elements</li>\n      <li><strong>False Positives:</strong> May incorrectly report element as present</li>\n      <li><strong>No False Negatives:</strong> Never misses an element that was actually added</li>\n    </ul>\n\n    <h3>How Bloom Filters Work</h3>\n    \n    <h4>Structure</h4>\n    <ul>\n      <li><strong>Bit Array:</strong> Fixed-size array of m bits, initially all set to 0</li>\n      <li><strong>Hash Functions:</strong> k independent hash functions</li>\n      <li><strong>Hash Range:</strong> Each hash function maps elements to [0, m-1]</li>\n      <li><strong>Operations:</strong> Add elements and test membership</li>\n    </ul>\n\n    <h4>Operations</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Bloom Filter Operations:\n\n1. Add Element:\n   - Hash element with all k hash functions\n   - Set bits at all k positions to 1\n   - h1(x), h2(x), ..., hk(x) → set bits[h1(x)] = bits[h2(x)] = ... = 1\n\n2. Test Membership:\n   - Hash element with all k hash functions  \n   - Check if ALL k positions are set to 1\n   - If any bit is 0 → element definitely NOT in set\n   - If all bits are 1 → element MIGHT be in set\n\n3. Cannot Remove Elements:\n   - Removing would affect other elements\n   - Use Counting Bloom Filter for deletions</code></pre>\n    </div>\n\n    <h3>Implementation</h3>\n    \n    <h4>Basic Bloom Filter</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>import java.util.BitSet;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class BloomFilter {\n    private BitSet bitSet;\n    private int size;           // m: size of bit array\n    private int numHashFunctions; // k: number of hash functions\n    private int numElements;    // n: number of elements added\n    \n    public BloomFilter(int expectedElements, double falsePositiveRate) {\n        // Calculate optimal size and number of hash functions\n        this.size = calculateOptimalSize(expectedElements, falsePositiveRate);\n        this.numHashFunctions = calculateOptimalHashFunctions(expectedElements, size);\n        this.bitSet = new BitSet(size);\n        this.numElements = 0;\n        \n        System.out.printf(\"Bloom Filter: size=%d, hash_functions=%d%n\", \n                         size, numHashFunctions);\n    }\n    \n    // Calculate optimal bit array size: m = -n*ln(p) / (ln(2)^2)\n    private int calculateOptimalSize(int n, double p) {\n        return (int) Math.ceil(-n * Math.log(p) / (Math.log(2) * Math.log(2)));\n    }\n    \n    // Calculate optimal number of hash functions: k = (m/n) * ln(2)\n    private int calculateOptimalHashFunctions(int n, int m) {\n        return (int) Math.round((double) m / n * Math.log(2));\n    }\n    \n    // Add element to the filter\n    public void add(String element) {\n        for (int i = 0; i < numHashFunctions; i++) {\n            int hash = hash(element, i);\n            bitSet.set(hash);\n        }\n        numElements++;\n    }\n    \n    // Test if element might be in the set\n    public boolean mightContain(String element) {\n        for (int i = 0; i < numHashFunctions; i++) {\n            int hash = hash(element, i);\n            if (!bitSet.get(hash)) {\n                return false; // Definitely not in set\n            }\n        }\n        return true; // Might be in set\n    }\n    \n    // Generate k different hash values for an element\n    private int hash(String element, int hashNumber) {\n        // Use double hashing: h1(x) + i*h2(x)\n        int hash1 = element.hashCode();\n        int hash2 = hash1 >>> 16; // Use upper bits for second hash\n        \n        int combinedHash = hash1 + hashNumber * hash2;\n        \n        // Ensure positive and within range\n        return Math.abs(combinedHash) % size;\n    }\n    \n    // Calculate current false positive probability\n    public double getCurrentFalsePositiveRate() {\n        double ratio = (double) bitSet.cardinality() / size;\n        return Math.pow(ratio, numHashFunctions);\n    }\n    \n    // Get filter statistics\n    public void printStats() {\n        int setBits = bitSet.cardinality();\n        double fillRatio = (double) setBits / size;\n        double expectedFPR = getCurrentFalsePositiveRate();\n        \n        System.out.println(\"=== Bloom Filter Statistics ===\");\n        System.out.printf(\"Size: %d bits%n\", size);\n        System.out.printf(\"Hash functions: %d%n\", numHashFunctions);\n        System.out.printf(\"Elements added: %d%n\", numElements);\n        System.out.printf(\"Bits set: %d (%.2f%%)%n\", setBits, fillRatio * 100);\n        System.out.printf(\"Expected false positive rate: %.4f%n\", expectedFPR);\n    }\n}</code></pre>\n    </div>\n\n    <h4>Counting Bloom Filter</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class CountingBloomFilter {\n    private int[] counters;\n    private int size;\n    private int numHashFunctions;\n    private int numElements;\n    \n    public CountingBloomFilter(int expectedElements, double falsePositiveRate) {\n        this.size = calculateOptimalSize(expectedElements, falsePositiveRate);\n        this.numHashFunctions = calculateOptimalHashFunctions(expectedElements, size);\n        this.counters = new int[size];\n        this.numElements = 0;\n    }\n    \n    public void add(String element) {\n        for (int i = 0; i < numHashFunctions; i++) {\n            int hash = hash(element, i);\n            counters[hash]++;\n        }\n        numElements++;\n    }\n    \n    public boolean remove(String element) {\n        // First check if element might be present\n        if (!mightContain(element)) {\n            return false; // Element definitely not present\n        }\n        \n        // Decrement counters\n        for (int i = 0; i < numHashFunctions; i++) {\n            int hash = hash(element, i);\n            if (counters[hash] > 0) {\n                counters[hash]--;\n            }\n        }\n        numElements--;\n        return true;\n    }\n    \n    public boolean mightContain(String element) {\n        for (int i = 0; i < numHashFunctions; i++) {\n            int hash = hash(element, i);\n            if (counters[hash] == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    private int hash(String element, int hashNumber) {\n        int hash1 = element.hashCode();\n        int hash2 = hash1 >>> 16;\n        int combinedHash = hash1 + hashNumber * hash2;\n        return Math.abs(combinedHash) % size;\n    }\n    \n    private int calculateOptimalSize(int n, double p) {\n        return (int) Math.ceil(-n * Math.log(p) / (Math.log(2) * Math.log(2)));\n    }\n    \n    private int calculateOptimalHashFunctions(int n, int m) {\n        return (int) Math.round((double) m / n * Math.log(2));\n    }\n}</code></pre>\n    </div>\n\n    <h3>Practical Examples</h3>\n    \n    <h4>Web Crawler URL Deduplication</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class WebCrawler {\n    private BloomFilter visitedUrls;\n    private Set<String> confirmedUrls; // For handling false positives\n    private Queue<String> urlQueue;\n    \n    public WebCrawler(int expectedUrls) {\n        this.visitedUrls = new BloomFilter(expectedUrls, 0.01); // 1% FPR\n        this.confirmedUrls = new HashSet<>();\n        this.urlQueue = new LinkedList<>();\n    }\n    \n    public void addUrl(String url) {\n        if (!hasVisited(url)) {\n            urlQueue.offer(url);\n            System.out.println(\"Added URL to queue: \" + url);\n        } else {\n            System.out.println(\"URL already processed: \" + url);\n        }\n    }\n    \n    private boolean hasVisited(String url) {\n        // First check Bloom filter (fast)\n        if (!visitedUrls.mightContain(url)) {\n            return false; // Definitely not visited\n        }\n        \n        // Bloom filter says \"might be present\", check actual set\n        return confirmedUrls.contains(url);\n    }\n    \n    public String crawlNext() {\n        if (urlQueue.isEmpty()) {\n            return null;\n        }\n        \n        String url = urlQueue.poll();\n        \n        // Mark as visited\n        visitedUrls.add(url);\n        confirmedUrls.add(url);\n        \n        System.out.println(\"Crawling: \" + url);\n        \n        // Simulate discovering new URLs\n        List<String> newUrls = discoverUrls(url);\n        for (String newUrl : newUrls) {\n            addUrl(newUrl);\n        }\n        \n        return url;\n    }\n    \n    private List<String> discoverUrls(String baseUrl) {\n        // Simulate URL discovery\n        List<String> urls = new ArrayList<>();\n        for (int i = 1; i <= 3; i++) {\n            urls.add(baseUrl + \"/page\" + i);\n        }\n        return urls;\n    }\n    \n    public void printCrawlerStats() {\n        System.out.println(\"\\n=== Crawler Statistics ===\");\n        System.out.println(\"URLs in queue: \" + urlQueue.size());\n        System.out.println(\"Confirmed visited URLs: \" + confirmedUrls.size());\n        visitedUrls.printStats();\n    }\n}</code></pre>\n    </div>\n\n    <h4>Database Query Optimization</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class DatabaseQueryOptimizer {\n    private BloomFilter existingKeys;\n    private Database database;\n    \n    public DatabaseQueryOptimizer(Database db, int expectedKeys) {\n        this.database = db;\n        this.existingKeys = new BloomFilter(expectedKeys, 0.05); // 5% FPR\n        \n        // Populate Bloom filter with existing keys\n        initializeBloomFilter();\n    }\n    \n    private void initializeBloomFilter() {\n        System.out.println(\"Initializing Bloom filter with existing keys...\");\n        \n        // In practice, this would scan the database\n        List<String> keys = database.getAllKeys();\n        for (String key : keys) {\n            existingKeys.add(key);\n        }\n        \n        System.out.printf(\"Added %d keys to Bloom filter%n\", keys.size());\n    }\n    \n    public QueryResult optimizedQuery(String key) {\n        long startTime = System.nanoTime();\n        \n        // Fast check with Bloom filter\n        if (!existingKeys.mightContain(key)) {\n            // Key definitely doesn't exist, avoid expensive DB query\n            long duration = System.nanoTime() - startTime;\n            \n            return new QueryResult(null, false, duration, \"Bloom filter skip\");\n        }\n        \n        // Key might exist, perform actual database query\n        String value = database.get(key);\n        long duration = System.nanoTime() - startTime;\n        \n        boolean found = (value != null);\n        String method = found ? \"Database hit\" : \"False positive\";\n        \n        return new QueryResult(value, found, duration, method);\n    }\n    \n    public void addKey(String key, String value) {\n        database.put(key, value);\n        existingKeys.add(key);\n    }\n    \n    // Simulate database operations\n    static class Database {\n        private Map<String, String> data = new HashMap<>();\n        \n        public String get(String key) {\n            // Simulate database latency\n            try {\n                Thread.sleep(1); // 1ms latency\n            } catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n            return data.get(key);\n        }\n        \n        public void put(String key, String value) {\n            data.put(key, value);\n        }\n        \n        public List<String> getAllKeys() {\n            return new ArrayList<>(data.keySet());\n        }\n    }\n    \n    static class QueryResult {\n        public final String value;\n        public final boolean found;\n        public final long durationNanos;\n        public final String method;\n        \n        public QueryResult(String value, boolean found, long duration, String method) {\n            this.value = value;\n            this.found = found;\n            this.durationNanos = duration;\n            this.method = method;\n        }\n        \n        @Override\n        public String toString() {\n            return String.format(\"Result: %s, Found: %s, Time: %.2f μs, Method: %s\",\n                value, found, durationNanos / 1000.0, method);\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Advanced Implementations</h3>\n    \n    <h4>Scalable Bloom Filter</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class ScalableBloomFilter {\n    private List<BloomFilter> filters;\n    private double targetFalsePositiveRate;\n    private int currentCapacity;\n    private int elementsAdded;\n    \n    public ScalableBloomFilter(double targetFPR) {\n        this.filters = new ArrayList<>();\n        this.targetFalsePositiveRate = targetFPR;\n        this.currentCapacity = 1000; // Start small\n        this.elementsAdded = 0;\n        \n        // Create first filter\n        addNewFilter();\n    }\n    \n    private void addNewFilter() {\n        // Each new filter has tighter FPR to maintain overall target\n        double filterFPR = targetFalsePositiveRate / Math.pow(2, filters.size() + 1);\n        BloomFilter newFilter = new BloomFilter(currentCapacity, filterFPR);\n        filters.add(newFilter);\n        \n        System.out.printf(\"Added new filter #%d (capacity: %d, FPR: %.6f)%n\",\n                         filters.size(), currentCapacity, filterFPR);\n        \n        // Double capacity for next filter\n        currentCapacity *= 2;\n    }\n    \n    public void add(String element) {\n        BloomFilter currentFilter = filters.get(filters.size() - 1);\n        \n        // Check if current filter is at capacity\n        if (elementsAdded >= currentCapacity / 2) {\n            addNewFilter();\n            currentFilter = filters.get(filters.size() - 1);\n            elementsAdded = 0;\n        }\n        \n        currentFilter.add(element);\n        elementsAdded++;\n    }\n    \n    public boolean mightContain(String element) {\n        // Check all filters (element could be in any of them)\n        for (BloomFilter filter : filters) {\n            if (filter.mightContain(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    public double getCurrentFalsePositiveRate() {\n        // Calculate combined FPR across all filters\n        double combinedFPR = 0.0;\n        for (BloomFilter filter : filters) {\n            combinedFPR += filter.getCurrentFalsePositiveRate();\n        }\n        return Math.min(combinedFPR, 1.0);\n    }\n    \n    public void printStats() {\n        System.out.println(\"=== Scalable Bloom Filter Statistics ===\");\n        System.out.printf(\"Number of filters: %d%n\", filters.size());\n        System.out.printf(\"Target FPR: %.6f%n\", targetFalsePositiveRate);\n        System.out.printf(\"Current FPR: %.6f%n\", getCurrentFalsePositiveRate());\n        \n        for (int i = 0; i < filters.size(); i++) {\n            System.out.printf(\"Filter %d:%n\", i + 1);\n            filters.get(i).printStats();\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Performance Analysis</h3>\n    \n    <h4>Time Complexity</h4>\n    <ul>\n      <li><strong>Add Operation:</strong> O(k) where k is number of hash functions</li>\n      <li><strong>Lookup Operation:</strong> O(k) where k is number of hash functions</li>\n      <li><strong>Space:</strong> O(m) where m is size of bit array</li>\n      <li><strong>Independent of n:</strong> Performance doesn't degrade with number of elements</li>\n    </ul>\n\n    <h4>False Positive Rate</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Mathematical analysis of false positive rate\npublic class BloomFilterAnalysis {\n    \n    public static void analyzeFalsePositiveRate() {\n        System.out.println(\"=== Bloom Filter False Positive Analysis ===\");\n        \n        int[] elementCounts = {1000, 5000, 10000, 50000};\n        double[] targetFPRs = {0.01, 0.05, 0.1};\n        \n        for (int n : elementCounts) {\n            for (double targetFPR : targetFPRs) {\n                analyzeConfiguration(n, targetFPR);\n            }\n        }\n    }\n    \n    private static void analyzeConfiguration(int n, double targetFPR) {\n        // Calculate optimal parameters\n        int m = (int) Math.ceil(-n * Math.log(targetFPR) / (Math.log(2) * Math.log(2)));\n        int k = (int) Math.round((double) m / n * Math.log(2));\n        \n        // Calculate actual FPR with optimal parameters\n        double actualFPR = Math.pow(1 - Math.exp(-k * (double) n / m), k);\n        \n        // Calculate memory usage\n        double memoryKB = m / 8.0 / 1024.0;\n        \n        System.out.printf(\"n=%d, target_FPR=%.3f: m=%d, k=%d, actual_FPR=%.4f, memory=%.2f KB%n\",\n                         n, targetFPR, m, k, actualFPR, memoryKB);\n    }\n    \n    public static void compareWithHashSet() {\n        System.out.println(\"\\n=== Memory Comparison: Bloom Filter vs HashSet ===\");\n        \n        int[] elementCounts = {1000, 10000, 100000, 1000000};\n        \n        for (int n : elementCounts) {\n            // Bloom filter memory (1% FPR)\n            int m = (int) Math.ceil(-n * Math.log(0.01) / (Math.log(2) * Math.log(2)));\n            double bloomMemoryKB = m / 8.0 / 1024.0;\n            \n            // HashSet memory (assuming 32 bytes per string + overhead)\n            double hashSetMemoryKB = n * 64 / 1024.0; // Conservative estimate\n            \n            double spaceSaving = (1 - bloomMemoryKB / hashSetMemoryKB) * 100;\n            \n            System.out.printf(\"n=%d: Bloom=%.2f KB, HashSet=%.2f KB, Saving=%.1f%%%n\",\n                             n, bloomMemoryKB, hashSetMemoryKB, spaceSaving);\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Use Cases and Applications</h3>\n    \n    <h4>Common Applications</h4>\n    <ul>\n      <li><strong>Web Crawling:</strong> Avoid revisiting URLs</li>\n      <li><strong>Database Systems:</strong> Reduce disk I/O for non-existent keys</li>\n      <li><strong>Caching:</strong> Quick negative cache lookup</li>\n      <li><strong>Network Security:</strong> Malicious URL detection</li>\n      <li><strong>Distributed Systems:</strong> Reduce network calls</li>\n      <li><strong>CDN:</strong> Cache miss reduction</li>\n    </ul>\n\n    <h4>When to Use Bloom Filters</h4>\n    <ul>\n      <li><strong>Large Datasets:</strong> When memory is constrained</li>\n      <li><strong>Acceptable False Positives:</strong> When false positives are tolerable</li>\n      <li><strong>Fast Negative Lookups:</strong> When quick \"definitely not present\" answers are valuable</li>\n      <li><strong>Read-Heavy Workloads:</strong> More lookups than insertions</li>\n    </ul>\n\n    <h4>When NOT to Use Bloom Filters</h4>\n    <ul>\n      <li><strong>Need Exact Results:</strong> When false positives are unacceptable</li>\n      <li><strong>Frequent Deletions:</strong> Standard Bloom filters don't support removal</li>\n      <li><strong>Small Datasets:</strong> Overhead may not be worth it</li>\n      <li><strong>Need Element Retrieval:</strong> Bloom filters only test membership</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Bloom filters excel in scenarios where you need fast, memory-efficient approximate membership testing. They're particularly valuable in distributed systems and databases where avoiding expensive operations (like network calls or disk I/O) for non-existent items provides significant performance benefits.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Bloom_filter\" target=\"_blank\">Bloom Filter - Wikipedia</a></li>\n        <li><a href=\"https://brilliant.org/wiki/bloom-filter/\" target=\"_blank\">Bloom Filters - Brilliant</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const hyperLogLog = {\n  id: 'hyperloglog',\n  title: 'HyperLogLog (HLL)',\n  content: `\n    <h2>HyperLogLog (HLL)</h2>\n    <p>HyperLogLog is a probabilistic data structure used for estimating the number of unique elements in very large datasets or data streams with high accuracy and minimal memory usage.</p>\n\n    <h3>Key Characteristics</h3>\n    <ul>\n      <li><strong>Space Efficient:</strong> Uses only O(log log n) space</li>\n      <li><strong>Probabilistic:</strong> Provides estimates, not exact counts</li>\n      <li><strong>Accuracy:</strong> Typically 2% standard error</li>\n      <li><strong>Scalable:</strong> Can handle billions of unique elements</li>\n      <li><strong>Mergeable:</strong> Multiple HLL structures can be combined</li>\n    </ul>\n\n    <h3>How HyperLogLog Works</h3>\n    \n    <h4>Basic Algorithm Concept</h4>\n    <p>HyperLogLog uses the observation that the cardinality of a multiset of uniformly distributed random numbers can be estimated by calculating the maximum number of leading zeros in the binary representation of each number in the set.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Simplified HyperLogLog concept\ndef count_leading_zeros(hash_value):\n    \"\"\"Count leading zeros in binary representation\"\"\"\n    if hash_value == 0:\n        return 32  # Assuming 32-bit hash\n    \n    count = 0\n    mask = 1 << 31  # Start with leftmost bit\n    \n    while (hash_value & mask) == 0:\n        count += 1\n        mask >>= 1\n    \n    return count\n\n# Example:\n# hash(\"item1\") = 0b00001010... → 4 leading zeros\n# hash(\"item2\") = 0b00000001... → 7 leading zeros\n# hash(\"item3\") = 0b01010101... → 1 leading zero\n\n# Maximum leading zeros observed: 7\n# Estimated cardinality ≈ 2^7 = 128</code></pre>\n    </div>\n\n    <h4>Algorithm Steps</h4>\n    <ol>\n      <li><strong>Hash Function:</strong> Apply a hash function to each element</li>\n      <li><strong>Bucket Selection:</strong> Use first k bits to select one of 2^k buckets</li>\n      <li><strong>Leading Zeros:</strong> Count leading zeros in remaining bits</li>\n      <li><strong>Register Update:</strong> Store maximum leading zeros per bucket</li>\n      <li><strong>Estimation:</strong> Combine all buckets using harmonic mean</li>\n    </ol>\n\n    <h3>Implementation Details</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>class HyperLogLog:\n    def __init__(self, precision=14):\n        \"\"\"\n        Initialize HyperLogLog\n        precision: number of bits for bucket addressing (4-16)\n        \"\"\"\n        self.precision = precision\n        self.m = 2 ** precision  # Number of buckets\n        self.registers = [0] * self.m\n        self.alpha = self._get_alpha(self.m)\n    \n    def _get_alpha(self, m):\n        \"\"\"Get bias correction constant\"\"\"\n        if m == 16:\n            return 0.673\n        elif m == 32:\n            return 0.697\n        elif m == 64:\n            return 0.709\n        else:\n            return 0.7213 / (1 + 1.079 / m)\n    \n    def add(self, item):\n        \"\"\"Add an item to the HLL\"\"\"\n        # Hash the item\n        hash_value = hash(str(item)) & ((1 << 32) - 1)\n        \n        # Use first 'precision' bits for bucket\n        bucket = hash_value >> (32 - self.precision)\n        \n        # Count leading zeros in remaining bits\n        remaining_bits = hash_value & ((1 << (32 - self.precision)) - 1)\n        leading_zeros = self._count_leading_zeros(remaining_bits)\n        \n        # Update register with maximum\n        self.registers[bucket] = max(self.registers[bucket], \n                                     leading_zeros + 1)\n    \n    def estimate_cardinality(self):\n        \"\"\"Estimate the number of unique elements\"\"\"\n        # Calculate raw estimate using harmonic mean\n        raw_estimate = self.alpha * (self.m ** 2) / \\\n                      sum(2 ** (-x) for x in self.registers)\n        \n        # Apply bias correction for different ranges\n        if raw_estimate <= 2.5 * self.m:\n            # Small range correction\n            zeros = self.registers.count(0)\n            if zeros != 0:\n                return self.m * math.log(self.m / zeros)\n        elif raw_estimate <= (1/30) * (1 << 32):\n            # No correction\n            return raw_estimate\n        else:\n            # Large range correction\n            return -1 * (1 << 32) * math.log(1 - raw_estimate / (1 << 32))\n        \n        return raw_estimate</code></pre>\n    </div>\n\n    <h3>Memory Usage</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Precision (p)</th>\n          <th>Buckets (2^p)</th>\n          <th>Memory Usage</th>\n          <th>Standard Error</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>4</td>\n          <td>16</td>\n          <td>12 bytes</td>\n          <td>26%</td>\n        </tr>\n        <tr>\n          <td>8</td>\n          <td>256</td>\n          <td>192 bytes</td>\n          <td>6.5%</td>\n        </tr>\n        <tr>\n          <td>12</td>\n          <td>4096</td>\n          <td>3 KB</td>\n          <td>1.6%</td>\n        </tr>\n        <tr>\n          <td>14</td>\n          <td>16384</td>\n          <td>12 KB</td>\n          <td>0.8%</td>\n        </tr>\n        <tr>\n          <td>16</td>\n          <td>65536</td>\n          <td>48 KB</td>\n          <td>0.4%</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Use Cases and Examples</h3>\n    \n    <h4>1. Counting Unique Visitors</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Website unique visitor counter\nclass UniqueVisitorCounter:\n    def __init__(self):\n        self.hll = HyperLogLog(precision=14)\n    \n    def record_visit(self, user_id):\n        self.hll.add(user_id)\n    \n    def get_unique_visitors(self):\n        return int(self.hll.estimate_cardinality())\n\n# Usage\ncounter = UniqueVisitorCounter()\nfor visitor in website_traffic:\n    counter.record_visit(visitor['user_id'])\n\nprint(f\"Unique visitors: ~{counter.get_unique_visitors()}\")</code></pre>\n    </div>\n\n    <h4>2. Database Query Optimization</h4>\n    <ul>\n      <li>Estimating distinct values in columns</li>\n      <li>Query planning and optimization</li>\n      <li>Approximate COUNT(DISTINCT) queries</li>\n    </ul>\n\n    <h4>3. Network Traffic Analysis</h4>\n    <ul>\n      <li>Counting unique IP addresses</li>\n      <li>DDoS detection</li>\n      <li>Traffic pattern analysis</li>\n    </ul>\n\n    <h4>4. Real-time Analytics</h4>\n    <ul>\n      <li>Stream processing systems</li>\n      <li>Live dashboard metrics</li>\n      <li>Social media analytics</li>\n    </ul>\n\n    <h3>Advantages</h3>\n    <ul>\n      <li><strong>Constant Memory:</strong> Fixed memory regardless of cardinality</li>\n      <li><strong>Fast Updates:</strong> O(1) time complexity for additions</li>\n      <li><strong>Mergeable:</strong> Can combine multiple HLLs</li>\n      <li><strong>No False Negatives:</strong> Never underestimates significantly</li>\n      <li><strong>Tunable Accuracy:</strong> Trade memory for accuracy</li>\n    </ul>\n\n    <h3>Limitations</h3>\n    <ul>\n      <li><strong>Approximate Only:</strong> Cannot get exact counts</li>\n      <li><strong>No Deletion:</strong> Cannot remove elements</li>\n      <li><strong>No Membership Test:</strong> Cannot check if element exists</li>\n      <li><strong>One-way Operation:</strong> Cannot retrieve original elements</li>\n    </ul>\n\n    <h3>Implementations in Practice</h3>\n    \n    <h4>Redis HyperLogLog</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Redis HyperLogLog commands\nPFADD visitors \"user123\"      # Add element\nPFADD visitors \"user456\"      # Add another element\nPFCOUNT visitors              # Get cardinality estimate\n\n# Merge multiple HLLs\nPFMERGE combined visitors_day1 visitors_day2</code></pre>\n    </div>\n\n    <h4>PostgreSQL</h4>\n    <ul>\n      <li>postgresql-hll extension</li>\n      <li>Used for approximate distinct counts</li>\n    </ul>\n\n    <h4>Apache Spark</h4>\n    <ul>\n      <li>approxCountDistinct() function</li>\n      <li>Used in big data analytics</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://stackoverflow.com/a/35219704\" target=\"_blank\">HyperLogLog Explained - Stack Overflow</a></li>\n      <li><a href=\"https://www.waitingforcode.com/big-data-algorithms/hyperloglog-explained/read\" target=\"_blank\">HyperLogLog Algorithm Explained</a></li>\n    </ul>\n  `\n}; ","export const replication = {\n  id: 'replication',\n  title: 'Database Replication',\n  content: `# Database Replication\n\n## Definition\nDatabase replication is the process of copying and maintaining database objects across multiple database servers.\n\n## Types of Replication\n- **Master-Slave**: One write node, multiple read replicas\n- **Master-Master**: Multiple write-capable nodes\n- **Synchronous**: Real-time data consistency\n- **Asynchronous**: Eventual consistency with lag\n\n## Replication Strategies\n- **Statement-Based**: Replicate SQL statements\n- **Row-Based**: Replicate actual data changes\n- **Mixed**: Combination of both approaches\n\n## Benefits\n- High availability\n- Load distribution\n- Disaster recovery\n- Geographic distribution\n- Read scalability\n\n## Challenges\n- Data consistency\n- Replication lag\n- Conflict resolution\n- Network overhead\n- Complexity management\n\n## Interview Questions\n**Q: What is the difference between synchronous and asynchronous replication?**\nA: Synchronous replication ensures immediate consistency but higher latency, while asynchronous allows for better performance but potential data lag.\n\n**Q: How do you handle conflicts in master-master replication?**\nA: Through conflict resolution strategies like last-write-wins, application-level resolution, or vector clocks.`\n}; ","export const consistentHashing = {\n  id: \"consistent-hashing\",\n  title: \"Consistent Hashing\",\n  content: `\n    <h2>Consistent Hashing</h2>\n    <p>Consistent Hashing is a technique used in distributed systems to distribute data across multiple nodes while minimizing the need for data movement when nodes are added or removed from the system.</p>\n\n    <h3>How It Works</h3>\n    <p>The result of applying a hash function to information or data (e.g. hash(data) = digest) is called a message digest or digest, or hash value.</p>\n\n    <p>Whenever the system needs to read or write data, the first step it performs is to apply the hashing algorithm to the key. The output of this hashing algorithm determines within which range the data lies and hence, on which node the data will be stored.</p>\n\n    <h3>Key Concepts</h3>\n    <ul>\n      <li><strong>Coordinator Node:</strong> Each key is assigned to a coordinator node (the node that falls first in the hash range), which first stores the data locally and then replicates it to N−1 clockwise successor nodes on the ring.</li>\n      <li><strong>Virtual Nodes (Vnodes):</strong> Since there can be heterogeneous machines in the clusters, some servers might hold more Vnodes than others.</li>\n      <li><strong>Client Fallback:</strong> If a client cannot contact the coordinator node, it sends the request to a node holding a replica.</li>\n    </ul>\n\n    <h3>Internal Working</h3>\n    <p>The entire hash value produced by a hash function is mapped onto a circular ring. Each server's hash i.e. hash(Node IP address) is positioned on this ring. When hashing a key i.e. hash(key), its resulting hash value is also placed on the ring, and stored to the nearest server or node in the clockwise direction.</p>\n\n    <h3>Implementation Approaches</h3>\n    <ul>\n      <li><strong>Circular Array Ring:</strong> Store the hash range in a sorted array sorted by the start hash value. Use binary search to quickly locate the correct partition for a given hash value.</li>\n      <li><strong>BST:</strong> Use a range query data structure tree like a segment tree.</li>\n      <li><strong>Skip List:</strong> HashMap + DLL</li>\n      <li><strong>Hash Table:</strong> Direct hash table implementation</li>\n    </ul>\n\n    <div class=\"reference-links\">\n      <h4>📚 References</h4>\n      <ul>\n        <li><a href=\"https://www.educative.io/courses/grokking-the-system-design-interview/B81vnyp0GpY\" target=\"_blank\">Grokking System Design - Consistent Hashing</a></li>\n        <li><a href=\"https://www.toptal.com/big-data/consistent-hashing\" target=\"_blank\">Consistent Hashing - Toptal</a></li>\n        <li><a href=\"https://highscalability.com/consistent-hashing-algorithm/\" target=\"_blank\">Consistent Hashing Algorithm</a></li>\n        <li><a href=\"https://github.com/roottraveller/DSAlgo-HowToDoIt-learningcode/tree/master/consistent-hashing-implementation\" target=\"_blank\">Implementation Example</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const loadBalancer = {\n  id: \"load-balancer\",\n  title: \"Load Balancer\",\n  content: `\n    <h2>Load Balancer (LB)</h2>\n    <p>LB is responsible for Traffic Distribution, High Availability, Scalability, Session Persistence, Health Checks, SSL Termination, Content-Based Routing, Rate Limiting, Logging and Monitoring etc.</p>\n\n    <h3>Examples</h3>\n    <ul>\n      <li>HAProxy (High Availability Proxy)</li>\n      <li>Nginx</li>\n      <li>AWS ELB (Elastic Load Balancing)</li>\n      <li>Azure Load Balancer</li>\n      <li>Google Cloud Load Balancing</li>\n    </ul>\n\n    <h3>Health Checks</h3>\n    <p>If a server fails a health check, it is automatically removed from the pool, and traffic will not be forwarded to it until it responds to the health checks again.</p>\n\n    <h3>Types of Load Balancing Technology</h3>\n    <ul>\n      <li><strong>Hardware Load Balancers:</strong> Dedicated physical devices</li>\n      <li><strong>Software Load Balancers:</strong> Software-based solutions</li>\n    </ul>\n\n    <h3>Types of Load Balancer</h3>\n    \n    <h4>Application Load Balancer (L7 Balancer)</h4>\n    <p>Provides advanced routing features and can make routing decisions based on HTTP headers, session information, request/response data, and content. Supports features like SSL termination, content-based routing, and host-based routing. Ideal for modern web applications with complex routing requirements and microservices architectures.</p>\n\n    <h4>Network Load Balancer (L4 Balancer)</h4>\n    <p>Routes traffic based on IP address and port information only.</p>\n\n    <h4>DNS Load Balancer</h4>\n    <p>Distributes traffic across multiple servers using DNS (Domain Name System) resolution. Works by resolving domain names to multiple IP addresses, each corresponding to a different server.</p>\n\n    <h3>Load Balancing Algorithms</h3>\n\n    <h4>Dynamic Load Balancing Algorithms</h4>\n    <ul>\n      <li><strong>Least Connection:</strong> Routes requests to the server with the fewest active connections</li>\n      <li><strong>Weighted Least Connection:</strong> Considers both connection count and server capacity</li>\n      <li><strong>Least Response Time:</strong> Routes to the server with the fastest response time</li>\n      <li><strong>Resource-based:</strong> Routes based on server resource utilization</li>\n      <li><strong>Adaptive Load Balancing:</strong> Adjusts routing based on real-time conditions</li>\n      <li><strong>Dynamic Proximity-based:</strong> Routes based on geographic proximity</li>\n    </ul>\n\n    <h4>Static Load Balancing Algorithms</h4>\n    <ul>\n      <li><strong>Round Robin:</strong> Distributes requests sequentially across servers</li>\n      <li><strong>Weighted Round Robin:</strong> Assigns weights to servers based on their capacity</li>\n      <li><strong>IP Hash:</strong> Uses hash of client IP address to determine server assignment. This ensures that requests from the same client are always routed to the same server, which can be useful for maintaining session state.</li>\n      <li><strong>Static Proximity-based:</strong> Routes based on predefined geographic regions</li>\n      <li><strong>Static Content-based:</strong> Routes based on content type or URL patterns</li>\n    </ul>\n\n    <div class=\"reference-links\">\n      <h4>📚 References</h4>\n      <ul>\n        <li><a href=\"https://www.scaler.com/topics/aws/load-balancing/\" target=\"_blank\">Load Balancing - AWS</a></li>\n        <li><a href=\"https://www.nginx.com/resources/glossary/load-balancing/\" target=\"_blank\">Load Balancing - Nginx</a></li>\n        <li><a href=\"https://blog.bytebytego.com/p/ep47-common-load-balancing-algorithms\" target=\"_blank\">Common Load Balancing Algorithms</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const consistentHashingVsLoadBalancing = {\n  id: \"consistent-hashing-vs-load-balancing\",\n  title: \"Consistent Hashing vs Load Balancing\",\n  content: `\n    <h2>Consistent Hashing vs Load Balancing</h2>\n    <p>Understanding the key differences between consistent hashing and load balancing approaches in distributed systems.</p>\n\n    <h3>Consistent Hashing</h3>\n    <p>Consistent hashing handles the distribution of <strong>data (data partitioning)</strong> across nodes and determines which node is responsible for each piece of data based on a consistent hashing scheme.</p>\n\n    <h4>Key Characteristics:</h4>\n    <ul>\n      <li>Focuses on <strong>data placement</strong> and partitioning</li>\n      <li>Determines which node stores specific data</li>\n      <li>Minimizes data movement when nodes are added/removed</li>\n      <li>Uses hash functions to map data to nodes</li>\n      <li>Primarily used for data distribution in distributed databases</li>\n    </ul>\n\n    <h3>Load Balancing</h3>\n    <p>Load balancing algorithms decide which replica or node should handle a <strong>request</strong> among the replicas based on load balancing algorithms.</p>\n\n    <h4>Key Characteristics:</h4>\n    <ul>\n      <li>Focuses on <strong>request distribution</strong> and traffic management</li>\n      <li>Determines which server handles incoming requests</li>\n      <li>Optimizes resource utilization and response times</li>\n      <li>Uses various algorithms (round-robin, least connections, etc.)</li>\n      <li>Primarily used for traffic distribution in web applications</li>\n    </ul>\n\n    <h3>Key Differences</h3>\n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Consistent Hashing</th>\n          <th>Load Balancing</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Purpose</strong></td>\n          <td>Data partitioning and placement</td>\n          <td>Request distribution and traffic management</td>\n        </tr>\n        <tr>\n          <td><strong>Focus</strong></td>\n          <td>Where to store data</td>\n          <td>Where to send requests</td>\n        </tr>\n        <tr>\n          <td><strong>Scope</strong></td>\n          <td>Data layer</td>\n          <td>Application/Network layer</td>\n        </tr>\n        <tr>\n          <td><strong>Use Case</strong></td>\n          <td>Distributed databases, caching</td>\n          <td>Web servers, API gateways</td>\n        </tr>\n        <tr>\n          <td><strong>Algorithms</strong></td>\n          <td>Hash-based distribution</td>\n          <td>Round-robin, least connections, etc.</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>When to Use Each</h3>\n    \n    <h4>Use Consistent Hashing When:</h4>\n    <ul>\n      <li>Building distributed databases or caches</li>\n      <li>Need to partition data across multiple nodes</li>\n      <li>Want to minimize data movement during scaling</li>\n      <li>Dealing with key-value stores or sharded databases</li>\n    </ul>\n\n    <h4>Use Load Balancing When:</h4>\n    <ul>\n      <li>Distributing incoming requests across servers</li>\n      <li>Need to optimize server resource utilization</li>\n      <li>Want to improve application availability and performance</li>\n      <li>Managing traffic to stateless web services</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>Note:</strong> These approaches are complementary and often used together in large-scale distributed systems. Consistent hashing for data partitioning and load balancing for request distribution.\n    </div>\n  `\n}; ","export const activeActiveVsActivePassive = {\n  id: 'active-active-vs-active-passive',\n  title: 'Active-Active vs Active-Passive',\n  content: `\n    <h2>Active-Active vs Active-Passive (Hot/Cold) Setup</h2>\n    <p>Multi-node architectures are fundamental patterns for achieving high availability, fault tolerance, and scalability in distributed systems. The choice between active-active and active-passive configurations significantly impacts system performance, complexity, and resource utilization.</p>\n\n    <h3>Active-Active Configuration</h3>\n    <p>In an active-active configuration, all servers or resources in the system are actively serving traffic and processing requests simultaneously.</p>\n    \n    <h4>Characteristics</h4>\n    <ul>\n      <li><strong>All nodes active:</strong> Every server handles production traffic</li>\n      <li><strong>Load distribution:</strong> Traffic is distributed across all nodes</li>\n      <li><strong>Resource utilization:</strong> Maximum use of available resources</li>\n      <li><strong>No idle capacity:</strong> All servers contribute to processing</li>\n      <li><strong>Symmetric design:</strong> All nodes have equal capabilities</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Higher throughput:</strong> All resources actively process requests</li>\n      <li><strong>Better resource utilization:</strong> No idle servers</li>\n      <li><strong>Instant failover:</strong> Other nodes already handling traffic</li>\n      <li><strong>Load balancing:</strong> Distributes workload evenly</li>\n      <li><strong>Scalability:</strong> Easy to add more active nodes</li>\n    </ul>\n\n    <h4>Challenges</h4>\n    <ul>\n      <li><strong>Data consistency:</strong> Synchronization across active nodes</li>\n      <li><strong>Conflict resolution:</strong> Handling concurrent updates</li>\n      <li><strong>Complexity:</strong> More complex to implement and maintain</li>\n      <li><strong>Split-brain scenarios:</strong> Network partitions can cause issues</li>\n      <li><strong>Higher cost:</strong> All nodes need full capacity</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Active-Active Architecture\n┌─────────────┐     ┌─────────────┐     ┌─────────────┐\n│   Node A    │     │   Node B    │     │   Node C    │\n│  (Active)   │     │  (Active)   │     │  (Active)   │\n│  33% Load   │     │  33% Load   │     │  33% Load   │\n└──────┬──────┘     └──────┬──────┘     └──────┬──────┘\n       │                   │                   │\n       └───────────────────┴───────────────────┘\n                          │\n                   Load Balancer\n                          │\n                      Clients\n\n// Configuration Example (HAProxy)\nbackend web_servers\n    balance roundrobin\n    server web1 192.168.1.10:80 check\n    server web2 192.168.1.11:80 check\n    server web3 192.168.1.12:80 check</code></pre>\n    </div>\n\n    <h3>Active-Passive Configuration</h3>\n    <p>In an active-passive configuration, one server (or a group of servers) is designated as active (hot), while the remaining servers are passive (cold) or standby. When an active or hot server goes down, one of the passive or cold servers elects itself as a hot server.</p>\n    \n    <h4>Characteristics</h4>\n    <ul>\n      <li><strong>Primary/Secondary model:</strong> One active, others standby</li>\n      <li><strong>Idle resources:</strong> Passive nodes wait for failover</li>\n      <li><strong>Automatic failover:</strong> Passive becomes active on failure</li>\n      <li><strong>Data replication:</strong> Continuous sync to passive nodes</li>\n      <li><strong>Health monitoring:</strong> Constant checking of active node</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Simpler implementation:</strong> No complex synchronization</li>\n      <li><strong>Data consistency:</strong> Single source of truth</li>\n      <li><strong>Predictable performance:</strong> Known capacity</li>\n      <li><strong>Easier troubleshooting:</strong> Single active path</li>\n      <li><strong>Lower complexity:</strong> Simpler architecture</li>\n    </ul>\n\n    <h4>Challenges</h4>\n    <ul>\n      <li><strong>Resource waste:</strong> Passive nodes are idle</li>\n      <li><strong>Failover time:</strong> Takes time to activate passive node</li>\n      <li><strong>Single point of processing:</strong> Limited by active node capacity</li>\n      <li><strong>Cost inefficiency:</strong> Paying for idle resources</li>\n      <li><strong>Scaling limitations:</strong> Can't distribute load</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Active-Passive Architecture\n┌─────────────┐     ┌─────────────┐     ┌─────────────┐\n│   Node A    │     │   Node B    │     │   Node C    │\n│  (Active)   │     │  (Passive)  │     │  (Passive)  │\n│  100% Load  │     │   Standby   │     │   Standby   │\n└──────┬──────┘     └─────────────┘     └─────────────┘\n       │                   ↑                     ↑\n       │                   └──────Replication────┘\n       │\n   Load Balancer\n       │\n    Clients\n\n// Failover Process\n1. Active node fails\n2. Health check detects failure\n3. Passive node promoted to active\n4. DNS/Load balancer updated\n5. Traffic redirected to new active</code></pre>\n    </div>\n\n    <h3>Comparison Table</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Active-Active</th>\n          <th>Active-Passive</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Resource Utilization</td>\n          <td>High (all nodes active)</td>\n          <td>Low (passive nodes idle)</td>\n        </tr>\n        <tr>\n          <td>Throughput</td>\n          <td>High (distributed load)</td>\n          <td>Limited to active node</td>\n        </tr>\n        <tr>\n          <td>Failover Time</td>\n          <td>Instant (already active)</td>\n          <td>Minutes (activation needed)</td>\n        </tr>\n        <tr>\n          <td>Complexity</td>\n          <td>High</td>\n          <td>Low</td>\n        </tr>\n        <tr>\n          <td>Data Consistency</td>\n          <td>Complex (multi-master)</td>\n          <td>Simple (single master)</td>\n        </tr>\n        <tr>\n          <td>Cost Efficiency</td>\n          <td>Better (using all resources)</td>\n          <td>Worse (idle resources)</td>\n        </tr>\n        <tr>\n          <td>Scalability</td>\n          <td>Excellent</td>\n          <td>Limited</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Implementation Examples</h3>\n    \n    <h4>Active-Active Implementations</h4>\n    <ul>\n      <li><strong>Database:</strong> Galera Cluster, Cassandra, CockroachDB</li>\n      <li><strong>Web Servers:</strong> Multiple Nginx/Apache behind LB</li>\n      <li><strong>Application Servers:</strong> Kubernetes pods</li>\n      <li><strong>Message Queues:</strong> RabbitMQ cluster</li>\n      <li><strong>Cache:</strong> Redis Cluster</li>\n    </ul>\n\n    <h4>Active-Passive Implementations</h4>\n    <ul>\n      <li><strong>Database:</strong> MySQL with replica, PostgreSQL streaming</li>\n      <li><strong>File Systems:</strong> DRBD (Distributed Replicated Block Device)</li>\n      <li><strong>Applications:</strong> Traditional HA clusters</li>\n      <li><strong>Network:</strong> VRRP (Virtual Router Redundancy Protocol)</li>\n    </ul>\n\n    <h3>Hybrid Approaches</h3>\n    \n    <h4>Active-Active with Passive Backup</h4>\n    <p>Combines benefits of both approaches:</p>\n    <ul>\n      <li>Multiple active nodes for normal operation</li>\n      <li>Additional passive nodes for disaster recovery</li>\n      <li>Best of both worlds but higher cost</li>\n    </ul>\n\n    <h4>Read Replicas Pattern</h4>\n    <p>Common in database systems:</p>\n    <ul>\n      <li>Active-Active for read operations</li>\n      <li>Active-Passive for write operations</li>\n      <li>Balances consistency and performance</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Hybrid Architecture Example\n┌─────────────┐     ┌─────────────┐     ┌─────────────┐\n│  Primary    │     │   Read      │     │   Read      │\n│  (Active)   │────▶│  Replica 1  │     │  Replica 2  │\n│  Read/Write │     │  (Active)   │     │  (Active)   │\n└─────────────┘     │  Read Only  │     │  Read Only  │\n                    └─────────────┘     └─────────────┘\n                            │                   │\n                            └───────────────────┘\n                                      │\n                              Read Load Balancer\n                                      │\n                                  Clients</code></pre>\n    </div>\n\n    <h3>Decision Factors</h3>\n    \n    <h4>Choose Active-Active When:</h4>\n    <ul>\n      <li>High throughput requirements</li>\n      <li>Need for horizontal scaling</li>\n      <li>Geographic distribution needed</li>\n      <li>Cost of downtime is very high</li>\n      <li>Read-heavy workloads</li>\n      <li>Microservices architecture</li>\n    </ul>\n\n    <h4>Choose Active-Passive When:</h4>\n    <ul>\n      <li>Simplicity is priority</li>\n      <li>Strong consistency required</li>\n      <li>Limited technical expertise</li>\n      <li>Stateful applications</li>\n      <li>Legacy system constraints</li>\n      <li>Budget constraints for complexity</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>For Active-Active</h4>\n    <ul>\n      <li><strong>Conflict resolution:</strong> Implement robust mechanisms</li>\n      <li><strong>Load balancing:</strong> Use appropriate algorithms</li>\n      <li><strong>Health checks:</strong> Comprehensive monitoring</li>\n      <li><strong>Data partitioning:</strong> Consider sharding strategies</li>\n      <li><strong>Session management:</strong> Use distributed sessions</li>\n    </ul>\n\n    <h4>For Active-Passive</h4>\n    <ul>\n      <li><strong>Failover testing:</strong> Regular drills</li>\n      <li><strong>Replication lag:</strong> Monitor closely</li>\n      <li><strong>Automated failover:</strong> Implement carefully</li>\n      <li><strong>Documentation:</strong> Clear runbooks</li>\n      <li><strong>Passive node maintenance:</strong> Keep updated</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Netflix (Active-Active)</h4>\n    <ul>\n      <li>Multiple regions serving content</li>\n      <li>Each region fully active</li>\n      <li>Chaos engineering for resilience</li>\n    </ul>\n\n    <h4>Traditional Banking (Active-Passive)</h4>\n    <ul>\n      <li>Primary data center active</li>\n      <li>DR site on standby</li>\n      <li>Scheduled failover tests</li>\n    </ul>\n  `\n}; ","export const apiGateway = {\n  id: 'api-gateway',\n  title: 'API Gateway',\n  content: `# API Gateway\n\n## Definition\nAn API Gateway is a server that acts as a single entry point for multiple backend services, handling routing, authentication, and other cross-cutting concerns.\n\n## Core Functions\n- **Request Routing**: Direct requests to appropriate services\n- **Authentication/Authorization**: Centralized security\n- **Rate Limiting**: Control API usage\n- **Load Balancing**: Distribute traffic across instances\n- **Request/Response Transformation**: Modify data formats\n\n## Key Features\n- **Protocol Translation**: HTTP to different protocols\n- **API Versioning**: Manage multiple API versions\n- **Caching**: Store frequently requested data\n- **Monitoring**: Track API usage and performance\n- **Documentation**: Auto-generated API docs\n\n## Benefits\n- **Single Entry Point**: Simplified client integration\n- **Cross-cutting Concerns**: Centralized common functionality\n- **Service Abstraction**: Hide backend complexity\n- **Security**: Centralized authentication and authorization\n- **Analytics**: Unified monitoring and logging\n\n## Common Patterns\n- **Backend for Frontend (BFF)**: Specific gateways per client type\n- **Microservices Gateway**: Route to microservices\n- **Legacy Integration**: Modernize legacy APIs\n- **Multi-cloud**: Unify APIs across cloud providers\n\n## Popular API Gateways\n- **Amazon API Gateway**: AWS managed service\n- **Kong**: Open-source, plugin-based\n- **Zuul**: Netflix's gateway (now Zuul 2)\n- **Envoy Proxy**: High-performance proxy\n- **Azure API Management**: Microsoft's solution\n\n## Challenges\n- **Single Point of Failure**: High availability requirements\n- **Performance Bottleneck**: Additional network hop\n- **Complexity**: Configuration and management overhead\n- **Vendor Lock-in**: Platform-specific features\n\n## Security Features\n- **OAuth/JWT**: Token-based authentication\n- **API Keys**: Simple authentication method\n- **IP Whitelisting**: Network-level access control\n- **CORS**: Cross-origin resource sharing\n\n## Interview Questions\n**Q: What problems does an API Gateway solve?**\nA: Centralized routing, authentication, rate limiting, and monitoring while providing a single entry point for multiple backend services.`\n}; ","export const cdn = {\n  id: 'cdn',\n  title: 'CDN (Content Delivery Network)',\n  content: `# CDN (Content Delivery Network)\n\n## Definition\nA CDN is a distributed network of servers that deliver web content to users based on their geographic location.\n\n## Key Components\n- **Edge Servers**: Geographically distributed cache servers\n- **Origin Server**: Primary server with original content\n- **PoP (Point of Presence)**: CDN server locations\n- **Cache**: Temporary storage of frequently accessed content\n\n## Benefits\n- **Reduced Latency**: Content served from nearby servers\n- **Improved Performance**: Faster load times\n- **Reduced Bandwidth**: Less load on origin server\n- **High Availability**: Redundancy and failover\n- **DDoS Protection**: Distributed attack mitigation\n\n## CDN Strategies\n- **Push CDN**: Content uploaded to CDN manually\n- **Pull CDN**: Content cached on first request\n- **Hybrid**: Combination of push and pull\n\n## Cache Strategies\n- **TTL (Time to Live)**: Cache expiration time\n- **Cache Headers**: Control caching behavior\n- **Purging**: Manual cache invalidation\n- **Edge Side Includes**: Dynamic content assembly\n\n## Popular CDN Providers\n- Cloudflare\n- Amazon CloudFront\n- Akamai\n- Fastly\n\n## Interview Questions\n**Q: How does a CDN improve website performance?**\nA: By serving content from geographically closer servers, reducing latency and load times.`\n}; ","export const circuitBreaker = {\n  id: 'circuit-breaker',\n  title: 'Circuit Breaker Pattern',\n  content: `# Circuit Breaker Pattern\n\n## Definition\nThe Circuit Breaker pattern prevents cascading failures in distributed systems by monitoring service calls and stopping requests when failures exceed a threshold.\n\n## States\n- **Closed**: Normal operation, requests pass through\n- **Open**: Failure threshold exceeded, requests fail fast\n- **Half-Open**: Testing if service has recovered\n\n## State Transitions\n1. **Closed → Open**: When failure rate exceeds threshold\n2. **Open → Half-Open**: After timeout period\n3. **Half-Open → Closed**: When test requests succeed\n4. **Half-Open → Open**: When test requests fail\n\n## Key Parameters\n- **Failure Threshold**: Number/percentage of failures to trigger\n- **Timeout**: How long to wait before testing recovery\n- **Success Threshold**: Successful calls needed to close circuit\n- **Monitoring Window**: Time period for failure calculation\n\n## Benefits\n- **Fail Fast**: Immediate failure response\n- **Resource Protection**: Prevent resource exhaustion\n- **Graceful Degradation**: Fallback mechanisms\n- **System Stability**: Prevent cascade failures\n- **Recovery Time**: Allow services to recover\n\n## Implementation Considerations\n- **Fallback Mechanisms**: Default responses or cached data\n- **Monitoring**: Track circuit breaker state and metrics\n- **Configuration**: Tunable thresholds and timeouts\n- **Logging**: Record state changes and failures\n\n## Common Libraries\n- **Hystrix**: Netflix's circuit breaker (deprecated)\n- **Resilience4j**: Java resilience library\n- **Polly**: .NET resilience library\n- **Opossum**: Node.js circuit breaker\n\n## Use Cases\n- **Microservices**: Service-to-service communication\n- **External APIs**: Third-party service calls\n- **Database Connections**: Database failure protection\n- **Network Calls**: Unreliable network protection\n\n## Related Patterns\n- **Retry Pattern**: Automatic retry with backoff\n- **Bulkhead Pattern**: Isolate critical resources\n- **Timeout Pattern**: Prevent hanging requests\n\n## Interview Questions\n**Q: How does a circuit breaker prevent cascading failures?**\nA: By failing fast when a service is down, preventing resource exhaustion and allowing the system to maintain stability while the failing service recovers.`\n}; ","export const rateLimiting = {\n  id: 'rate-limiting',\n  title: 'Rate Limiting',\n  content: `\n    <h2>Rate Limiting</h2>\n    <p>Rate limiting is used to control the rate at which clients or users can access a particular resource or service over a specified period of time. It helps prevent abuse, misuse, or overloading of the system by limiting the number of requests or transactions that can be processed within a given timeframe.</p>\n\n    <h3>Why Rate Limiting?</h3>\n    \n    <h4>Protection Against</h4>\n    <ul>\n      <li><strong>DDoS Attacks:</strong> Prevents overwhelming the system</li>\n      <li><strong>Brute Force:</strong> Limits password guessing attempts</li>\n      <li><strong>Resource Exhaustion:</strong> Prevents single user monopolizing resources</li>\n      <li><strong>API Abuse:</strong> Controls excessive API usage</li>\n      <li><strong>Cost Control:</strong> Manages third-party API costs</li>\n    </ul>\n\n    <h4>Benefits</h4>\n    <ul>\n      <li><strong>Fair Usage:</strong> Ensures equitable resource distribution</li>\n      <li><strong>System Stability:</strong> Prevents overload</li>\n      <li><strong>Quality of Service:</strong> Maintains performance for all users</li>\n      <li><strong>Revenue Protection:</strong> Enforces pricing tiers</li>\n      <li><strong>Security:</strong> Mitigates various attack vectors</li>\n    </ul>\n\n    <h3>Rate Limiting Algorithms</h3>\n    \n    <h4>1. Token Bucket</h4>\n    <p>Uses a fixed-size token bucket. Each request consumes a token if available, else rate-limited. Tokens are refilled at a fixed rate.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Token Bucket Implementation\nclass TokenBucket {\n  constructor(capacity, refillRate) {\n    this.capacity = capacity;\n    this.tokens = capacity;\n    this.refillRate = refillRate;\n    this.lastRefill = Date.now();\n  }\n  \n  consume(tokens = 1) {\n    this.refill();\n    \n    if (this.tokens >= tokens) {\n      this.tokens -= tokens;\n      return true;\n    }\n    return false;\n  }\n  \n  refill() {\n    const now = Date.now();\n    const timePassed = (now - this.lastRefill) / 1000;\n    const tokensToAdd = timePassed * this.refillRate;\n    \n    this.tokens = Math.min(\n      this.capacity,\n      this.tokens + tokensToAdd\n    );\n    this.lastRefill = now;\n  }\n}\n\n// Usage: 10 requests per second\nconst bucket = new TokenBucket(10, 10);\nif (bucket.consume()) {\n  // Process request\n} else {\n  // Rate limited\n}</code></pre>\n    </div>\n\n    <h4>2. Leaking Bucket</h4>\n    <p>Uses a virtual \"bucket/queue\" with a fixed capacity and a constant leak rate. Requests are added to the bucket if not full, else rate-limited.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Leaking Bucket Implementation\nclass LeakingBucket {\n  constructor(capacity, leakRate) {\n    this.capacity = capacity;\n    this.queue = [];\n    this.leakRate = leakRate;\n    this.lastLeak = Date.now();\n    \n    // Start leaking\n    this.startLeaking();\n  }\n  \n  async add(request) {\n    this.leak();\n    \n    if (this.queue.length >= this.capacity) {\n      throw new Error('Rate limit exceeded');\n    }\n    \n    return new Promise((resolve, reject) => {\n      this.queue.push({ request, resolve, reject });\n    });\n  }\n  \n  leak() {\n    const now = Date.now();\n    const timePassed = (now - this.lastLeak) / 1000;\n    const requestsToProcess = Math.floor(timePassed * this.leakRate);\n    \n    for (let i = 0; i < requestsToProcess && this.queue.length > 0; i++) {\n      const { request, resolve } = this.queue.shift();\n      resolve(request);\n    }\n    \n    this.lastLeak = now;\n  }\n  \n  startLeaking() {\n    setInterval(() => this.leak(), 100); // Check every 100ms\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. Fixed Window Counter</h4>\n    <p>Requests are counted within fixed time intervals or windows. If the number of requests exceeds the allowed threshold, the request is rate-limited. The window is reset at a fixed time interval.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Fixed Window Counter Implementation\nclass FixedWindowCounter {\n  constructor(windowSize, limit) {\n    this.windowSize = windowSize; // in milliseconds\n    this.limit = limit;\n    this.windows = new Map();\n  }\n  \n  allow(key) {\n    const now = Date.now();\n    const window = Math.floor(now / this.windowSize);\n    \n    // Clean old windows\n    this.cleanup(window);\n    \n    // Get current window count\n    const windowKey = \\`\\${key}:\\${window}\\`;\n    const count = this.windows.get(windowKey) || 0;\n    \n    if (count >= this.limit) {\n      return false;\n    }\n    \n    this.windows.set(windowKey, count + 1);\n    return true;\n  }\n  \n  cleanup(currentWindow) {\n    for (const [key, _] of this.windows) {\n      const window = parseInt(key.split(':')[1]);\n      if (window < currentWindow - 1) {\n        this.windows.delete(key);\n      }\n    }\n  }\n}\n\n// 100 requests per minute\nconst limiter = new FixedWindowCounter(60000, 100);</code></pre>\n    </div>\n\n    <h4>4. Sliding Window (Production)</h4>\n    <p>Requests within the current rolling or sliding window are counted, and if they exceed the threshold, further requests are rate-limited.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Sliding Window Log Implementation\nclass SlidingWindowLog {\n  constructor(windowSize, limit) {\n    this.windowSize = windowSize; // in milliseconds\n    this.limit = limit;\n    this.requests = new Map(); // userId -> timestamps[]\n  }\n  \n  allow(userId) {\n    const now = Date.now();\n    const windowStart = now - this.windowSize;\n    \n    // Get user's request timestamps\n    let timestamps = this.requests.get(userId) || [];\n    \n    // Remove old timestamps outside window\n    timestamps = timestamps.filter(t => t > windowStart);\n    \n    // Check if limit exceeded\n    if (timestamps.length >= this.limit) {\n      return false;\n    }\n    \n    // Add current timestamp\n    timestamps.push(now);\n    this.requests.set(userId, timestamps);\n    \n    return true;\n  }\n}\n\n// Sliding Window Counter (Hybrid approach)\nclass SlidingWindowCounter {\n  constructor(windowSize, limit) {\n    this.windowSize = windowSize;\n    this.limit = limit;\n    this.previousWindow = new Map();\n    this.currentWindow = new Map();\n    this.windowStart = Date.now();\n  }\n  \n  allow(key) {\n    const now = Date.now();\n    \n    // Check if we need to slide the window\n    if (now - this.windowStart >= this.windowSize) {\n      this.previousWindow = this.currentWindow;\n      this.currentWindow = new Map();\n      this.windowStart = now;\n    }\n    \n    // Calculate weight for previous window\n    const windowProgress = (now - this.windowStart) / this.windowSize;\n    const previousWeight = 1 - windowProgress;\n    \n    // Get counts\n    const currentCount = this.currentWindow.get(key) || 0;\n    const previousCount = this.previousWindow.get(key) || 0;\n    \n    // Calculate weighted count\n    const weightedCount = (previousCount * previousWeight) + currentCount;\n    \n    if (weightedCount >= this.limit) {\n      return false;\n    }\n    \n    this.currentWindow.set(key, currentCount + 1);\n    return true;\n  }\n}</code></pre>\n    </div>\n\n    <h3>Implementation Strategies</h3>\n    \n    <h4>1. Client-Side Rate Limiting</h4>\n    <ul>\n      <li><strong>SDK/Library:</strong> Built into client libraries</li>\n      <li><strong>Retry Logic:</strong> Exponential backoff</li>\n      <li><strong>Local Throttling:</strong> Prevents unnecessary requests</li>\n      <li><strong>Cooperative:</strong> Relies on client compliance</li>\n    </ul>\n\n    <h4>2. Server-Side Rate Limiting</h4>\n    <ul>\n      <li><strong>API Gateway:</strong> Centralized rate limiting</li>\n      <li><strong>Application Level:</strong> In-app implementation</li>\n      <li><strong>Middleware:</strong> Framework middleware</li>\n      <li><strong>Reverse Proxy:</strong> Nginx, HAProxy</li>\n    </ul>\n\n    <h4>3. Distributed Rate Limiting</h4>\n    <ul>\n      <li><strong>Redis-based:</strong> Shared counter storage</li>\n      <li><strong>Sticky Sessions:</strong> Route to same server</li>\n      <li><strong>Gossip Protocol:</strong> Sync between nodes</li>\n      <li><strong>Token Bucket Service:</strong> Centralized token management</li>\n    </ul>\n\n    <h3>Rate Limiter Response</h3>\n    \n    <p>The rate limiter returns HTTP response code 429 - Too Many Requests with the following HTTP headers to the client:</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>HTTP/1.1 429 Too Many Requests\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1623456789\nRetry-After: 58\nContent-Type: application/json\n\n{\n  \"error\": {\n    \"code\": \"rate_limit_exceeded\",\n    \"message\": \"API rate limit exceeded\",\n    \"retry_after\": 58\n  }\n}\n\n// Header Meanings:\n// X-RateLimit-Limit: Max requests per window\n// X-RateLimit-Remaining: Requests left in current window\n// X-RateLimit-Reset: Unix timestamp when limit resets\n// Retry-After: Seconds until next request allowed</code></pre>\n    </div>\n\n    <h3>Hard vs Soft Rate Limiting</h3>\n    \n    <h4>Hard Rate Limiting</h4>\n    <ul>\n      <li><strong>Strict Enforcement:</strong> No exceptions</li>\n      <li><strong>Immediate Rejection:</strong> 429 response</li>\n      <li><strong>No Grace Period:</strong> Exact limit</li>\n      <li><strong>Use Case:</strong> Security, cost control</li>\n    </ul>\n\n    <h4>Soft Rate Limiting</h4>\n    <ul>\n      <li><strong>Flexible:</strong> Allows burst traffic</li>\n      <li><strong>Grace Period:</strong> Warning before blocking</li>\n      <li><strong>Degraded Service:</strong> Reduced functionality</li>\n      <li><strong>Use Case:</strong> User experience, elasticity</li>\n    </ul>\n\n    <h3>Rate Limiting Examples</h3>\n    \n    <h4>Popular Libraries</h4>\n    <ul>\n      <li><strong>express-rate-limit (Node.js):</strong> Express middleware</li>\n      <li><strong>Resilience4j (Java):</strong> Rate limiter module</li>\n      <li><strong>rack-attack (Ruby):</strong> Rack middleware</li>\n      <li><strong>django-ratelimit (Python):</strong> Django decorator</li>\n      <li><strong>Bucket4j (Java):</strong> Token bucket implementation</li>\n      <li><strong>golang.org/x/time/rate (Go):</strong> Official rate limiter</li>\n    </ul>\n\n    <h4>Infrastructure Solutions</h4>\n    <ul>\n      <li><strong>Nginx:</strong> ngx_http_limit_req_module</li>\n      <li><strong>HAProxy:</strong> stick-table rate limiting</li>\n      <li><strong>Cloudflare:</strong> Rate limiting rules</li>\n      <li><strong>AWS API Gateway:</strong> Usage plans and API keys</li>\n      <li><strong>Kong:</strong> Rate limiting plugin</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Redis-based Distributed Rate Limiter\nclass RedisRateLimiter {\n  constructor(redisClient, options) {\n    this.redis = redisClient;\n    this.keyPrefix = options.keyPrefix || 'rate_limit:';\n    this.limit = options.limit;\n    this.window = options.window; // seconds\n  }\n  \n  async checkLimit(identifier) {\n    const key = \\`\\${this.keyPrefix}\\${identifier}\\`;\n    const multi = this.redis.multi();\n    \n    const now = Date.now();\n    const window = now - (this.window * 1000);\n    \n    // Remove old entries\n    multi.zremrangebyscore(key, 0, window);\n    \n    // Count requests in current window\n    multi.zcard(key);\n    \n    // Add current request\n    multi.zadd(key, now, \\`\\${now}:\\${Math.random()}\\`);\n    \n    // Set expiry\n    multi.expire(key, this.window + 1);\n    \n    const results = await multi.exec();\n    const count = results[1][1];\n    \n    return {\n      allowed: count < this.limit,\n      count: count,\n      remaining: Math.max(0, this.limit - count),\n      resetAt: now + (this.window * 1000)\n    };\n  }\n}\n\n// Usage with Express\napp.use(async (req, res, next) => {\n  const limiter = new RedisRateLimiter(redis, {\n    limit: 100,\n    window: 60 // 1 minute\n  });\n  \n  const result = await limiter.checkLimit(req.ip);\n  \n  res.setHeader('X-RateLimit-Limit', limiter.limit);\n  res.setHeader('X-RateLimit-Remaining', result.remaining);\n  res.setHeader('X-RateLimit-Reset', Math.floor(result.resetAt / 1000));\n  \n  if (!result.allowed) {\n    return res.status(429).json({\n      error: 'Too many requests'\n    });\n  }\n  \n  next();\n});</code></pre>\n    </div>\n\n    <h3>Rate Limiting Strategies</h3>\n    \n    <h4>By Resource Type</h4>\n    <ul>\n      <li><strong>API Endpoints:</strong> Different limits per endpoint</li>\n      <li><strong>User Tiers:</strong> Free vs paid users</li>\n      <li><strong>Operation Type:</strong> Read vs write operations</li>\n      <li><strong>Content Type:</strong> Images vs text</li>\n    </ul>\n\n    <h4>By Identifier</h4>\n    <ul>\n      <li><strong>IP Address:</strong> Per IP limiting</li>\n      <li><strong>User ID:</strong> Authenticated user limits</li>\n      <li><strong>API Key:</strong> Per application limits</li>\n      <li><strong>Session ID:</strong> Per session limits</li>\n      <li><strong>Combination:</strong> Multi-factor identification</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>Design Considerations</h4>\n    <ul>\n      <li><strong>Graceful Degradation:</strong> Provide limited service</li>\n      <li><strong>Clear Communication:</strong> Informative error messages</li>\n      <li><strong>Appropriate Limits:</strong> Based on actual usage patterns</li>\n      <li><strong>Monitoring:</strong> Track rate limit hits</li>\n      <li><strong>Flexibility:</strong> Easy to adjust limits</li>\n    </ul>\n\n    <h4>Implementation Tips</h4>\n    <ul>\n      <li><strong>Use Standard Headers:</strong> Follow RFC 6585</li>\n      <li><strong>Consider Bursts:</strong> Allow short spikes</li>\n      <li><strong>Whitelist Critical:</strong> Emergency overrides</li>\n      <li><strong>Test Thoroughly:</strong> Load testing</li>\n      <li><strong>Document Limits:</strong> Clear API documentation</li>\n    </ul>\n\n    <h3>Common Pitfalls</h3>\n    \n    <h4>Implementation Issues</h4>\n    <ul>\n      <li><strong>Race Conditions:</strong> Concurrent request handling</li>\n      <li><strong>Clock Skew:</strong> Distributed system time sync</li>\n      <li><strong>Memory Leaks:</strong> Not cleaning old data</li>\n      <li><strong>Unfair Distribution:</strong> Behind NAT/proxy</li>\n    </ul>\n\n    <h4>User Experience</h4>\n    <ul>\n      <li><strong>Sudden Blocks:</strong> No warning before limit</li>\n      <li><strong>Unclear Errors:</strong> Confusing messages</li>\n      <li><strong>No Recovery Path:</strong> How to get unblocked</li>\n      <li><strong>Lost Work:</strong> Failed uploads/submissions</li>\n    </ul>\n  `\n}; ","export const caching = {\n  id: 'caching',\n  title: 'Caching Strategies',\n  content: `\n    <h2>Caching Strategies</h2>\n    <p>Caching is a technique used to store frequently accessed data in a fast storage layer to improve application performance and reduce latency.</p>\n\n    <h3>Types of Caching</h3>\n    \n    <h4>1. Browser Caching</h4>\n    <ul>\n      <li><strong>Local Storage:</strong> Persistent storage with no expiration</li>\n      <li><strong>Session Storage:</strong> Storage that expires when tab closes</li>\n      <li><strong>HTTP Cache:</strong> Browser caches resources based on HTTP headers</li>\n      <li><strong>Service Worker Cache:</strong> Programmable cache for offline support</li>\n    </ul>\n\n    <h4>2. Application-Level Caching</h4>\n    <ul>\n      <li><strong>In-Memory Cache:</strong> Data stored in application memory (Redis, Memcached)</li>\n      <li><strong>Database Query Cache:</strong> Cached results of expensive database queries</li>\n      <li><strong>Object Cache:</strong> Cached computed objects or data structures</li>\n    </ul>\n\n    <h4>3. System-Level Caching</h4>\n    <ul>\n      <li><strong>CPU Cache:</strong> L1, L2, L3 caches for processor optimization</li>\n      <li><strong>Operating System Cache:</strong> File system and memory caching</li>\n      <li><strong>Proxy Cache:</strong> Reverse proxy caching (Nginx, Varnish)</li>\n    </ul>\n\n    <h3>Cache Patterns</h3>\n\n    <h4>Cache-Aside (Lazy Loading)</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Application manages cache directly\nfunction getData(key) {\n  // Check cache first\n  let data = cache.get(key);\n  if (data === null) {\n    // Cache miss - fetch from database\n    data = database.get(key);\n    // Store in cache for future requests\n    cache.set(key, data, TTL);\n  }\n  return data;\n}</code></pre>\n    </div>\n\n    <h4>Write-Through</h4>\n    <ul>\n      <li>Data is written to cache and database simultaneously</li>\n      <li>Ensures cache consistency but adds write latency</li>\n      <li>Good for read-heavy workloads with consistent data</li>\n    </ul>\n\n    <h4>Write-Behind (Write-Back)</h4>\n    <ul>\n      <li>Data written to cache immediately, database updated asynchronously</li>\n      <li>Lower write latency but risk of data loss</li>\n      <li>Suitable for write-heavy applications</li>\n    </ul>\n\n    <h4>Refresh-Ahead</h4>\n    <ul>\n      <li>Cache refreshes data before expiration</li>\n      <li>Prevents cache misses for frequently accessed data</li>\n      <li>Requires prediction of access patterns</li>\n    </ul>\n\n    <h3>Cache Eviction Policies</h3>\n\n    <table>\n      <thead>\n        <tr>\n          <th>Policy</th>\n          <th>Description</th>\n          <th>Use Case</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>LRU</strong></td>\n          <td>Least Recently Used</td>\n          <td>General purpose, good temporal locality</td>\n        </tr>\n        <tr>\n          <td><strong>LFU</strong></td>\n          <td>Least Frequently Used</td>\n          <td>Data with clear access frequency patterns</td>\n        </tr>\n        <tr>\n          <td><strong>FIFO</strong></td>\n          <td>First In, First Out</td>\n          <td>Simple implementation, limited effectiveness</td>\n        </tr>\n        <tr>\n          <td><strong>TTL</strong></td>\n          <td>Time To Live</td>\n          <td>Data with natural expiration times</td>\n        </tr>\n        <tr>\n          <td><strong>Random</strong></td>\n          <td>Random eviction</td>\n          <td>Simple, works well with uniform access</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Cache Hierarchies</h3>\n    <p>Multi-level caching systems for optimal performance:</p>\n    \n    <ol>\n      <li><strong>L1 Cache:</strong> CPU registers and instruction cache</li>\n      <li><strong>L2 Cache:</strong> Application memory cache (Redis)</li>\n      <li><strong>L3 Cache:</strong> Distributed cache (Redis Cluster)</li>\n      <li><strong>L4 Cache:</strong> Database query cache</li>\n      <li><strong>L5 Cache:</strong> Disk-based cache</li>\n    </ol>\n\n    <h3>Cache Challenges</h3>\n\n    <h4>Cache Invalidation</h4>\n    <ul>\n      <li><strong>Cache Stampede:</strong> Multiple requests fetch same data simultaneously</li>\n      <li><strong>Cache Penetration:</strong> Queries for non-existent data bypass cache</li>\n      <li><strong>Cache Avalanche:</strong> Mass cache expiration causes database overload</li>\n    </ul>\n\n    <h4>Consistency Issues</h4>\n    <ul>\n      <li><strong>Stale Data:</strong> Cache contains outdated information</li>\n      <li><strong>Race Conditions:</strong> Concurrent updates cause inconsistency</li>\n      <li><strong>Cache Coherence:</strong> Multiple cache instances synchronization</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li>Set appropriate TTL values based on data volatility</li>\n      <li>Use cache keys with consistent naming conventions</li>\n      <li>Monitor cache hit/miss ratios and adjust strategies</li>\n      <li>Implement circuit breakers for cache failures</li>\n      <li>Use compression for large cached objects</li>\n      <li>Consider cache warming for critical data</li>\n      <li>Implement proper error handling for cache operations</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Effective caching requires understanding your data access patterns, consistency requirements, and performance goals. The right caching strategy can improve application performance by orders of magnitude.</p>\n    </div>\n  `\n}; ","export const messageQueues = {\n  id: 'message-queues',\n  title: 'Message Queues',\n  content: `# Message Queues\n\n## Definition\nMessage queues are communication mechanisms that allow applications to exchange messages asynchronously through a queue data structure.\n\n## Key Concepts\n- **Producer**: Sends messages to queue\n- **Consumer**: Receives messages from queue\n- **Queue**: Buffer that stores messages\n- **Broker**: Message queue server/service\n- **Asynchronous**: Non-blocking communication\n\n## Benefits\n- **Decoupling**: Loose coupling between services\n- **Scalability**: Handle varying loads\n- **Reliability**: Message persistence and delivery guarantees\n- **Fault Tolerance**: Continue operation if components fail\n- **Load Leveling**: Smooth out traffic spikes\n\n## Message Patterns\n- **Point-to-Point**: One producer, one consumer\n- **Publish-Subscribe**: One producer, multiple consumers\n- **Request-Reply**: Synchronous-like communication\n- **Competing Consumers**: Multiple consumers share workload\n\n## Popular Message Queues\n- **RabbitMQ**: AMQP protocol, feature-rich\n- **Apache Kafka**: High-throughput, distributed\n- **Amazon SQS**: Managed cloud service\n- **Redis**: In-memory with pub/sub\n- **Apache ActiveMQ**: JMS-compliant\n\n## Delivery Guarantees\n- **At Most Once**: May lose messages\n- **At Least Once**: May duplicate messages\n- **Exactly Once**: Guaranteed single delivery\n\n## Use Cases\n- **Task Processing**: Background job processing\n- **Event-Driven Architecture**: Service communication\n- **Log Aggregation**: Centralized logging\n- **Real-time Analytics**: Stream processing\n\n## Interview Questions\n**Q: What's the difference between message queues and databases?**\nA: Message queues are designed for temporary message passing and consumption, while databases store persistent data for retrieval.`\n}; ","export const microservices = {\n  id: 'microservices',\n  title: 'Microservices Architecture',\n  content: `# Microservices Architecture\n\n## Definition\nMicroservices is an architectural pattern that structures an application as a collection of small, autonomous services.\n\n## Key Characteristics\n- **Single Responsibility**: Each service has one business function\n- **Independently Deployable**: Services can be deployed separately\n- **Decentralized**: No central coordination\n- **Technology Agnostic**: Different tech stacks per service\n- **Fault Tolerant**: Failure isolation\n\n## Benefits\n- **Scalability**: Scale services independently\n- **Flexibility**: Different technologies per service\n- **Resilience**: Isolated failures\n- **Team Autonomy**: Independent development teams\n- **Faster Deployment**: Smaller, focused deployments\n\n## Challenges\n- **Complexity**: Distributed system complexity\n- **Network Latency**: Inter-service communication\n- **Data Consistency**: Distributed transactions\n- **Monitoring**: Distributed tracing needed\n- **Testing**: Complex integration testing\n\n## Communication Patterns\n- **Synchronous**: HTTP/REST, gRPC\n- **Asynchronous**: Message queues, event streaming\n- **Service Mesh**: Infrastructure layer for communication\n\n## Design Patterns\n- **API Gateway**: Single entry point\n- **Circuit Breaker**: Prevent cascade failures\n- **Saga Pattern**: Distributed transactions\n- **Event Sourcing**: Event-driven state management\n\n## Interview Questions\n**Q: What are the main challenges of microservices?**\nA: Distributed system complexity, network latency, data consistency, and monitoring difficulties.`\n}; ","export const apiDesign = {\n  id: 'api-design',\n  title: 'API Design Principles',\n  content: `\n    <h2>API Design Principles</h2>\n    <p>API (Application Programming Interface) design is crucial for building maintainable, scalable, and user-friendly systems that enable effective communication between different software components.</p>\n\n    <h3>REST API Design Principles</h3>\n    \n    <h4>1. Resource-Based URLs</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Good - Resource-based URLs\nGET    /users              // Get all users\nGET    /users/123          // Get user with ID 123\nPOST   /users              // Create a new user\nPUT    /users/123          // Update user 123\nDELETE /users/123          // Delete user 123\n\n// Bad - Action-based URLs\nGET    /getUsers\nGET    /getUserById?id=123\nPOST   /createUser\nPOST   /updateUser\nPOST   /deleteUser</code></pre>\n    </div>\n\n    <h4>2. HTTP Methods (Verbs)</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Method</th>\n          <th>Purpose</th>\n          <th>Idempotent</th>\n          <th>Safe</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>GET</strong></td>\n          <td>Retrieve data</td>\n          <td>Yes</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>POST</strong></td>\n          <td>Create new resource</td>\n          <td>No</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>PUT</strong></td>\n          <td>Update/replace resource</td>\n          <td>Yes</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>PATCH</strong></td>\n          <td>Partial update</td>\n          <td>No</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>DELETE</strong></td>\n          <td>Remove resource</td>\n          <td>Yes</td>\n          <td>No</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h4>3. HTTP Status Codes</h4>\n    <ul>\n      <li><strong>2xx Success:</strong> 200 OK, 201 Created, 204 No Content</li>\n      <li><strong>3xx Redirection:</strong> 301 Moved Permanently, 304 Not Modified</li>\n      <li><strong>4xx Client Error:</strong> 400 Bad Request, 401 Unauthorized, 404 Not Found</li>\n      <li><strong>5xx Server Error:</strong> 500 Internal Server Error, 503 Service Unavailable</li>\n    </ul>\n\n    <h3>API Versioning Strategies</h3>\n\n    <h4>URL Path Versioning</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// URL path versioning\nhttps://api.example.com/v1/users\nhttps://api.example.com/v2/users\n\n// Subdomain versioning\nhttps://v1.api.example.com/users\nhttps://v2.api.example.com/users</code></pre>\n    </div>\n\n    <h4>Header Versioning</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Custom header\nAccept-Version: v1\nAPI-Version: 2.0\n\n// Accept header\nAccept: application/vnd.example.v1+json\nAccept: application/vnd.example.v2+json</code></pre>\n    </div>\n\n    <h4>Query Parameter Versioning</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Query parameter\nhttps://api.example.com/users?version=1\nhttps://api.example.com/users?v=2</code></pre>\n    </div>\n\n    <h3>Request and Response Design</h3>\n\n    <h4>Request Body Structure</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Good - Clear, nested structure\n{\n  \"user\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"profile\": {\n      \"age\": 30,\n      \"location\": \"New York\"\n    }\n  }\n}\n\n// Bad - Flat structure with unclear naming\n{\n  \"userName\": \"John Doe\",\n  \"userEmail\": \"john@example.com\",\n  \"userAge\": 30,\n  \"userLocation\": \"New York\"\n}</code></pre>\n    </div>\n\n    <h4>Response Envelope Pattern</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Consistent response envelope\n{\n  \"data\": {\n    \"id\": 123,\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"meta\": {\n    \"timestamp\": \"2024-01-15T10:30:00Z\",\n    \"version\": \"1.0\"\n  },\n  \"links\": {\n    \"self\": \"/users/123\",\n    \"edit\": \"/users/123/edit\"\n  }\n}</code></pre>\n    </div>\n\n    <h3>Pagination Patterns</h3>\n\n    <h4>Offset-Based Pagination</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Request\nGET /users?offset=20&limit=10\n\n// Response\n{\n  \"data\": [...],\n  \"pagination\": {\n    \"offset\": 20,\n    \"limit\": 10,\n    \"total\": 150,\n    \"has_more\": true\n  }\n}</code></pre>\n    </div>\n\n    <h4>Cursor-Based Pagination</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Request\nGET /users?cursor=eyJpZCI6MTIzfQ&limit=10\n\n// Response\n{\n  \"data\": [...],\n  \"pagination\": {\n    \"next_cursor\": \"eyJpZCI6MTMzfQ\",\n    \"has_more\": true\n  }\n}</code></pre>\n    </div>\n\n    <h3>Error Handling</h3>\n\n    <h4>Standardized Error Format</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Consistent error response\n{\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Invalid input data\",\n    \"details\": [\n      {\n        \"field\": \"email\",\n        \"message\": \"Invalid email format\"\n      },\n      {\n        \"field\": \"age\",\n        \"message\": \"Age must be between 18 and 100\"\n      }\n    ],\n    \"timestamp\": \"2024-01-15T10:30:00Z\",\n    \"request_id\": \"req-123-456-789\"\n  }\n}</code></pre>\n    </div>\n\n    <h3>Security Best Practices</h3>\n\n    <h4>Authentication & Authorization</h4>\n    <ul>\n      <li><strong>API Keys:</strong> Simple but limited security</li>\n      <li><strong>JWT Tokens:</strong> Stateless, self-contained</li>\n      <li><strong>OAuth 2.0:</strong> Industry standard for authorization</li>\n      <li><strong>API Gateway:</strong> Centralized security enforcement</li>\n    </ul>\n\n    <h4>Input Validation</h4>\n    <ul>\n      <li>Validate all input parameters</li>\n      <li>Use schema validation (JSON Schema, OpenAPI)</li>\n      <li>Sanitize input to prevent injection attacks</li>\n      <li>Implement rate limiting and throttling</li>\n    </ul>\n\n    <h3>GraphQL API Design</h3>\n\n    <h4>Schema Definition</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// GraphQL schema\ntype User {\n  id: ID!\n  name: String!\n  email: String!\n  posts: [Post!]!\n}\n\ntype Post {\n  id: ID!\n  title: String!\n  content: String!\n  author: User!\n}\n\ntype Query {\n  user(id: ID!): User\n  users(limit: Int, offset: Int): [User!]!\n}\n\ntype Mutation {\n  createUser(input: CreateUserInput!): User!\n  updateUser(id: ID!, input: UpdateUserInput!): User!\n}</code></pre>\n    </div>\n\n    <h4>Query Examples</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Flexible data fetching\nquery GetUserWithPosts {\n  user(id: \"123\") {\n    name\n    email\n    posts {\n      title\n      content\n    }\n  }\n}\n\n// Avoid over-fetching\nquery GetUserNames {\n  users {\n    name\n  }\n}</code></pre>\n    </div>\n\n    <h3>API Documentation</h3>\n\n    <h4>OpenAPI Specification</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>openapi: 3.0.0\ninfo:\n  title: User API\n  version: 1.0.0\npaths:\n  /users:\n    get:\n      summary: Get all users\n      parameters:\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            default: 10\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'</code></pre>\n    </div>\n\n    <h3>Performance Optimization</h3>\n\n    <h4>Caching Strategies</h4>\n    <ul>\n      <li><strong>ETags:</strong> Conditional requests based on content hash</li>\n      <li><strong>Cache-Control:</strong> HTTP caching directives</li>\n      <li><strong>CDN Caching:</strong> Geographic distribution of cached responses</li>\n    </ul>\n\n    <h4>Response Optimization</h4>\n    <ul>\n      <li>Use compression (gzip, brotli)</li>\n      <li>Implement field selection (sparse fieldsets)</li>\n      <li>Support batch operations</li>\n      <li>Use efficient serialization formats</li>\n    </ul>\n\n    <h3>API Testing Strategies</h3>\n\n    <h4>Testing Pyramid</h4>\n    <ul>\n      <li><strong>Unit Tests:</strong> Individual function/method testing</li>\n      <li><strong>Integration Tests:</strong> API endpoint testing</li>\n      <li><strong>Contract Tests:</strong> API contract validation</li>\n      <li><strong>End-to-End Tests:</strong> Full workflow testing</li>\n    </ul>\n\n    <h4>Testing Tools</h4>\n    <ul>\n      <li><strong>Postman:</strong> Manual and automated API testing</li>\n      <li><strong>Jest/Mocha:</strong> Unit and integration testing</li>\n      <li><strong>Pact:</strong> Consumer-driven contract testing</li>\n      <li><strong>Newman:</strong> Command-line Postman collection runner</li>\n    </ul>\n\n    <h3>Best Practices Summary</h3>\n    <ul>\n      <li>Use consistent naming conventions and URL structures</li>\n      <li>Implement proper HTTP status codes and error handling</li>\n      <li>Design for backwards compatibility and versioning</li>\n      <li>Provide comprehensive documentation and examples</li>\n      <li>Implement security measures and input validation</li>\n      <li>Optimize for performance with caching and compression</li>\n      <li>Design APIs that are intuitive and easy to use</li>\n      <li>Follow REST principles or GraphQL best practices</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Good API design is about creating interfaces that are intuitive, consistent, and maintainable. Focus on the developer experience and design APIs that you would want to use yourself.</p>\n    </div>\n  `\n}; ","export const eventSourcing = {\n  id: 'event-sourcing',\n  title: 'Event Sourcing',\n  content: `\n    <h2>Event Sourcing</h2>\n    <p>Event Sourcing is an architectural pattern where application state is stored as a sequence of events rather than storing just the current state. Each state change is captured as an immutable event.</p>\n\n    <h3>Core Concepts</h3>\n    \n    <h4>Events</h4>\n    <ul>\n      <li><strong>Immutable:</strong> Events cannot be changed once written</li>\n      <li><strong>Append-Only:</strong> New events are added to the end of the stream</li>\n      <li><strong>Time-Ordered:</strong> Events maintain chronological sequence</li>\n      <li><strong>Domain Events:</strong> Represent meaningful business occurrences</li>\n    </ul>\n\n    <h4>Event Store</h4>\n    <ul>\n      <li>Persistent storage for event streams</li>\n      <li>Optimized for append operations</li>\n      <li>Supports querying by aggregate ID</li>\n      <li>May provide additional features like snapshots</li>\n    </ul>\n\n    <h3>Implementation Example</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Event definitions\nclass Event {\n  constructor(aggregateId, eventType, data, version, timestamp = new Date()) {\n    this.aggregateId = aggregateId;\n    this.eventType = eventType;\n    this.data = data;\n    this.version = version;\n    this.timestamp = timestamp;\n    this.id = this.generateId();\n  }\n\n  generateId() {\n    return \\`\\${this.aggregateId}-\\${this.version}-\\${Date.now()}\\`;\n  }\n}\n\n// Domain events for a bank account\nclass AccountCreated extends Event {\n  constructor(accountId, ownerId, initialBalance, version) {\n    super(accountId, 'AccountCreated', {\n      ownerId,\n      initialBalance\n    }, version);\n  }\n}\n\nclass MoneyDeposited extends Event {\n  constructor(accountId, amount, version) {\n    super(accountId, 'MoneyDeposited', {\n      amount\n    }, version);\n  }\n}\n\nclass MoneyWithdrawn extends Event {\n  constructor(accountId, amount, version) {\n    super(accountId, 'MoneyWithdrawn', {\n      amount\n    }, version);\n  }\n}\n\n// Aggregate using event sourcing\nclass BankAccount {\n  constructor(accountId) {\n    this.accountId = accountId;\n    this.ownerId = null;\n    this.balance = 0;\n    this.version = 0;\n    this.uncommittedEvents = [];\n  }\n\n  // Factory method to create new account\n  static create(accountId, ownerId, initialBalance) {\n    const account = new BankAccount(accountId);\n    const event = new AccountCreated(accountId, ownerId, initialBalance, 1);\n    account.applyEvent(event);\n    account.uncommittedEvents.push(event);\n    return account;\n  }\n\n  // Commands (business operations)\n  deposit(amount) {\n    if (amount <= 0) {\n      throw new Error('Deposit amount must be positive');\n    }\n\n    const event = new MoneyDeposited(this.accountId, amount, this.version + 1);\n    this.applyEvent(event);\n    this.uncommittedEvents.push(event);\n  }\n\n  withdraw(amount) {\n    if (amount <= 0) {\n      throw new Error('Withdrawal amount must be positive');\n    }\n    \n    if (this.balance < amount) {\n      throw new Error('Insufficient funds');\n    }\n\n    const event = new MoneyWithdrawn(this.accountId, amount, this.version + 1);\n    this.applyEvent(event);\n    this.uncommittedEvents.push(event);\n  }\n\n  // Apply events to rebuild state\n  applyEvent(event) {\n    switch (event.eventType) {\n      case 'AccountCreated':\n        this.ownerId = event.data.ownerId;\n        this.balance = event.data.initialBalance;\n        break;\n      case 'MoneyDeposited':\n        this.balance += event.data.amount;\n        break;\n      case 'MoneyWithdrawn':\n        this.balance -= event.data.amount;\n        break;\n      default:\n        throw new Error(\\`Unknown event type: \\${event.eventType}\\`);\n    }\n    this.version = event.version;\n  }\n\n  // Rebuild aggregate from event history\n  static fromHistory(accountId, events) {\n    const account = new BankAccount(accountId);\n    events.forEach(event => account.applyEvent(event));\n    return account;\n  }\n\n  getUncommittedEvents() {\n    return [...this.uncommittedEvents];\n  }\n\n  markEventsAsCommitted() {\n    this.uncommittedEvents = [];\n  }\n}</code></pre>\n    </div>\n\n    <h3>Event Store Implementation</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Simple in-memory event store\nclass EventStore {\n  constructor() {\n    this.events = new Map(); // aggregateId -> events[]\n    this.globalEvents = []; // All events in order\n  }\n\n  async saveEvents(aggregateId, events, expectedVersion) {\n    const existingEvents = this.events.get(aggregateId) || [];\n    \n    // Optimistic concurrency check\n    if (existingEvents.length !== expectedVersion) {\n      throw new Error(\\`Concurrency conflict. Expected version \\${expectedVersion}, but was \\${existingEvents.length}\\`);\n    }\n\n    // Append new events\n    const updatedEvents = [...existingEvents, ...events];\n    this.events.set(aggregateId, updatedEvents);\n    \n    // Add to global stream\n    this.globalEvents.push(...events);\n    \n    console.log(\\`Saved \\${events.length} events for aggregate \\${aggregateId}\\`);\n  }\n\n  async getEvents(aggregateId, fromVersion = 0) {\n    const events = this.events.get(aggregateId) || [];\n    return events.filter(event => event.version > fromVersion);\n  }\n\n  async getAllEvents(fromTimestamp = null) {\n    if (fromTimestamp) {\n      return this.globalEvents.filter(event => event.timestamp >= fromTimestamp);\n    }\n    return [...this.globalEvents];\n  }\n\n  async getEventsByType(eventType) {\n    return this.globalEvents.filter(event => event.eventType === eventType);\n  }\n}\n\n// Repository pattern for aggregates\nclass BankAccountRepository {\n  constructor(eventStore) {\n    this.eventStore = eventStore;\n  }\n\n  async save(account) {\n    const uncommittedEvents = account.getUncommittedEvents();\n    if (uncommittedEvents.length === 0) {\n      return;\n    }\n\n    const expectedVersion = account.version - uncommittedEvents.length;\n    await this.eventStore.saveEvents(\n      account.accountId, \n      uncommittedEvents, \n      expectedVersion\n    );\n    \n    account.markEventsAsCommitted();\n  }\n\n  async getById(accountId) {\n    const events = await this.eventStore.getEvents(accountId);\n    if (events.length === 0) {\n      return null;\n    }\n    \n    return BankAccount.fromHistory(accountId, events);\n  }\n}</code></pre>\n    </div>\n\n    <h3>Projections and Read Models</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Read model for account summary\nclass AccountSummaryProjection {\n  constructor(eventStore) {\n    this.eventStore = eventStore;\n    this.summaries = new Map();\n    this.lastProcessedTimestamp = null;\n  }\n\n  async buildProjection() {\n    const events = await this.eventStore.getAllEvents(this.lastProcessedTimestamp);\n    \n    for (const event of events) {\n      await this.handleEvent(event);\n      this.lastProcessedTimestamp = event.timestamp;\n    }\n  }\n\n  async handleEvent(event) {\n    switch (event.eventType) {\n      case 'AccountCreated':\n        this.summaries.set(event.aggregateId, {\n          accountId: event.aggregateId,\n          ownerId: event.data.ownerId,\n          balance: event.data.initialBalance,\n          transactionCount: 0,\n          lastActivity: event.timestamp\n        });\n        break;\n        \n      case 'MoneyDeposited':\n      case 'MoneyWithdrawn':\n        const summary = this.summaries.get(event.aggregateId);\n        if (summary) {\n          summary.balance += (event.eventType === 'MoneyDeposited' ? \n            event.data.amount : -event.data.amount);\n          summary.transactionCount++;\n          summary.lastActivity = event.timestamp;\n        }\n        break;\n    }\n  }\n\n  getAccountSummary(accountId) {\n    return this.summaries.get(accountId);\n  }\n\n  getAllSummaries() {\n    return Array.from(this.summaries.values());\n  }\n}\n\n// Event handler for notifications\nclass NotificationHandler {\n  constructor(eventStore) {\n    this.eventStore = eventStore;\n  }\n\n  async subscribeToEvents() {\n    // In a real implementation, this would be a continuous subscription\n    const events = await this.eventStore.getAllEvents();\n    events.forEach(event => this.handleEvent(event));\n  }\n\n  handleEvent(event) {\n    switch (event.eventType) {\n      case 'AccountCreated':\n        console.log(\\`📧 Welcome email sent to account \\${event.aggregateId}\\`);\n        break;\n      case 'MoneyWithdrawn':\n        if (event.data.amount > 1000) {\n          console.log(\\`🚨 Large withdrawal alert: $\\${event.data.amount} from account \\${event.aggregateId}\\`);\n        }\n        break;\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h3>Snapshots for Performance</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Snapshot functionality\nclass Snapshot {\n  constructor(aggregateId, data, version, timestamp = new Date()) {\n    this.aggregateId = aggregateId;\n    this.data = data;\n    this.version = version;\n    this.timestamp = timestamp;\n  }\n}\n\nclass SnapshotStore {\n  constructor() {\n    this.snapshots = new Map();\n  }\n\n  async saveSnapshot(snapshot) {\n    this.snapshots.set(snapshot.aggregateId, snapshot);\n  }\n\n  async getSnapshot(aggregateId) {\n    return this.snapshots.get(aggregateId);\n  }\n}\n\n// Enhanced repository with snapshot support\nclass EnhancedBankAccountRepository {\n  constructor(eventStore, snapshotStore, snapshotFrequency = 10) {\n    this.eventStore = eventStore;\n    this.snapshotStore = snapshotStore;\n    this.snapshotFrequency = snapshotFrequency;\n  }\n\n  async save(account) {\n    const uncommittedEvents = account.getUncommittedEvents();\n    if (uncommittedEvents.length === 0) {\n      return;\n    }\n\n    const expectedVersion = account.version - uncommittedEvents.length;\n    await this.eventStore.saveEvents(\n      account.accountId, \n      uncommittedEvents, \n      expectedVersion\n    );\n    \n    account.markEventsAsCommitted();\n\n    // Create snapshot if needed\n    if (account.version % this.snapshotFrequency === 0) {\n      await this.createSnapshot(account);\n    }\n  }\n\n  async getById(accountId) {\n    // Try to load from snapshot first\n    const snapshot = await this.snapshotStore.getSnapshot(accountId);\n    let account;\n    let fromVersion = 0;\n\n    if (snapshot) {\n      account = new BankAccount(accountId);\n      account.ownerId = snapshot.data.ownerId;\n      account.balance = snapshot.data.balance;\n      account.version = snapshot.version;\n      fromVersion = snapshot.version;\n    }\n\n    // Load events since snapshot\n    const events = await this.eventStore.getEvents(accountId, fromVersion);\n    \n    if (!account && events.length === 0) {\n      return null;\n    }\n\n    if (!account) {\n      account = BankAccount.fromHistory(accountId, events);\n    } else {\n      events.forEach(event => account.applyEvent(event));\n    }\n\n    return account;\n  }\n\n  async createSnapshot(account) {\n    const snapshot = new Snapshot(\n      account.accountId,\n      {\n        ownerId: account.ownerId,\n        balance: account.balance\n      },\n      account.version\n    );\n    \n    await this.snapshotStore.saveSnapshot(snapshot);\n  }\n}</code></pre>\n    </div>\n\n    <h3>Usage Example</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Complete usage example\nasync function demonstrateEventSourcing() {\n  // Setup\n  const eventStore = new EventStore();\n  const snapshotStore = new SnapshotStore();\n  const repository = new EnhancedBankAccountRepository(eventStore, snapshotStore);\n  const projection = new AccountSummaryProjection(eventStore);\n  const notificationHandler = new NotificationHandler(eventStore);\n\n  // Create and use account\n  const account = BankAccount.create('acc-123', 'user-456', 1000);\n  await repository.save(account);\n\n  // Perform operations\n  account.deposit(500);\n  account.withdraw(200);\n  account.deposit(1000);\n  await repository.save(account);\n\n  // Load account from events\n  const loadedAccount = await repository.getById('acc-123');\n  console.log(\\`Loaded account balance: $\\${loadedAccount.balance}\\`);\n\n  // Build projections\n  await projection.buildProjection();\n  const summary = projection.getAccountSummary('acc-123');\n  console.log('Account Summary:', summary);\n\n  // Process notifications\n  await notificationHandler.subscribeToEvents();\n\n  // Query events\n  const allDeposits = await eventStore.getEventsByType('MoneyDeposited');\n  console.log(\\`Total deposits: \\${allDeposits.length}\\`);\n}\n\ndemonstrateEventSourcing().catch(console.error);</code></pre>\n    </div>\n\n    <h3>Advantages</h3>\n    <ul>\n      <li><strong>Complete Audit Trail:</strong> Every state change is recorded</li>\n      <li><strong>Time Travel:</strong> Can reconstruct state at any point in time</li>\n      <li><strong>Debugging:</strong> Easy to trace how current state was reached</li>\n      <li><strong>Analytics:</strong> Rich data for business intelligence</li>\n      <li><strong>Flexibility:</strong> Can create new projections from existing events</li>\n      <li><strong>Scalability:</strong> Read and write models can be scaled independently</li>\n    </ul>\n\n    <h3>Disadvantages</h3>\n    <ul>\n      <li><strong>Complexity:</strong> More complex than traditional CRUD operations</li>\n      <li><strong>Storage:</strong> Requires more storage space</li>\n      <li><strong>Learning Curve:</strong> Different mindset required</li>\n      <li><strong>Eventual Consistency:</strong> Projections may lag behind events</li>\n      <li><strong>Event Evolution:</strong> Handling changes to event schemas</li>\n    </ul>\n\n    <h3>When to Use Event Sourcing</h3>\n\n    <h4>Good Fit</h4>\n    <ul>\n      <li>Audit requirements are critical</li>\n      <li>Business needs to analyze historical data</li>\n      <li>Complex business logic with many state transitions</li>\n      <li>Need to support multiple read models</li>\n      <li>High-volume systems requiring CQRS</li>\n    </ul>\n\n    <h4>Poor Fit</h4>\n    <ul>\n      <li>Simple CRUD applications</li>\n      <li>Small teams without event sourcing expertise</li>\n      <li>Systems with simple business logic</li>\n      <li>Applications with limited storage</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Event Sourcing provides powerful capabilities for audit trails and analytics, but comes with significant complexity. It's best suited for domains where the benefits clearly outweigh the implementation costs.</p>\n    </div>\n  `\n}; ","export const applicationServer = {\n  id: 'application-server',\n  title: 'Application Server',\n  content: `# Application Server\n\n## Definition\nAn application server is a server that hosts and executes applications, providing business logic and dynamic content generation.\n\n## Key Features\n- **Business Logic Execution**: Runs application code and business rules\n- **Database Connectivity**: Manages connections to databases\n- **Transaction Management**: Handles ACID transactions\n- **Security**: Provides authentication and authorization\n- **Resource Management**: Manages memory, connections, and threads\n\n## Common Application Servers\n- **Apache Tomcat**: Java servlet container\n- **JBoss/WildFly**: Java EE application server\n- **WebLogic**: Oracle's enterprise application server\n- **WebSphere**: IBM's application server\n- **Node.js**: JavaScript runtime for server-side applications\n\n## Architecture Layers\n1. **Presentation Layer**: User interface\n2. **Business Logic Layer**: Application processing\n3. **Data Access Layer**: Database interactions\n\n## Interview Questions\n**Q: What is the difference between a web server and application server?**\nA: Web servers serve static content and handle HTTP requests, while application servers execute business logic and provide enterprise services.\n\n**Q: What are the benefits of using an application server?**\nA: Centralized business logic, transaction management, security, scalability, and enterprise integration capabilities.`\n}; ","export const verticalVsHorizontalScaling = {\n  id: 'vertical-vs-horizontal-scaling',\n  title: 'Vertical vs Horizontal Scaling',\n  content: `\n    <h2>Vertical Scaling vs Horizontal Scaling</h2>\n    <p>Scaling is the capability of a system to handle increased load. There are two primary approaches to scaling: vertical scaling (scaling up) and horizontal scaling (scaling out). Each has its own advantages, limitations, and use cases.</p>\n\n    <h3>Vertical Scaling (Scale Up)</h3>\n    <p>Vertical scaling involves adding more power (CPU, RAM, Storage) to an existing server. It's like upgrading your computer with better components.</p>\n    \n    <h4>Characteristics</h4>\n    <ul>\n      <li><strong>Single Machine:</strong> Upgrade existing hardware</li>\n      <li><strong>More Resources:</strong> Add CPU, RAM, SSD, GPU</li>\n      <li><strong>Simplicity:</strong> No application changes needed</li>\n      <li><strong>Immediate Effect:</strong> Instant performance boost</li>\n      <li><strong>Limited by Hardware:</strong> Physical constraints exist</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Simple Implementation:</strong> No code changes required</li>\n      <li><strong>Data Consistency:</strong> No distributed system complexity</li>\n      <li><strong>Lower Latency:</strong> No network calls between nodes</li>\n      <li><strong>Licensing:</strong> Often cheaper software licenses</li>\n      <li><strong>Administration:</strong> Easier to manage one server</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Hardware Limits:</strong> Maximum capacity constraints</li>\n      <li><strong>Single Point of Failure:</strong> One server down = system down</li>\n      <li><strong>Expensive:</strong> High-end hardware costs exponentially more</li>\n      <li><strong>Downtime:</strong> Upgrades require system shutdown</li>\n      <li><strong>Diminishing Returns:</strong> Performance gains decrease</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Vertical Scaling Example\n// Before: Small EC2 Instance\n{\n  \"instance_type\": \"t2.micro\",\n  \"vCPU\": 1,\n  \"memory\": \"1 GB\",\n  \"network\": \"Low to Moderate\",\n  \"cost\": \"$0.0116/hour\"\n}\n\n// After: Large EC2 Instance\n{\n  \"instance_type\": \"m5.24xlarge\",\n  \"vCPU\": 96,\n  \"memory\": \"384 GB\",\n  \"network\": \"25 Gbps\",\n  \"cost\": \"$4.608/hour\"\n}\n\n// According to Amazon RDS, you can get a database \n// server with 24 TB of RAM!\n{\n  \"instance_type\": \"db.x1e.32xlarge\",\n  \"vCPU\": 128,\n  \"memory\": \"3,904 GB\",\n  \"storage\": \"Up to 64 TB\",\n  \"cost\": \"$26.688/hour\"\n}</code></pre>\n    </div>\n\n    <h3>Horizontal Scaling (Scale Out)</h3>\n    <p>Horizontal scaling involves adding more servers to your resource pool. It's like adding more computers to work together.</p>\n    \n    <h4>Characteristics</h4>\n    <ul>\n      <li><strong>Multiple Machines:</strong> Add more servers</li>\n      <li><strong>Distributed System:</strong> Load spread across nodes</li>\n      <li><strong>Complexity:</strong> Requires architecture changes</li>\n      <li><strong>Theoretically Limitless:</strong> Keep adding servers</li>\n      <li><strong>Load Balancing:</strong> Distribute requests</li>\n    </ul>\n\n    <h4>Advantages</h4>\n    <ul>\n      <li><strong>Fault Tolerance:</strong> System survives node failures</li>\n      <li><strong>Cost Effective:</strong> Use commodity hardware</li>\n      <li><strong>Incremental Growth:</strong> Add capacity as needed</li>\n      <li><strong>Geographic Distribution:</strong> Servers in multiple locations</li>\n      <li><strong>No Downtime:</strong> Add nodes without stopping</li>\n    </ul>\n\n    <h4>Disadvantages</h4>\n    <ul>\n      <li><strong>Complexity:</strong> Distributed system challenges</li>\n      <li><strong>Data Consistency:</strong> Synchronization issues</li>\n      <li><strong>Network Latency:</strong> Inter-node communication</li>\n      <li><strong>Development Effort:</strong> Application must support it</li>\n      <li><strong>Administration:</strong> More servers to manage</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Horizontal Scaling Example\n// Before: Single Server\n┌─────────────────┐\n│   Web Server    │\n│   Database      │\n│   Application   │\n│  (All-in-One)   │\n└─────────────────┘\n\n// After: Distributed System\n┌─────────────┐  ┌─────────────┐  ┌─────────────┐\n│ Web Server 1│  │ Web Server 2│  │ Web Server 3│\n└──────┬──────┘  └──────┬──────┘  └──────┬──────┘\n       │                │                │\n       └────────────────┴────────────────┘\n                       │\n                Load Balancer\n                       │\n       ┌───────────────┴───────────────┐\n       │                               │\n┌──────▼──────┐                ┌──────▼──────┐\n│   App       │                │   App       │\n│  Server 1   │                │  Server 2   │\n└──────┬──────┘                └──────┬──────┘\n       │                               │\n       └───────────────┬───────────────┘\n                       │\n              ┌────────▼────────┐\n              │   Database      │\n              │   Cluster       │\n              └─────────────────┘</code></pre>\n    </div>\n\n    <h3>Comparison Table</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Vertical Scaling</th>\n          <th>Horizontal Scaling</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Approach</td>\n          <td>Add resources to single node</td>\n          <td>Add more nodes</td>\n        </tr>\n        <tr>\n          <td>Complexity</td>\n          <td>Simple</td>\n          <td>Complex</td>\n        </tr>\n        <tr>\n          <td>Fault Tolerance</td>\n          <td>Single point of failure</td>\n          <td>High availability</td>\n        </tr>\n        <tr>\n          <td>Performance Limit</td>\n          <td>Hardware constraints</td>\n          <td>Theoretically unlimited</td>\n        </tr>\n        <tr>\n          <td>Cost Pattern</td>\n          <td>Exponential</td>\n          <td>Linear</td>\n        </tr>\n        <tr>\n          <td>Data Consistency</td>\n          <td>Simple</td>\n          <td>Complex</td>\n        </tr>\n        <tr>\n          <td>Downtime</td>\n          <td>Required for upgrades</td>\n          <td>Zero downtime possible</td>\n        </tr>\n        <tr>\n          <td>Load Balancing</td>\n          <td>Not needed</td>\n          <td>Essential</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>When to Use Vertical Scaling</h3>\n    \n    <h4>Good Use Cases</h4>\n    <ul>\n      <li><strong>Legacy Applications:</strong> Can't be distributed</li>\n      <li><strong>Databases:</strong> ACID compliance requirements</li>\n      <li><strong>Quick Fixes:</strong> Temporary performance boost</li>\n      <li><strong>Small Applications:</strong> Simple architecture</li>\n      <li><strong>Predictable Load:</strong> Known maximum capacity</li>\n    </ul>\n\n    <h4>Examples</h4>\n    <ul>\n      <li>Traditional RDBMS (MySQL, PostgreSQL)</li>\n      <li>In-memory caches (Redis single instance)</li>\n      <li>Development environments</li>\n      <li>Small business applications</li>\n    </ul>\n\n    <h3>When to Use Horizontal Scaling</h3>\n    \n    <h4>Good Use Cases</h4>\n    <ul>\n      <li><strong>Web Applications:</strong> Stateless services</li>\n      <li><strong>Microservices:</strong> Distributed by design</li>\n      <li><strong>Big Data:</strong> Massive datasets</li>\n      <li><strong>Global Applications:</strong> Geographic distribution</li>\n      <li><strong>Variable Load:</strong> Unpredictable traffic</li>\n    </ul>\n\n    <h4>Examples</h4>\n    <ul>\n      <li>Web servers (Nginx, Apache)</li>\n      <li>NoSQL databases (Cassandra, MongoDB)</li>\n      <li>Container orchestration (Kubernetes)</li>\n      <li>Content delivery networks</li>\n      <li>Search engines (Elasticsearch)</li>\n    </ul>\n\n    <h3>Hybrid Approach</h3>\n    \n    <p>Many systems use both scaling strategies:</p>\n    \n    <h4>Database Example</h4>\n    <ul>\n      <li><strong>Vertical:</strong> Scale up master database</li>\n      <li><strong>Horizontal:</strong> Add read replicas</li>\n      <li><strong>Result:</strong> High write performance + read scalability</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Hybrid Scaling Architecture\n┌─────────────────┐\n│  Load Balancer  │\n└────────┬────────┘\n         │\n┌────────▼────────┐\n│  Web Tier       │\n│  (Horizontal)   │\n│  ┌───┐ ┌───┐   │\n│  │N1 │ │N2 │...│\n│  └───┘ └───┘   │\n└────────┬────────┘\n         │\n┌────────▼────────┐\n│   App Tier      │\n│  (Horizontal)   │\n│  ┌───┐ ┌───┐   │\n│  │A1 │ │A2 │...│\n│  └───┘ └───┘   │\n└────────┬────────┘\n         │\n┌────────▼────────┐\n│  Database       │\n│  (Vertical +    │\n│   Read Replicas)│\n│  ┌─────────┐   │\n│  │ Master  │   │\n│  │(Scaled) │   │\n│  └────┬────┘   │\n│       │        │\n│  ┌────▼───┐    │\n│  │Replicas│    │\n│  └────────┘    │\n└─────────────────┘</code></pre>\n    </div>\n\n    <h3>Implementation Considerations</h3>\n    \n    <h4>For Vertical Scaling</h4>\n    <ul>\n      <li><strong>Monitor Resources:</strong> CPU, memory, disk I/O</li>\n      <li><strong>Plan Downtime:</strong> Schedule maintenance windows</li>\n      <li><strong>Backup First:</strong> Before hardware changes</li>\n      <li><strong>Test Performance:</strong> Verify improvements</li>\n      <li><strong>Cost Analysis:</strong> ROI calculation</li>\n    </ul>\n\n    <h4>For Horizontal Scaling</h4>\n    <ul>\n      <li><strong>Stateless Design:</strong> No server-specific data</li>\n      <li><strong>Session Management:</strong> Distributed sessions</li>\n      <li><strong>Data Partitioning:</strong> Sharding strategy</li>\n      <li><strong>Service Discovery:</strong> Dynamic node registration</li>\n      <li><strong>Monitoring:</strong> Distributed tracing</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Stack Overflow (Vertical Scaling)</h4>\n    <ul>\n      <li>Runs on just a few servers</li>\n      <li>Massive SQL Server instances</li>\n      <li>All data in RAM model</li>\n      <li>Proves vertical scaling can go far</li>\n    </ul>\n\n    <h4>Netflix (Horizontal Scaling)</h4>\n    <ul>\n      <li>Thousands of microservices</li>\n      <li>Auto-scaling based on demand</li>\n      <li>Geographic distribution</li>\n      <li>Fault tolerance built-in</li>\n    </ul>\n\n    <h3>Cost Considerations</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Cost Comparison Example (AWS)\n\n// Vertical Scaling\n1 x m5.24xlarge = $4.608/hour\nTotal: $4.608/hour\n\n// Horizontal Scaling (equivalent capacity)\n24 x m5.xlarge = 24 x $0.192/hour = $4.608/hour\nTotal: $4.608/hour (same cost, better availability)\n\n// But consider:\n- Load balancer costs\n- Data transfer between nodes\n- Operational complexity\n- Software licensing (per node vs per core)</code></pre>\n    </div>\n\n    <h3>Future Trends</h3>\n    \n    <h4>Serverless (Beyond Horizontal)</h4>\n    <ul>\n      <li>Automatic scaling</li>\n      <li>Pay per execution</li>\n      <li>No server management</li>\n      <li>Example: AWS Lambda, Google Cloud Functions</li>\n    </ul>\n\n    <h4>Edge Computing</h4>\n    <ul>\n      <li>Distributed to edge locations</li>\n      <li>Minimal latency</li>\n      <li>Geographic scale</li>\n      <li>Example: Cloudflare Workers</li>\n    </ul>\n  `\n}; ","export const elasticityVsScalability = {\n  id: 'elasticity-vs-scalability',\n  title: 'Elasticity vs Scalability',\n  content: `\n    <h2>Elasticity vs Scalability</h2>\n    <p>While often used interchangeably, elasticity and scalability are distinct concepts in system design. Understanding their differences is crucial for building efficient, cost-effective systems.</p>\n\n    <h3>Scalability</h3>\n    <p>Scalability refers to the capability of a system to increase its capacity to handle increased loads. It's about the potential to grow.</p>\n    \n    <h4>Key Characteristics</h4>\n    <ul>\n      <li><strong>Capacity Planning:</strong> Planned expansion of resources</li>\n      <li><strong>Manual or Scheduled:</strong> Often requires intervention</li>\n      <li><strong>Long-term Focus:</strong> Strategic growth planning</li>\n      <li><strong>Permanent Changes:</strong> Resources typically stay allocated</li>\n      <li><strong>Predictable Growth:</strong> Based on forecasted demand</li>\n    </ul>\n\n    <h4>Types of Scalability</h4>\n    <ul>\n      <li><strong>Vertical Scalability:</strong> Adding more power to existing machines</li>\n      <li><strong>Horizontal Scalability:</strong> Adding more machines to the pool</li>\n      <li><strong>Diagonal Scalability:</strong> Combination of both approaches</li>\n    </ul>\n\n    <h3>Elasticity</h3>\n    <p>Elasticity refers to the ability of a system to automatically adjust its resources to handle varying workloads in real-time. It means dynamically allocating or deallocating resources as demand changes (easily scale up or down based on your needs).</p>\n    \n    <h4>Key Characteristics</h4>\n    <ul>\n      <li><strong>Automatic Adjustment:</strong> Self-managing resource allocation</li>\n      <li><strong>Real-time Response:</strong> Immediate reaction to load changes</li>\n      <li><strong>Bi-directional:</strong> Scales both up and down</li>\n      <li><strong>Cost Optimization:</strong> Pay only for what you use</li>\n      <li><strong>Dynamic Nature:</strong> Continuous adjustment</li>\n    </ul>\n\n    <h4>Elastic Behaviors</h4>\n    <ul>\n      <li><strong>Auto-scaling:</strong> Automatic instance management</li>\n      <li><strong>Load-based Scaling:</strong> Response to metrics</li>\n      <li><strong>Time-based Scaling:</strong> Scheduled adjustments</li>\n      <li><strong>Predictive Scaling:</strong> ML-based forecasting</li>\n    </ul>\n\n    <h3>Key Differences</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Scalability</th>\n          <th>Elasticity</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Definition</td>\n          <td>Ability to handle growth</td>\n          <td>Ability to adapt automatically</td>\n        </tr>\n        <tr>\n          <td>Direction</td>\n          <td>Usually upward</td>\n          <td>Both up and down</td>\n        </tr>\n        <tr>\n          <td>Timing</td>\n          <td>Planned, periodic</td>\n          <td>Real-time, continuous</td>\n        </tr>\n        <tr>\n          <td>Automation</td>\n          <td>Often manual</td>\n          <td>Always automatic</td>\n        </tr>\n        <tr>\n          <td>Resource Usage</td>\n          <td>May over-provision</td>\n          <td>Optimized usage</td>\n        </tr>\n        <tr>\n          <td>Cost Model</td>\n          <td>Fixed capacity cost</td>\n          <td>Variable, usage-based</td>\n        </tr>\n        <tr>\n          <td>Response Time</td>\n          <td>Slower (planned)</td>\n          <td>Fast (immediate)</td>\n        </tr>\n        <tr>\n          <td>Use Case</td>\n          <td>Predictable growth</td>\n          <td>Variable workloads</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Scalability Example - Manual Scaling\n// Traditional approach: Add servers manually\n\n// Initial Setup\nconst servers = ['server1', 'server2'];\n\n// Manual scaling when needed\nfunction scaleUp() {\n  servers.push('server3');\n  servers.push('server4');\n  // Manually configure load balancer\n  // Update DNS records\n  // Deploy applications\n}\n\n// Elasticity Example - Auto Scaling\n// AWS Auto Scaling Group Configuration\n{\n  \"AutoScalingGroupName\": \"web-app-asg\",\n  \"MinSize\": 2,\n  \"MaxSize\": 10,\n  \"DesiredCapacity\": 2,\n  \"TargetGroupARNs\": [\"arn:aws:elasticloadbalancing:...\"],\n  \"HealthCheckType\": \"ELB\",\n  \"HealthCheckGracePeriod\": 300,\n  \"Metrics\": {\n    \"TargetValue\": 70.0,\n    \"PredefinedMetricType\": \"ASGAverageCPUUtilization\"\n  },\n  \"ScalingPolicies\": [\n    {\n      \"PolicyName\": \"scale-out\",\n      \"ScalingAdjustment\": 2,\n      \"AdjustmentType\": \"ChangeInCapacity\",\n      \"Cooldown\": 300,\n      \"MetricAggregationType\": \"Average\"\n    },\n    {\n      \"PolicyName\": \"scale-in\",\n      \"ScalingAdjustment\": -1,\n      \"AdjustmentType\": \"ChangeInCapacity\",\n      \"Cooldown\": 300\n    }\n  ]\n}</code></pre>\n    </div>\n\n    <h3>Scalability Without Elasticity</h3>\n    \n    <p>A system can be scalable but not elastic:</p>\n    \n    <h4>Example: Traditional Data Center</h4>\n    <ul>\n      <li><strong>Capacity:</strong> Can add more servers</li>\n      <li><strong>Process:</strong> Manual procurement and setup</li>\n      <li><strong>Timeline:</strong> Weeks or months</li>\n      <li><strong>Result:</strong> Scalable but not elastic</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Traditional Scaling Process\n1. Monitor usage trends\n2. Predict future capacity needs\n3. Budget approval process\n4. Order hardware\n5. Wait for delivery (weeks)\n6. Install and configure\n7. Deploy applications\n8. Update load balancers\n\n// Result: Scaled, but took months</code></pre>\n    </div>\n\n    <h3>Elasticity Without Scalability</h3>\n    \n    <p>A system can be elastic within limits but not infinitely scalable:</p>\n    \n    <h4>Example: Small Cloud Deployment</h4>\n    <ul>\n      <li><strong>Auto-scaling:</strong> 2-5 instances</li>\n      <li><strong>Limitation:</strong> Database bottleneck</li>\n      <li><strong>Result:</strong> Elastic but limited scalability</li>\n    </ul>\n\n    <h3>Achieving Both: Best Practices</h3>\n    \n    <h4>1. Architecture Design</h4>\n    <ul>\n      <li><strong>Stateless Services:</strong> Enable easy scaling</li>\n      <li><strong>Microservices:</strong> Independent scaling</li>\n      <li><strong>Loose Coupling:</strong> Minimize dependencies</li>\n      <li><strong>Service Mesh:</strong> Dynamic service discovery</li>\n    </ul>\n\n    <h4>2. Infrastructure</h4>\n    <ul>\n      <li><strong>Cloud Native:</strong> Built for elasticity</li>\n      <li><strong>Container Orchestration:</strong> Kubernetes, ECS</li>\n      <li><strong>Serverless:</strong> Ultimate elasticity</li>\n      <li><strong>Multi-region:</strong> Geographic scalability</li>\n    </ul>\n\n    <h4>3. Data Layer</h4>\n    <ul>\n      <li><strong>Distributed Databases:</strong> Horizontal scaling</li>\n      <li><strong>Caching Layers:</strong> Reduce database load</li>\n      <li><strong>Read Replicas:</strong> Scale read operations</li>\n      <li><strong>Sharding:</strong> Distribute data</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Elastic and Scalable Architecture\n// Kubernetes Horizontal Pod Autoscaler\n\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: web-app-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: web-app\n  minReplicas: 3\n  maxReplicas: 100\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  - type: Pods\n    pods:\n      metric:\n        name: requests_per_second\n      target:\n        type: AverageValue\n        averageValue: \"1k\"\n  behavior:\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60\n    scaleUp:\n      stabilizationWindowSeconds: 0\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 15\n      - type: Pods\n        value: 4\n        periodSeconds: 15</code></pre>\n    </div>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Netflix (Elastic and Scalable)</h4>\n    <ul>\n      <li><strong>Auto-scaling:</strong> Based on viewing patterns</li>\n      <li><strong>Predictive Scaling:</strong> Before peak hours</li>\n      <li><strong>Global Scale:</strong> Across regions</li>\n      <li><strong>Cost Optimization:</strong> Scale down at night</li>\n    </ul>\n\n    <h4>Traditional Bank (Scalable, Less Elastic)</h4>\n    <ul>\n      <li><strong>Capacity Planning:</strong> Quarterly reviews</li>\n      <li><strong>Over-provisioning:</strong> For peak days</li>\n      <li><strong>Manual Scaling:</strong> Planned maintenance</li>\n      <li><strong>Fixed Resources:</strong> Rarely scale down</li>\n    </ul>\n\n    <h3>Metrics and Monitoring</h3>\n    \n    <h4>Scalability Metrics</h4>\n    <ul>\n      <li><strong>Maximum Capacity:</strong> Peak load handling</li>\n      <li><strong>Growth Rate:</strong> Capacity over time</li>\n      <li><strong>Resource Limits:</strong> Bottlenecks</li>\n      <li><strong>Performance at Scale:</strong> Degradation</li>\n    </ul>\n\n    <h4>Elasticity Metrics</h4>\n    <ul>\n      <li><strong>Response Time:</strong> Scale-out speed</li>\n      <li><strong>Accuracy:</strong> Right-sizing precision</li>\n      <li><strong>Cost Efficiency:</strong> Resource utilization</li>\n      <li><strong>Stability:</strong> Avoiding flapping</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Monitoring Dashboard Metrics\n\n// Elasticity Metrics\n{\n  \"scaling_events\": {\n    \"scale_out\": 45,\n    \"scale_in\": 42,\n    \"avg_response_time\": \"45s\"\n  },\n  \"resource_efficiency\": {\n    \"avg_cpu_utilization\": \"68%\",\n    \"avg_memory_utilization\": \"72%\",\n    \"cost_per_request\": \"$0.0023\"\n  }\n}\n\n// Scalability Metrics\n{\n  \"capacity\": {\n    \"current_instances\": 25,\n    \"max_tested_capacity\": 1000,\n    \"requests_per_second\": 50000\n  },\n  \"performance\": {\n    \"latency_p50\": \"45ms\",\n    \"latency_p99\": \"120ms\",\n    \"error_rate\": \"0.01%\"\n  }\n}</code></pre>\n    </div>\n\n    <h3>Cost Implications</h3>\n    \n    <h4>Scalability Costs</h4>\n    <ul>\n      <li><strong>Reserved Capacity:</strong> Pre-paid resources</li>\n      <li><strong>Over-provisioning:</strong> Unused capacity</li>\n      <li><strong>Fixed Costs:</strong> Predictable billing</li>\n      <li><strong>Volume Discounts:</strong> Better rates</li>\n    </ul>\n\n    <h4>Elasticity Costs</h4>\n    <ul>\n      <li><strong>Pay-per-use:</strong> Only active resources</li>\n      <li><strong>Variable Costs:</strong> Fluctuating bills</li>\n      <li><strong>Optimization:</strong> Minimal waste</li>\n      <li><strong>Spot Instances:</strong> Cost savings</li>\n    </ul>\n\n    <h3>Implementation Strategies</h3>\n    \n    <h4>For Scalability</h4>\n    <ol>\n      <li>Design for horizontal scaling</li>\n      <li>Eliminate bottlenecks</li>\n      <li>Use distributed architectures</li>\n      <li>Plan for data growth</li>\n      <li>Test at scale</li>\n    </ol>\n\n    <h4>For Elasticity</h4>\n    <ol>\n      <li>Implement auto-scaling policies</li>\n      <li>Use cloud-native services</li>\n      <li>Monitor key metrics</li>\n      <li>Set appropriate thresholds</li>\n      <li>Test scaling behaviors</li>\n    </ol>\n\n    <h3>Future Trends</h3>\n    \n    <h4>AI-Driven Elasticity</h4>\n    <ul>\n      <li>Predictive scaling</li>\n      <li>Anomaly detection</li>\n      <li>Cost optimization</li>\n      <li>Performance tuning</li>\n    </ul>\n\n    <h4>Edge Computing</h4>\n    <ul>\n      <li>Distributed elasticity</li>\n      <li>Location-based scaling</li>\n      <li>5G integration</li>\n      <li>IoT scalability</li>\n    </ul>\n  `\n}; ","export const partitioning = {\n  id: 'partitioning',\n  title: 'Database Partitioning',\n  content: `# Database Partitioning\n\n## Definition\nDatabase partitioning is the process of dividing a large database into smaller, more manageable pieces called partitions.\n\n## Types of Partitioning\n- **Horizontal (Sharding)**: Split rows across multiple tables/servers\n- **Vertical**: Split columns into separate tables\n- **Functional**: Partition by feature or service\n- **Range**: Partition by value ranges\n- **Hash**: Partition using hash function\n- **List**: Partition by predefined lists\n\n## Benefits\n- Improved performance\n- Better scalability\n- Parallel processing\n- Easier maintenance\n- Reduced index size\n\n## Challenges\n- Complex queries across partitions\n- Rebalancing data\n- Cross-partition transactions\n- Increased complexity\n- Potential hotspots\n\n## Sharding Strategies\n- **Key-Based**: Hash the partition key\n- **Range-Based**: Partition by value ranges\n- **Directory-Based**: Lookup service for routing\n\n## Interview Questions\n**Q: What is the difference between partitioning and sharding?**\nA: Partitioning can be within a single database instance, while sharding typically involves distributing data across multiple database servers.\n\n**Q: How do you handle cross-shard queries?**\nA: Through techniques like scatter-gather, denormalization, or maintaining lookup tables.`\n}; ","export const proxies = {\n  id: 'proxies',\n  title: 'Proxies',\n  content: `\n    <h2>Proxies</h2>\n    <p>A proxy server acts as an intermediary between clients and servers, forwarding requests and responses. Proxies provide various benefits including security, performance optimization, access control, and anonymity.</p>\n\n    <h3>Types of Proxies</h3>\n    \n    <h4>1. Forward Proxy</h4>\n    <p>Sits between clients and the internet, forwarding client requests to servers.</p>\n    \n    <ul>\n      <li><strong>Client Configuration:</strong> Clients must be configured to use proxy</li>\n      <li><strong>Anonymity:</strong> Hides client IP from servers</li>\n      <li><strong>Access Control:</strong> Can restrict client access</li>\n      <li><strong>Caching:</strong> Can cache frequently accessed content</li>\n      <li><strong>Content Filtering:</strong> Can block unwanted content</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Forward Proxy Flow\n┌──────────┐     ┌─────────────┐     ┌──────────┐\n│  Client  │────>│Forward Proxy│────>│  Server  │\n│          │<────│             │<────│          │\n└──────────┘     └─────────────┘     └──────────┘\n\n// Client sees: proxy address\n// Server sees: proxy address (not client)</code></pre>\n    </div>\n\n    <h4>2. Reverse Proxy</h4>\n    <p>Sits between the internet and servers, forwarding client requests to backend servers.</p>\n    \n    <ul>\n      <li><strong>Load Balancing:</strong> Distributes requests across servers</li>\n      <li><strong>SSL Termination:</strong> Handles SSL/TLS encryption</li>\n      <li><strong>Caching:</strong> Serves cached content</li>\n      <li><strong>Security:</strong> Hides backend server details</li>\n      <li><strong>Compression:</strong> Compresses responses</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Reverse Proxy Flow\n┌──────────┐     ┌──────────────┐     ┌──────────┐\n│  Client  │────>│ Reverse Proxy│────>│ Backend  │\n│          │<────│              │<────│ Servers  │\n└──────────┘     └──────────────┘     └──────────┘\n\n// Client sees: reverse proxy address\n// Client doesn't know about backend servers</code></pre>\n    </div>\n\n    <h4>3. Transparent Proxy</h4>\n    <p>Intercepts connections without client configuration.</p>\n    \n    <ul>\n      <li><strong>No Configuration:</strong> Works without client setup</li>\n      <li><strong>Network Level:</strong> Operates at network layer</li>\n      <li><strong>Caching:</strong> Can cache transparently</li>\n      <li><strong>Monitoring:</strong> Can log all traffic</li>\n      <li><strong>Common Use:</strong> ISPs, corporate networks</li>\n    </ul>\n\n    <h4>4. SOCKS Proxy</h4>\n    <p>Operates at a lower level than HTTP proxies.</p>\n    \n    <ul>\n      <li><strong>Protocol Agnostic:</strong> Works with any protocol</li>\n      <li><strong>SOCKS4:</strong> TCP connections only</li>\n      <li><strong>SOCKS5:</strong> TCP and UDP, authentication</li>\n      <li><strong>Use Cases:</strong> Torrenting, gaming, general TCP/UDP</li>\n    </ul>\n\n    <h3>Proxy Implementation Examples</h3>\n    \n    <h4>1. HTTP Proxy Server (Node.js)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Simple HTTP Proxy Server\nconst http = require('http');\nconst httpProxy = require('http-proxy');\n\n// Create proxy instance\nconst proxy = httpProxy.createProxyServer({});\n\n// Proxy middleware\nconst proxyServer = http.createServer((req, res) => {\n  // Log requests\n  console.log(\\`Proxying: \\${req.method} \\${req.url}\\`);\n  \n  // Access control\n  if (isBlocked(req.url)) {\n    res.writeHead(403);\n    res.end('Access Denied');\n    return;\n  }\n  \n  // Add proxy headers\n  req.headers['X-Forwarded-For'] = req.connection.remoteAddress;\n  req.headers['X-Forwarded-Proto'] = 'http';\n  \n  // Forward request\n  proxy.web(req, res, {\n    target: 'http://backend-server.com',\n    changeOrigin: true\n  });\n});\n\n// Error handling\nproxy.on('error', (err, req, res) => {\n  console.error('Proxy error:', err);\n  res.writeHead(500);\n  res.end('Proxy Error');\n});\n\n// Response modification\nproxy.on('proxyRes', (proxyRes, req, res) => {\n  // Add security headers\n  proxyRes.headers['X-Frame-Options'] = 'DENY';\n  proxyRes.headers['X-Content-Type-Options'] = 'nosniff';\n});\n\nproxyServer.listen(8080);</code></pre>\n    </div>\n\n    <h4>2. Reverse Proxy with Nginx</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Nginx Reverse Proxy Configuration\nupstream backend {\n    least_conn;  # Load balancing method\n    server backend1.example.com:8080 weight=3;\n    server backend2.example.com:8080 weight=2;\n    server backend3.example.com:8080 backup;\n    \n    # Health checks\n    keepalive 32;\n    keepalive_timeout 60s;\n}\n\nserver {\n    listen 80;\n    server_name example.com;\n    \n    # SSL termination\n    listen 443 ssl http2;\n    ssl_certificate /etc/nginx/ssl/cert.pem;\n    ssl_certificate_key /etc/nginx/ssl/key.pem;\n    \n    # Security headers\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-Content-Type-Options \"nosniff\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    \n    # Caching\n    proxy_cache_path /var/cache/nginx levels=1:2 \n                     keys_zone=cache:10m max_size=1g;\n    proxy_cache_key \"$scheme$request_method$host$request_uri\";\n    \n    location / {\n        # Proxy settings\n        proxy_pass http://backend;\n        proxy_http_version 1.1;\n        \n        # Headers\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # Connection settings\n        proxy_set_header Connection \"\";\n        proxy_buffering off;\n        \n        # Timeouts\n        proxy_connect_timeout 60s;\n        proxy_send_timeout 60s;\n        proxy_read_timeout 60s;\n        \n        # Cache settings\n        proxy_cache cache;\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 404 1m;\n    }\n    \n    # WebSocket support\n    location /ws {\n        proxy_pass http://backend;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}</code></pre>\n    </div>\n\n    <h4>3. SOCKS5 Proxy Implementation</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// SOCKS5 Proxy Server (Python)\nimport socket\nimport select\nimport struct\nimport threading\n\nclass SOCKS5Proxy:\n    def __init__(self, host='0.0.0.0', port=1080):\n        self.host = host\n        self.port = port\n        self.clients = []\n        \n    def handle_client(self, client_socket, addr):\n        try:\n            # SOCKS5 greeting\n            greeting = client_socket.recv(2)\n            version, nmethods = struct.unpack(\"!BB\", greeting)\n            \n            if version != 5:\n                client_socket.close()\n                return\n            \n            # Get authentication methods\n            methods = client_socket.recv(nmethods)\n            \n            # Reply with no auth required\n            client_socket.send(b\"\\\\x05\\\\x00\")\n            \n            # Get connection request\n            version, cmd, _, address_type = struct.unpack(\n                \"!BBBB\", client_socket.recv(4)\n            )\n            \n            if cmd != 1:  # Only support CONNECT\n                client_socket.close()\n                return\n            \n            # Parse destination\n            if address_type == 1:  # IPv4\n                addr = socket.inet_ntoa(client_socket.recv(4))\n            elif address_type == 3:  # Domain\n                domain_length = client_socket.recv(1)[0]\n                addr = client_socket.recv(domain_length).decode()\n            \n            port = struct.unpack('!H', client_socket.recv(2))[0]\n            \n            # Connect to destination\n            remote_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n            remote_socket.connect((addr, port))\n            \n            # Send success response\n            reply = b\"\\\\x05\\\\x00\\\\x00\\\\x01\"\n            reply += socket.inet_aton(\"0.0.0.0\") + struct.pack(\"!H\", 0)\n            client_socket.send(reply)\n            \n            # Relay data\n            self.relay_data(client_socket, remote_socket)\n            \n        except Exception as e:\n            print(f\"Error: {e}\")\n        finally:\n            client_socket.close()\n    \n    def relay_data(self, client, remote):\n        while True:\n            ready, _, _ = select.select([client, remote], [], [])\n            \n            if client in ready:\n                data = client.recv(4096)\n                if not data:\n                    break\n                remote.send(data)\n            \n            if remote in ready:\n                data = remote.recv(4096)\n                if not data:\n                    break\n                client.send(data)\n    \n    def start(self):\n        server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        server.bind((self.host, self.port))\n        server.listen(5)\n        \n        print(f\"SOCKS5 proxy listening on {self.host}:{self.port}\")\n        \n        while True:\n            client, addr = server.accept()\n            thread = threading.Thread(\n                target=self.handle_client, \n                args=(client, addr)\n            )\n            thread.start()</code></pre>\n    </div>\n\n    <h3>Proxy Use Cases</h3>\n    \n    <h4>1. Load Balancing</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// HAProxy Load Balancing Configuration\nglobal\n    maxconn 4096\n    log 127.0.0.1 local0\n    \ndefaults\n    mode http\n    timeout connect 5000ms\n    timeout client 50000ms\n    timeout server 50000ms\n    \nfrontend web_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/site.pem\n    \n    # ACL rules\n    acl is_api path_beg /api\n    acl is_static path_beg /static\n    \n    # Route to different backends\n    use_backend api_servers if is_api\n    use_backend static_servers if is_static\n    default_backend web_servers\n    \nbackend web_servers\n    balance roundrobin\n    option httpchk GET /health\n    server web1 10.0.1.1:8080 check\n    server web2 10.0.1.2:8080 check\n    server web3 10.0.1.3:8080 check\n    \nbackend api_servers\n    balance leastconn\n    server api1 10.0.2.1:8080 check\n    server api2 10.0.2.2:8080 check\n    \nbackend static_servers\n    balance source  # Session persistence\n    server cdn1 10.0.3.1:8080 check\n    server cdn2 10.0.3.2:8080 check</code></pre>\n    </div>\n\n    <h4>2. Caching Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Varnish Caching Proxy Configuration\nvcl 4.0;\n\nbackend default {\n    .host = \"backend.example.com\";\n    .port = \"8080\";\n    .probe = {\n        .url = \"/health\";\n        .interval = 5s;\n        .timeout = 1s;\n        .window = 5;\n        .threshold = 3;\n    }\n}\n\nsub vcl_recv {\n    # Normalize URL\n    set req.url = regsub(req.url, \"#.*$\", \"\");\n    set req.url = regsub(req.url, \"\\\\?.*$\", \"\");\n    \n    # Remove cookies for static content\n    if (req.url ~ \"\\\\.(jpg|jpeg|gif|png|ico|css|js|html)$\") {\n        unset req.http.Cookie;\n    }\n    \n    # Cache different versions based on device\n    if (req.http.User-Agent ~ \"Mobile\") {\n        set req.http.X-Device = \"mobile\";\n    } else {\n        set req.http.X-Device = \"desktop\";\n    }\n}\n\nsub vcl_backend_response {\n    # Set cache TTL based on content type\n    if (bereq.url ~ \"\\\\.(jpg|jpeg|gif|png|ico)$\") {\n        set beresp.ttl = 7d;\n    } elsif (bereq.url ~ \"\\\\.(css|js)$\") {\n        set beresp.ttl = 1d;\n    } elsif (bereq.url ~ \"\\\\.html$\") {\n        set beresp.ttl = 1h;\n    }\n    \n    # Enable ESI processing\n    if (beresp.http.Surrogate-Control ~ \"ESI/1.0\") {\n        set beresp.do_esi = true;\n    }\n}\n\nsub vcl_deliver {\n    # Add debug headers\n    if (obj.hits > 0) {\n        set resp.http.X-Cache = \"HIT\";\n        set resp.http.X-Cache-Hits = obj.hits;\n    } else {\n        set resp.http.X-Cache = \"MISS\";\n    }\n}</code></pre>\n    </div>\n\n    <h4>3. Security Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Web Application Firewall (ModSecurity)\n# Basic security rules\nSecRuleEngine On\nSecRequestBodyAccess On\nSecResponseBodyAccess On\n\n# Limit request size\nSecRequestBodyLimit 13107200\nSecRequestBodyNoFilesLimit 131072\n\n# Block SQL injection attempts\nSecRule ARGS \"@detectSQLi\" \\\\\n    \"id:1001,\\\\\n    phase:2,\\\\\n    block,\\\\\n    msg:'SQL Injection Attack Detected',\\\\\n    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\\\\\n    severity:'CRITICAL'\"\n\n# Block XSS attempts\nSecRule ARGS|REQUEST_HEADERS \"@detectXSS\" \\\\\n    \"id:1002,\\\\\n    phase:2,\\\\\n    block,\\\\\n    msg:'XSS Attack Detected',\\\\\n    severity:'CRITICAL'\"\n\n# Rate limiting\nSecRule IP:REQUEST_COUNTER \"@gt 100\" \\\\\n    \"id:1003,\\\\\n    phase:1,\\\\\n    block,\\\\\n    msg:'Rate limit exceeded',\\\\\n    chain\"\nSecRule REQUEST_LINE \".*\" \\\\\n    \"setvar:IP.REQUEST_COUNTER=+1,\\\\\n    expirevar:IP.REQUEST_COUNTER=60\"\n\n# Block suspicious user agents\nSecRule REQUEST_HEADERS:User-Agent \"@pmFromFile bad-user-agents.txt\" \\\\\n    \"id:1004,\\\\\n    phase:1,\\\\\n    block,\\\\\n    msg:'Malicious User-Agent detected'\"</code></pre>\n    </div>\n\n    <h3>Proxy Chaining</h3>\n    \n    <p>Multiple proxies can be chained for enhanced functionality:</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Proxy Chain Architecture\n┌────────┐   ┌─────────┐   ┌──────────┐   ┌─────────┐   ┌────────┐\n│ Client │──>│ Forward │──>│ Caching  │──>│ Reverse │──>│ Server │\n│        │   │ Proxy   │   │ Proxy    │   │ Proxy   │   │        │\n└────────┘   └─────────┘   └──────────┘   └─────────┘   └────────┘\n              ↓              ↓               ↓\n           Auth &         Cache           Load Balance\n           Filter         Content         & Security</code></pre>\n    </div>\n\n    <h3>Performance Considerations</h3>\n    \n    <h4>1. Connection Pooling</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Connection Pool Implementation\nclass ProxyConnectionPool {\n  constructor(maxConnections = 100) {\n    this.pool = new Map();\n    this.maxConnections = maxConnections;\n  }\n  \n  getConnection(host, port) {\n    const key = \\`\\${host}:\\${port}\\`;\n    let connections = this.pool.get(key) || [];\n    \n    // Reuse existing connection\n    const available = connections.find(c => !c.inUse);\n    if (available) {\n      available.inUse = true;\n      return available.socket;\n    }\n    \n    // Create new connection if under limit\n    if (connections.length < this.maxConnections) {\n      const socket = net.connect(port, host);\n      connections.push({\n        socket,\n        inUse: true,\n        created: Date.now()\n      });\n      this.pool.set(key, connections);\n      return socket;\n    }\n    \n    throw new Error('Connection pool exhausted');\n  }\n  \n  releaseConnection(host, port, socket) {\n    const key = \\`\\${host}:\\${port}\\`;\n    const connections = this.pool.get(key) || [];\n    const conn = connections.find(c => c.socket === socket);\n    if (conn) {\n      conn.inUse = false;\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h4>2. Caching Strategies</h4>\n    <ul>\n      <li><strong>Cache-Control Headers:</strong> Respect HTTP caching directives</li>\n      <li><strong>Vary Headers:</strong> Cache different versions based on headers</li>\n      <li><strong>Purging:</strong> Invalidate cached content when updated</li>\n      <li><strong>Compression:</strong> Store and serve compressed content</li>\n    </ul>\n\n    <h3>Security Best Practices</h3>\n    \n    <h4>1. Authentication</h4>\n    <ul>\n      <li><strong>Basic Auth:</strong> Username/password</li>\n      <li><strong>Digest Auth:</strong> Hashed credentials</li>\n      <li><strong>OAuth:</strong> Token-based authentication</li>\n      <li><strong>Client Certificates:</strong> Mutual TLS</li>\n    </ul>\n\n    <h4>2. Access Control</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// IP-based Access Control\nconst allowedIPs = ['192.168.1.0/24', '10.0.0.0/8'];\nconst blockedDomains = ['malicious.com', 'spam.org'];\n\nfunction checkAccess(req) {\n  // Check IP whitelist\n  const clientIP = req.connection.remoteAddress;\n  if (!isIPAllowed(clientIP, allowedIPs)) {\n    return { allowed: false, reason: 'IP not whitelisted' };\n  }\n  \n  // Check domain blacklist\n  const url = new URL(req.url);\n  if (blockedDomains.includes(url.hostname)) {\n    return { allowed: false, reason: 'Domain blocked' };\n  }\n  \n  // Check rate limits\n  if (exceedsRateLimit(clientIP)) {\n    return { allowed: false, reason: 'Rate limit exceeded' };\n  }\n  \n  return { allowed: true };\n}</code></pre>\n    </div>\n\n    <h4>3. Logging and Monitoring</h4>\n    <ul>\n      <li><strong>Access Logs:</strong> All requests and responses</li>\n      <li><strong>Error Logs:</strong> Failed connections, timeouts</li>\n      <li><strong>Performance Metrics:</strong> Latency, throughput</li>\n      <li><strong>Security Events:</strong> Blocked requests, auth failures</li>\n    </ul>\n\n    <h3>Common Proxy Headers</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Header</th>\n          <th>Purpose</th>\n          <th>Example</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>X-Forwarded-For</td>\n          <td>Original client IP</td>\n          <td>203.0.113.195, 70.41.3.18</td>\n        </tr>\n        <tr>\n          <td>X-Forwarded-Proto</td>\n          <td>Original protocol</td>\n          <td>https</td>\n        </tr>\n        <tr>\n          <td>X-Forwarded-Host</td>\n          <td>Original host</td>\n          <td>example.com</td>\n        </tr>\n        <tr>\n          <td>X-Real-IP</td>\n          <td>Client IP (nginx)</td>\n          <td>203.0.113.195</td>\n        </tr>\n        <tr>\n          <td>Via</td>\n          <td>Proxy chain</td>\n          <td>1.1 proxy1, 1.1 proxy2</td>\n        </tr>\n        <tr>\n          <td>Forwarded</td>\n          <td>RFC 7239 standard</td>\n          <td>for=192.0.2.60;proto=http</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}; ","export const cloudComputing = {\n  id: 'cloud-computing',\n  title: 'Cloud Computing',\n  content: `# Cloud Computing\n\n## Definition\nCloud computing is the delivery of computing services over the internet, providing on-demand access to resources without direct management.\n\n## Service Models\n- **IaaS (Infrastructure as a Service)**: Virtual machines, storage, networking\n- **PaaS (Platform as a Service)**: Development platforms, databases\n- **SaaS (Software as a Service)**: Complete applications\n- **FaaS (Function as a Service)**: Serverless computing\n\n## Deployment Models\n- **Public Cloud**: Shared infrastructure, third-party providers\n- **Private Cloud**: Dedicated infrastructure for single organization\n- **Hybrid Cloud**: Combination of public and private\n- **Multi-Cloud**: Multiple cloud providers\n- **Community Cloud**: Shared by specific community\n\n## Key Characteristics\n- **On-Demand Self-Service**: Provision resources automatically\n- **Broad Network Access**: Available over network\n- **Resource Pooling**: Shared resources across users\n- **Rapid Elasticity**: Scale up/down quickly\n- **Measured Service**: Pay-per-use pricing\n\n## Major Cloud Providers\n- **Amazon Web Services (AWS)**: Market leader, comprehensive services\n- **Microsoft Azure**: Enterprise-focused, hybrid capabilities\n- **Google Cloud Platform (GCP)**: Data analytics, AI/ML strengths\n- **IBM Cloud**: Enterprise, hybrid cloud solutions\n- **Oracle Cloud**: Database and enterprise applications\n\n## Benefits\n- **Cost Efficiency**: Reduce capital expenditure\n- **Scalability**: Scale resources based on demand\n- **Flexibility**: Access from anywhere\n- **Reliability**: High availability and redundancy\n- **Innovation**: Access to latest technologies\n\n## Challenges\n- **Security Concerns**: Data privacy and compliance\n- **Vendor Lock-in**: Dependency on specific providers\n- **Network Dependency**: Requires internet connectivity\n- **Cost Management**: Unexpected usage costs\n- **Compliance**: Regulatory requirements\n\n## Cloud-Native Architecture\n- **Microservices**: Decomposed applications\n- **Containers**: Portable application packaging\n- **DevOps**: Continuous integration/deployment\n- **API-First**: Service-oriented design\n- **Immutable Infrastructure**: Replace vs modify\n\n## Migration Strategies\n- **Lift and Shift**: Move existing applications as-is\n- **Refactor**: Modify applications for cloud\n- **Rebuild**: Redesign applications for cloud-native\n- **Replace**: Adopt SaaS solutions\n\n## Interview Questions\n**Q: What's the difference between IaaS, PaaS, and SaaS?**\nA: IaaS provides infrastructure (VMs, storage), PaaS provides development platforms, and SaaS provides complete applications ready to use.`\n}; ","export const authentication = {\n  id: 'authentication',\n  title: 'Authentication',\n  content: `# Authentication\n\n## Definition\nAuthentication is the process of verifying the identity of a user, device, or system attempting to access a resource.\n\n## Authentication Factors\n- **Something you know**: Passwords, PINs\n- **Something you have**: Tokens, smart cards, phones\n- **Something you are**: Biometrics (fingerprint, face, voice)\n- **Something you do**: Behavioral patterns\n- **Somewhere you are**: Location-based authentication\n\n## Authentication Methods\n- **Password-based**: Traditional username/password\n- **Token-based**: JWT, OAuth tokens\n- **Certificate-based**: Digital certificates\n- **Biometric**: Fingerprint, facial recognition\n- **Multi-factor (MFA)**: Combination of factors\n\n## Session Management\n- **Session Tokens**: Server-side session storage\n- **JWT**: Stateless token-based authentication\n- **Session Timeout**: Automatic logout after inactivity\n- **Session Fixation**: Regenerate session IDs\n\n## OAuth 2.0 Flow\n1. Authorization request\n2. User grants permission\n3. Authorization code returned\n4. Exchange code for access token\n5. Use token to access resources\n\n## Security Considerations\n- **Password Hashing**: bcrypt, Argon2\n- **Salt**: Random data to prevent rainbow tables\n- **Rate Limiting**: Prevent brute force attacks\n- **Account Lockout**: Temporary disable after failed attempts\n- **Secure Transmission**: HTTPS only\n\n## Common Vulnerabilities\n- Weak passwords\n- Session hijacking\n- Credential stuffing\n- Password spraying\n- Session fixation\n\n## Interview Questions\n**Q: What's the difference between authentication and authorization?**\nA: Authentication verifies who you are, while authorization determines what you're allowed to do.`\n}; ","export const authorization = {\n  id: 'authorization',\n  title: 'Authorization',\n  content: `# Authorization\n\n## Definition\nAuthorization is the process of determining what actions or resources an authenticated user is permitted to access.\n\n## Authorization Models\n- **Role-Based Access Control (RBAC)**: Permissions based on roles\n- **Attribute-Based Access Control (ABAC)**: Dynamic access based on attributes\n- **Discretionary Access Control (DAC)**: Resource owners control access\n- **Mandatory Access Control (MAC)**: System-enforced access rules\n\n## RBAC Components\n- **Users**: Individual entities\n- **Roles**: Job functions or responsibilities\n- **Permissions**: Specific actions on resources\n- **Role Assignment**: Users assigned to roles\n- **Permission Assignment**: Permissions assigned to roles\n\n## Authorization Strategies\n- **Access Control Lists (ACL)**: Resource-specific permissions\n- **Capability-based**: Tokens represent permissions\n- **Policy-based**: Rules engine for access decisions\n- **Context-aware**: Consider time, location, device\n\n## Implementation Patterns\n- **Middleware**: Check permissions before request processing\n- **Decorators/Annotations**: Method-level authorization\n- **Policy Engines**: Centralized authorization logic\n- **API Gateway**: Centralized authorization point\n\n## Common Patterns\n- **Least Privilege**: Minimum necessary permissions\n- **Separation of Duties**: Divide critical functions\n- **Defense in Depth**: Multiple authorization layers\n- **Just-in-Time Access**: Temporary elevated permissions\n\n## OAuth 2.0 Scopes\nDefine specific permissions for API access\n\n## JWT Claims\nInclude authorization information in tokens\n\n## Best Practices\n- Regular permission audits\n- Principle of least privilege\n- Clear permission hierarchies\n- Audit logging\n- Regular access reviews\n\n## Interview Questions\n**Q: Explain the difference between RBAC and ABAC.**\nA: RBAC uses predefined roles, while ABAC makes dynamic decisions based on user, resource, and environmental attributes.`\n}; ","export const jwt = {\n  id: 'jwt',\n  title: 'JWT (JSON Web Token)',\n  content: `# JWT (JSON Web Token)\n\n## Definition\nJWT is a compact, URL-safe token format for securely transmitting information between parties as a JSON object.\n\n## JWT Structure\nThree parts separated by dots (.):\n1. **Header**: Algorithm and token type\n2. **Payload**: Claims (data)\n3. **Signature**: Verify integrity\n\n\\`\\`\\`\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n\\`\\`\\`\n\n## Header\n\\`\\`\\`json\n{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n\\`\\`\\`\n\n## Payload Claims\n- **Registered**: iss, exp, sub, aud, iat\n- **Public**: Defined in IANA registry\n- **Private**: Custom claims\n\n## Common Claims\n- **iss**: Issuer\n- **exp**: Expiration time\n- **sub**: Subject\n- **aud**: Audience\n- **iat**: Issued at\n- **nbf**: Not before\n\n## Advantages\n- **Stateless**: No server-side storage needed\n- **Self-contained**: All info in token\n- **Compact**: URL-safe encoding\n- **Secure**: Cryptographically signed\n\n## Security Considerations\n- Use HTTPS only\n- Short expiration times\n- Secure storage (httpOnly cookies)\n- Validate signatures\n- Check expiration\n\n## Use Cases\n- **Authentication**: User login tokens\n- **Authorization**: Access control\n- **Information Exchange**: Secure data transfer\n- **Single Sign-On**: Cross-domain authentication\n\n## Interview Questions\n**Q: What are the security risks of using JWT?**\nA: Token theft, no server-side revocation, payload visibility, and potential for replay attacks if not properly secured.`\n}; ","export const oauth = {\n  id: 'oauth',\n  title: 'OAuth 2.0',\n  content: `# OAuth 2.0\n\n## Definition\nOAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts on behalf of the user.\n\n## Key Roles\n- **Resource Owner**: User who owns the data\n- **Client**: Application requesting access\n- **Resource Server**: API server hosting protected resources\n- **Authorization Server**: Issues access tokens\n\n## Grant Types\n- **Authorization Code**: Most secure for web apps\n- **Implicit**: For browser-based apps (deprecated)\n- **Resource Owner Password**: Direct credentials (discouraged)\n- **Client Credentials**: Machine-to-machine\n- **Refresh Token**: Obtain new access tokens\n\n## Authorization Code Flow\n1. Client redirects user to authorization server\n2. User authenticates and grants permission\n3. Authorization server redirects back with code\n4. Client exchanges code for access token\n5. Client uses token to access protected resources\n\n## Tokens\n- **Access Token**: Short-lived token for API access\n- **Refresh Token**: Long-lived token to get new access tokens\n- **ID Token**: OpenID Connect identity information\n\n## Scopes\nDefine the level of access requested:\n- read:profile\n- write:posts\n- admin:users\n\n## Security Best Practices\n- Use HTTPS everywhere\n- Validate redirect URIs\n- Short-lived access tokens\n- Secure token storage\n- PKCE for public clients\n\n## Common Vulnerabilities\n- Authorization code interception\n- Redirect URI manipulation\n- Token leakage\n- CSRF attacks\n\n## OpenID Connect\nExtension of OAuth 2.0 for authentication, adds ID tokens\n\n## Interview Questions\n**Q: What's the difference between OAuth and OpenID Connect?**\nA: OAuth is for authorization (what you can do), while OpenID Connect adds authentication (who you are) on top of OAuth.`\n}; ","export const oauth2 = {\n  id: \"oauth2\",\n  title: \"OAuth 2.0\",\n  content: `\n    <h2>OAuth 2.0</h2>\n    <p>OAuth 2.0 is an authorization framework that enables applications to obtain limited access to user accounts on an HTTP service without exposing user credentials.</p>\n\n    <h3>OAuth 2.0 Flow Components</h3>\n    \n    <h4>Authorization Server</h4>\n    <p>The server that authenticates the user and issues access tokens after getting proper authorization. Examples include Google, Facebook, GitHub authorization servers.</p>\n\n    <h4>Access Token</h4>\n    <p>A credential that represents the authorization to access protected resources. It's typically a string that the client uses to access the resource server.</p>\n    <ul>\n      <li><strong>Scope:</strong> Defines the level of access granted</li>\n      <li><strong>Expiration:</strong> Tokens have limited lifetime for security</li>\n      <li><strong>Format:</strong> Can be JWT or opaque string</li>\n    </ul>\n\n    <h4>Refresh Token</h4>\n    <p>A long-lived credential used to obtain new access tokens when the current access token expires, without requiring the user to re-authenticate.</p>\n    <ul>\n      <li><strong>Longer Lifetime:</strong> Typically valid for days, weeks, or months</li>\n      <li><strong>Security:</strong> Must be stored securely by the client</li>\n      <li><strong>Rotation:</strong> May be rotated when used to obtain new access tokens</li>\n    </ul>\n\n    <h3>OAuth 2.0 Grant Types</h3>\n    \n    <h4>1. Authorization Code Grant</h4>\n    <p>Most secure flow for server-side applications. The client receives an authorization code that is exchanged for an access token.</p>\n    <div class=\"code-block\">\n      <label>FLOW</label>\n      <pre>1. User → Authorization Server (login)\n2. Authorization Server → Client (authorization code)\n3. Client → Authorization Server (code + client secret)\n4. Authorization Server → Client (access token + refresh token)</pre>\n    </div>\n\n    <h4>2. Client Credentials Grant</h4>\n    <p>Used for server-to-server authentication where no user interaction is required.</p>\n    <div class=\"code-block\">\n      <label>FLOW</label>\n      <pre>1. Client → Authorization Server (client credentials)\n2. Authorization Server → Client (access token)</pre>\n    </div>\n\n    <h4>3. Resource Owner Password Credentials Grant</h4>\n    <p>Used when the client is highly trusted. The user provides credentials directly to the client.</p>\n    <div class=\"info-note\">\n      <strong>⚠️ Security Warning:</strong> This grant type should only be used when other flows are not viable, as it requires the client to handle user credentials.\n    </div>\n\n    <h4>4. Implicit Grant (Deprecated)</h4>\n    <p>Previously used for browser-based applications, now deprecated in favor of Authorization Code with PKCE.</p>\n\n    <h3>OAuth 2.0 Security Extensions</h3>\n    \n    <h4>PKCE (Proof Key for Code Exchange)</h4>\n    <p>Security extension that prevents authorization code interception attacks, especially important for mobile and single-page applications.</p>\n    <ul>\n      <li><strong>Code Verifier:</strong> Random string generated by client</li>\n      <li><strong>Code Challenge:</strong> SHA256 hash of code verifier</li>\n      <li><strong>Verification:</strong> Authorization server verifies the code verifier matches the challenge</li>\n    </ul>\n\n    <h3>OAuth 2.0 vs OAuth 1.0</h3>\n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>OAuth 1.0</th>\n          <th>OAuth 2.0</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Complexity</strong></td>\n          <td>Complex signature requirements</td>\n          <td>Simpler, relies on HTTPS</td>\n        </tr>\n        <tr>\n          <td><strong>Transport Security</strong></td>\n          <td>Built-in signature mechanism</td>\n          <td>Requires HTTPS</td>\n        </tr>\n        <tr>\n          <td><strong>Token Types</strong></td>\n          <td>Single token type</td>\n          <td>Access tokens + refresh tokens</td>\n        </tr>\n        <tr>\n          <td><strong>Mobile Support</strong></td>\n          <td>Poor</td>\n          <td>Better with PKCE</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Common OAuth 2.0 Scopes</h3>\n    <ul>\n      <li><strong>openid:</strong> OpenID Connect authentication</li>\n      <li><strong>profile:</strong> Access to user profile information</li>\n      <li><strong>email:</strong> Access to user email address</li>\n      <li><strong>read:</strong> Read-only access to resources</li>\n      <li><strong>write:</strong> Write access to resources</li>\n    </ul>\n\n    <div class=\"reference-links\">\n      <h4>📚 References</h4>\n      <ul>\n        <li><a href=\"https://tools.ietf.org/html/rfc6749\" target=\"_blank\">RFC 6749 - OAuth 2.0 Authorization Framework</a></li>\n        <li><a href=\"https://oauth.net/2/\" target=\"_blank\">OAuth 2.0 Official Website</a></li>\n        <li><a href=\"https://tools.ietf.org/html/rfc7636\" target=\"_blank\">RFC 7636 - PKCE Extension</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const rbac = {\n  id: 'rbac',\n  title: 'Role-Based Access Control (RBAC)',\n  content: `\n    <h2>Role-Based Access Control (RBAC)</h2>\n    <p>RBAC is a security model that restricts system access to authorized users based on their roles within an organization, providing a structured approach to managing permissions and access rights.</p>\n\n    <h3>Core Components</h3>\n    \n    <h4>1. Users</h4>\n    <ul>\n      <li>Individual entities that need access to the system</li>\n      <li>Can be human users, service accounts, or applications</li>\n      <li>Assigned one or more roles</li>\n      <li>Inherit permissions through role assignments</li>\n    </ul>\n\n    <h4>2. Roles</h4>\n    <ul>\n      <li>Named collections of permissions</li>\n      <li>Represent job functions or responsibilities</li>\n      <li>Can be hierarchical (role inheritance)</li>\n      <li>Examples: Admin, Manager, Editor, Viewer</li>\n    </ul>\n\n    <h4>3. Permissions</h4>\n    <ul>\n      <li>Specific access rights to resources or operations</li>\n      <li>Granular actions like read, write, delete, execute</li>\n      <li>Applied to specific resources or resource types</li>\n      <li>Examples: read_users, write_posts, delete_comments</li>\n    </ul>\n\n    <h4>4. Resources</h4>\n    <ul>\n      <li>Objects or entities being protected</li>\n      <li>Can be data, functions, or system components</li>\n      <li>May have hierarchical relationships</li>\n      <li>Examples: files, database records, API endpoints</li>\n    </ul>\n\n    <h3>RBAC Model Implementation</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Basic RBAC data structures\nclass User {\n  constructor(id, username, roles = []) {\n    this.id = id;\n    this.username = username;\n    this.roles = roles; // Array of role names\n  }\n}\n\nclass Role {\n  constructor(name, permissions = [], parentRoles = []) {\n    this.name = name;\n    this.permissions = permissions; // Array of permission names\n    this.parentRoles = parentRoles; // Role inheritance\n  }\n}\n\nclass Permission {\n  constructor(name, resource, action) {\n    this.name = name;\n    this.resource = resource; // Resource type or specific resource\n    this.action = action; // read, write, delete, etc.\n  }\n}\n\n// RBAC Manager\nclass RBACManager {\n  constructor() {\n    this.users = new Map();\n    this.roles = new Map();\n    this.permissions = new Map();\n  }\n\n  // Check if user has permission\n  hasPermission(userId, permissionName) {\n    const user = this.users.get(userId);\n    if (!user) return false;\n\n    // Check all user roles (including inherited)\n    const allPermissions = this.getUserPermissions(user);\n    return allPermissions.has(permissionName);\n  }\n\n  // Get all permissions for a user\n  getUserPermissions(user) {\n    const permissions = new Set();\n    \n    for (const roleName of user.roles) {\n      const rolePermissions = this.getRolePermissions(roleName);\n      rolePermissions.forEach(p => permissions.add(p));\n    }\n    \n    return permissions;\n  }\n\n  // Get permissions for a role (including inherited)\n  getRolePermissions(roleName) {\n    const permissions = new Set();\n    const visited = new Set();\n    \n    const collectPermissions = (currentRoleName) => {\n      if (visited.has(currentRoleName)) return;\n      visited.add(currentRoleName);\n      \n      const role = this.roles.get(currentRoleName);\n      if (!role) return;\n      \n      // Add direct permissions\n      role.permissions.forEach(p => permissions.add(p));\n      \n      // Add inherited permissions\n      role.parentRoles.forEach(parentRole => \n        collectPermissions(parentRole)\n      );\n    };\n    \n    collectPermissions(roleName);\n    return permissions;\n  }\n}</code></pre>\n    </div>\n\n    <h3>Role Hierarchy</h3>\n\n    <h4>Hierarchical RBAC</h4>\n    <ul>\n      <li>Roles can inherit permissions from parent roles</li>\n      <li>Reduces permission duplication</li>\n      <li>Reflects organizational structure</li>\n      <li>Senior roles inherit junior role permissions</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Role hierarchy example\nconst permissions = {\n  'read_posts': new Permission('read_posts', 'posts', 'read'),\n  'write_posts': new Permission('write_posts', 'posts', 'write'),\n  'delete_posts': new Permission('delete_posts', 'posts', 'delete'),\n  'manage_users': new Permission('manage_users', 'users', 'manage'),\n  'system_admin': new Permission('system_admin', 'system', 'admin')\n};\n\nconst roles = {\n  'viewer': new Role('viewer', ['read_posts']),\n  'editor': new Role('editor', ['write_posts'], ['viewer']), // Inherits read_posts\n  'moderator': new Role('moderator', ['delete_posts'], ['editor']), // Inherits read, write\n  'admin': new Role('admin', ['manage_users'], ['moderator']), // Inherits all previous\n  'super_admin': new Role('super_admin', ['system_admin'], ['admin'])\n};\n\n// Usage\nconst rbac = new RBACManager();\nObject.values(roles).forEach(role => rbac.roles.set(role.name, role));\n\nconst user = new User(1, 'john_doe', ['editor']);\nrbac.users.set(user.id, user);\n\nconsole.log(rbac.hasPermission(1, 'read_posts')); // true (inherited)\nconsole.log(rbac.hasPermission(1, 'write_posts')); // true (direct)\nconsole.log(rbac.hasPermission(1, 'delete_posts')); // false</code></pre>\n    </div>\n\n    <h3>Advanced RBAC Patterns</h3>\n\n    <h4>Attribute-Based Access Control (ABAC) Integration</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// RBAC with contextual attributes\nclass ContextualRBAC extends RBACManager {\n  hasPermission(userId, permissionName, context = {}) {\n    const user = this.users.get(userId);\n    if (!user) return false;\n\n    // Basic RBAC check\n    const hasBasicPermission = super.hasPermission(userId, permissionName);\n    if (!hasBasicPermission) return false;\n\n    // Additional contextual checks\n    return this.checkContextualRules(user, permissionName, context);\n  }\n\n  checkContextualRules(user, permission, context) {\n    // Time-based access\n    if (context.time && !this.isWithinAllowedHours(user, context.time)) {\n      return false;\n    }\n\n    // Location-based access\n    if (context.location && !this.isAllowedLocation(user, context.location)) {\n      return false;\n    }\n\n    // Resource ownership\n    if (context.resourceOwner && context.resourceOwner !== user.id) {\n      return this.hasElevatedPermission(user, permission);\n    }\n\n    return true;\n  }\n\n  isWithinAllowedHours(user, currentTime) {\n    // Check if user can access during current time\n    const userRoles = user.roles;\n    return userRoles.includes('admin') || this.isBusinessHours(currentTime);\n  }\n}</code></pre>\n    </div>\n\n    <h4>Dynamic Role Assignment</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Dynamic roles based on conditions\nclass DynamicRBAC extends RBACManager {\n  getUserRoles(userId, context = {}) {\n    const user = this.users.get(userId);\n    if (!user) return [];\n\n    let roles = [...user.roles]; // Static roles\n\n    // Add dynamic roles based on context\n    if (context.projectId) {\n      const projectRoles = this.getProjectRoles(userId, context.projectId);\n      roles = [...roles, ...projectRoles];\n    }\n\n    if (context.department) {\n      const deptRoles = this.getDepartmentRoles(userId, context.department);\n      roles = [...roles, ...deptRoles];\n    }\n\n    return roles;\n  }\n\n  hasPermission(userId, permissionName, context = {}) {\n    const dynamicRoles = this.getUserRoles(userId, context);\n    const tempUser = { ...this.users.get(userId), roles: dynamicRoles };\n    \n    const allPermissions = this.getUserPermissions(tempUser);\n    return allPermissions.has(permissionName);\n  }\n}</code></pre>\n    </div>\n\n    <h3>RBAC in Web Applications</h3>\n\n    <h4>Middleware Implementation</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Express.js RBAC middleware\nfunction requirePermission(permissionName) {\n  return async (req, res, next) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ error: 'Authentication required' });\n      }\n\n      const context = {\n        time: new Date(),\n        location: req.ip,\n        resourceId: req.params.id,\n        method: req.method\n      };\n\n      const hasPermission = rbac.hasPermission(userId, permissionName, context);\n      \n      if (!hasPermission) {\n        return res.status(403).json({ \n          error: 'Insufficient permissions',\n          required: permissionName \n        });\n      }\n\n      next();\n    } catch (error) {\n      res.status(500).json({ error: 'Authorization check failed' });\n    }\n  };\n}\n\n// Usage in routes\napp.get('/api/posts', \n  authenticate, \n  requirePermission('read_posts'), \n  getPosts\n);\n\napp.post('/api/posts', \n  authenticate, \n  requirePermission('write_posts'), \n  createPost\n);\n\napp.delete('/api/posts/:id', \n  authenticate, \n  requirePermission('delete_posts'), \n  deletePost\n);</code></pre>\n    </div>\n\n    <h4>Frontend Integration</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// React component with RBAC\nimport { usePermissions } from './hooks/usePermissions';\n\nfunction PostActions({ post }) {\n  const { hasPermission } = usePermissions();\n\n  return (\n    <div className=\"post-actions\">\n      {hasPermission('read_posts') && (\n        <button onClick={() => viewPost(post.id)}>View</button>\n      )}\n      \n      {hasPermission('write_posts') && (\n        <button onClick={() => editPost(post.id)}>Edit</button>\n      )}\n      \n      {hasPermission('delete_posts') && (\n        <button onClick={() => deletePost(post.id)}>Delete</button>\n      )}\n    </div>\n  );\n}\n\n// Custom hook for permissions\nfunction usePermissions() {\n  const { user } = useAuth();\n  \n  const hasPermission = (permissionName, context = {}) => {\n    return rbac.hasPermission(user.id, permissionName, context);\n  };\n\n  return { hasPermission };\n}</code></pre>\n    </div>\n\n    <h3>Database Schema Design</h3>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>-- RBAC database schema\nCREATE TABLE users (\n  id SERIAL PRIMARY KEY,\n  username VARCHAR(255) UNIQUE NOT NULL,\n  email VARCHAR(255) UNIQUE NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE roles (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) UNIQUE NOT NULL,\n  description TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE permissions (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) UNIQUE NOT NULL,\n  resource VARCHAR(255) NOT NULL,\n  action VARCHAR(255) NOT NULL,\n  description TEXT\n);\n\n-- Many-to-many relationships\nCREATE TABLE user_roles (\n  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,\n  role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE,\n  assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  assigned_by INTEGER REFERENCES users(id),\n  PRIMARY KEY (user_id, role_id)\n);\n\nCREATE TABLE role_permissions (\n  role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE,\n  permission_id INTEGER REFERENCES permissions(id) ON DELETE CASCADE,\n  PRIMARY KEY (role_id, permission_id)\n);\n\n-- Role hierarchy\nCREATE TABLE role_hierarchy (\n  parent_role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE,\n  child_role_id INTEGER REFERENCES roles(id) ON DELETE CASCADE,\n  PRIMARY KEY (parent_role_id, child_role_id)\n);</code></pre>\n    </div>\n\n    <h3>Best Practices</h3>\n\n    <h4>Role Design Principles</h4>\n    <ul>\n      <li><strong>Principle of Least Privilege:</strong> Grant minimum necessary permissions</li>\n      <li><strong>Role Clarity:</strong> Roles should have clear, understandable purposes</li>\n      <li><strong>Separation of Duties:</strong> Distribute sensitive operations across roles</li>\n      <li><strong>Regular Review:</strong> Periodically audit roles and permissions</li>\n    </ul>\n\n    <h4>Implementation Guidelines</h4>\n    <ul>\n      <li>Cache permission checks for performance</li>\n      <li>Log all authorization decisions for auditing</li>\n      <li>Implement role delegation and temporary assignments</li>\n      <li>Support bulk operations for role management</li>\n      <li>Provide clear error messages for access denials</li>\n      <li>Design for scalability with large user bases</li>\n    </ul>\n\n    <h3>Common Challenges</h3>\n\n    <h4>Role Explosion</h4>\n    <ul>\n      <li><strong>Problem:</strong> Too many granular roles</li>\n      <li><strong>Solution:</strong> Use role composition and inheritance</li>\n    </ul>\n\n    <h4>Permission Creep</h4>\n    <ul>\n      <li><strong>Problem:</strong> Users accumulate unnecessary permissions</li>\n      <li><strong>Solution:</strong> Regular access reviews and role cleanup</li>\n    </ul>\n\n    <h4>Complex Hierarchies</h4>\n    <ul>\n      <li><strong>Problem:</strong> Overly complex role inheritance</li>\n      <li><strong>Solution:</strong> Keep hierarchies shallow and well-documented</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>RBAC provides a scalable and manageable approach to access control by organizing permissions around roles. Success depends on thoughtful role design that reflects your organization's structure and security requirements.</p>\n    </div>\n  `\n}; ","export const keyExchange = {\n  id: 'key-exchange',\n  title: 'Key Exchange Algorithms',\n  content: `\n    <h2>Key Exchange Algorithms</h2>\n    <p>Key exchange is the process by which cryptographic keys (private key) are securely exchanged between parties to enable secure communication and establish a shared secret key for encryption and decryption over an insecure communication channel.</p>\n\n    <h3>Diffie-Hellman Key Exchange</h3>\n    <ul>\n      <li>First published public key algorithm (1976)</li>\n      <li>Allows two parties to establish a shared secret over an insecure channel</li>\n      <li>Based on the difficulty of computing discrete logarithms</li>\n      <li>Vulnerable to man-in-the-middle attacks without authentication</li>\n      <li>Forms the basis for many modern key exchange protocols</li>\n    </ul>\n\n    <h4>How Diffie-Hellman Works</h4>\n    <ol>\n      <li>Alice and Bob agree on public parameters (prime p and generator g)</li>\n      <li>Alice chooses private key a, computes A = g^a mod p, sends A to Bob</li>\n      <li>Bob chooses private key b, computes B = g^b mod p, sends B to Alice</li>\n      <li>Alice computes shared secret: s = B^a mod p</li>\n      <li>Bob computes shared secret: s = A^b mod p</li>\n      <li>Both arrive at the same shared secret: g^(ab) mod p</li>\n    </ol>\n\n    <h3>RSA Key Exchange</h3>\n    <ul>\n      <li>Based on the difficulty of factoring large prime numbers</li>\n      <li>Can be used for both encryption and digital signatures</li>\n      <li>Slower than symmetric encryption</li>\n      <li>Typically used to exchange symmetric keys</li>\n      <li>Provides authentication when used with certificates</li>\n    </ul>\n\n    <h4>RSA Process</h4>\n    <ol>\n      <li>Generate two large prime numbers (p and q)</li>\n      <li>Compute n = p × q</li>\n      <li>Calculate Euler's totient: φ(n) = (p-1)(q-1)</li>\n      <li>Choose public exponent e (commonly 65537)</li>\n      <li>Compute private exponent d such that e × d ≡ 1 (mod φ(n))</li>\n      <li>Public key: (n, e), Private key: (n, d)</li>\n    </ol>\n\n    <h3>Modern Key Exchange Protocols</h3>\n    \n    <h4>ECDHE (Elliptic Curve Diffie-Hellman Ephemeral)</h4>\n    <ul>\n      <li>Uses elliptic curve cryptography</li>\n      <li>Provides same security with smaller key sizes</li>\n      <li>Ephemeral keys provide forward secrecy</li>\n      <li>Widely used in TLS 1.3</li>\n      <li>More efficient than traditional DH</li>\n    </ul>\n\n    <h4>Key Exchange in TLS/SSL</h4>\n    <ul>\n      <li>Combines multiple cryptographic techniques</li>\n      <li>Server authentication using certificates</li>\n      <li>Key exchange for session keys</li>\n      <li>Forward secrecy with ephemeral keys</li>\n      <li>Protection against various attacks</li>\n    </ul>\n\n    <h3>Security Considerations</h3>\n    \n    <h4>Man-in-the-Middle (MITM) Attacks</h4>\n    <ul>\n      <li>Attacker intercepts key exchange</li>\n      <li>Establishes separate keys with each party</li>\n      <li>Can decrypt and modify all communications</li>\n      <li>Prevented by authentication mechanisms</li>\n    </ul>\n\n    <h4>Forward Secrecy</h4>\n    <ul>\n      <li>Past communications remain secure if keys are compromised</li>\n      <li>Achieved using ephemeral keys</li>\n      <li>New keys generated for each session</li>\n      <li>Critical for long-term security</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Use Authenticated Key Exchange:</strong> Combine with digital signatures or certificates</li>\n      <li><strong>Implement Forward Secrecy:</strong> Use ephemeral key exchange methods</li>\n      <li><strong>Choose Appropriate Key Sizes:</strong> Balance security and performance</li>\n      <li><strong>Regular Key Rotation:</strong> Limit exposure if keys are compromised</li>\n      <li><strong>Use Standard Protocols:</strong> Avoid custom implementations</li>\n      <li><strong>Consider Quantum Resistance:</strong> Plan for post-quantum cryptography</li>\n    </ul>\n\n    <h3>Applications</h3>\n    <ul>\n      <li><strong>HTTPS/TLS:</strong> Secure web communications</li>\n      <li><strong>VPNs:</strong> Secure tunnel establishment</li>\n      <li><strong>SSH:</strong> Secure shell connections</li>\n      <li><strong>IPSec:</strong> Network layer security</li>\n      <li><strong>Signal Protocol:</strong> End-to-end encrypted messaging</li>\n      <li><strong>Cryptocurrency:</strong> Wallet and transaction security</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.vskills.in/certification/tutorial/private-and-public-key-exchange-3/\" target=\"_blank\">Private and Public Key Exchange</a></li>\n    </ul>\n  `\n}; ","export const encryption = {\n  id: 'encryption',\n  title: 'Encryption',\n  content: `# Encryption\n\n## Definition\nEncryption is the process of converting readable data (plaintext) into an unreadable format (ciphertext) to protect information from unauthorized access.\n\n## Types of Encryption\n- **Symmetric**: Same key for encryption and decryption\n- **Asymmetric**: Different keys (public/private key pairs)\n- **Hybrid**: Combination of symmetric and asymmetric\n\n## Symmetric Encryption\n- **AES**: Advanced Encryption Standard\n- **DES**: Data Encryption Standard (deprecated)\n- **3DES**: Triple DES\n- **ChaCha20**: Modern stream cipher\n\n## Asymmetric Encryption\n- **RSA**: Rivest-Shamir-Adleman\n- **ECC**: Elliptic Curve Cryptography\n- **Diffie-Hellman**: Key exchange protocol\n\n## Encryption Modes\n- **ECB**: Electronic Codebook (insecure)\n- **CBC**: Cipher Block Chaining\n- **GCM**: Galois/Counter Mode\n- **CTR**: Counter Mode\n\n## Key Management\n- **Key Generation**: Cryptographically secure random numbers\n- **Key Distribution**: Secure key exchange\n- **Key Storage**: Hardware security modules (HSM)\n- **Key Rotation**: Regular key updates\n\n## Hashing vs Encryption\n- **Hashing**: One-way function (SHA-256, bcrypt)\n- **Encryption**: Two-way process (can be decrypted)\n\n## Digital Signatures\nVerify authenticity and integrity using private key signing\n\n## Use Cases\n- **Data at Rest**: Database encryption, file encryption\n- **Data in Transit**: HTTPS, VPN, secure messaging\n- **Authentication**: Password hashing, digital certificates\n\n## Best Practices\n- Use established algorithms\n- Proper key management\n- Regular security audits\n- Keep libraries updated\n\n## Interview Questions\n**Q: When would you use symmetric vs asymmetric encryption?**\nA: Symmetric for bulk data encryption (faster), asymmetric for key exchange and digital signatures (more secure but slower).`\n}; ","export const encryptionDecryption = {\n  id: 'encryption-decryption',\n  title: 'Encryption and Decryption',\n  content: `\n    <h2>Encryption and Decryption</h2>\n    <p>To ensure data security during transmission or storage, encryption can be applied either before or after serialization. Encryption scrambles the data using a cryptographic algorithm and a key, making it unreadable to unauthorized parties. When encrypted data is received or retrieved, it needs to be decrypted before deserialization to restore it to its original form. Decryption requires the appropriate cryptographic key and algorithm to reverse the encryption process.</p>\n\n    <h3>Types of Encryption</h3>\n    \n    <h4>Symmetric Encryption</h4>\n    <p>A single key is used for both encryption and decryption.</p>\n    \n    <ul>\n      <li><strong>Key Management:</strong> Same key must be shared securely</li>\n      <li><strong>Speed:</strong> Generally faster than asymmetric</li>\n      <li><strong>Use Cases:</strong> Bulk data encryption, session keys</li>\n      <li><strong>Examples:</strong> AES, DES, 3DES, Blowfish</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Symmetric Encryption Flow\nPlaintext → [Encrypt with Key K] → Ciphertext\nCiphertext → [Decrypt with Key K] → Plaintext\n\n// Both parties use the same key K</code></pre>\n    </div>\n\n    <h4>Asymmetric Encryption (Public Key Encryption)</h4>\n    <p>A public key for encryption and a private key for decryption is used.</p>\n    \n    <ul>\n      <li><strong>Key Pairs:</strong> Public key (encrypt) + Private key (decrypt)</li>\n      <li><strong>No Shared Secret:</strong> Public key can be distributed openly</li>\n      <li><strong>Speed:</strong> Slower than symmetric encryption</li>\n      <li><strong>Use Cases:</strong> Key exchange, digital signatures, certificates</li>\n      <li><strong>Examples:</strong> RSA, ECC, DSA</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Asymmetric Encryption Flow\nPlaintext → [Encrypt with Public Key] → Ciphertext\nCiphertext → [Decrypt with Private Key] → Plaintext\n\n// Or for Digital Signatures:\nMessage → [Sign with Private Key] → Signature\nSignature → [Verify with Public Key] → Valid/Invalid</code></pre>\n    </div>\n\n    <h3>Encryption Algorithms</h3>\n    \n    <h4>RSA (Rivest-Shamir-Adleman)</h4>\n    <ul>\n      <li><strong>Type:</strong> Asymmetric</li>\n      <li><strong>Key Size:</strong> 1024, 2048, 4096 bits</li>\n      <li><strong>Based on:</strong> Factoring large prime numbers</li>\n      <li><strong>Use Cases:</strong> SSL/TLS, email encryption, digital signatures</li>\n      <li><strong>Limitations:</strong> Slow for large data, key size requirements growing</li>\n    </ul>\n\n    <h4>AES (Advanced Encryption Standard)</h4>\n    <ul>\n      <li><strong>Type:</strong> Symmetric block cipher</li>\n      <li><strong>Key Sizes:</strong> 128, 192, 256 bits</li>\n      <li><strong>Block Size:</strong> 128 bits</li>\n      <li><strong>Modes:</strong> ECB, CBC, CTR, GCM</li>\n      <li><strong>Performance:</strong> Very fast, hardware acceleration available</li>\n      <li><strong>Standard:</strong> NIST approved, widely adopted</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// AES Encryption Modes\nECB (Electronic Codebook):\n- Each block encrypted independently\n- Not recommended (patterns visible)\n\nCBC (Cipher Block Chaining):\n- Each block XORed with previous ciphertext\n- Requires IV (Initialization Vector)\n- Common for file encryption\n\nCTR (Counter):\n- Converts block cipher to stream cipher\n- Parallelizable\n- Good for random access\n\nGCM (Galois/Counter Mode):\n- Provides authentication + encryption\n- Modern, recommended mode\n- Used in TLS 1.3</code></pre>\n    </div>\n\n    <h4>Diffie-Hellman</h4>\n    <ul>\n      <li><strong>Type:</strong> Key exchange algorithm</li>\n      <li><strong>Purpose:</strong> Establish shared secret over insecure channel</li>\n      <li><strong>Not for:</strong> Direct encryption/decryption</li>\n      <li><strong>Variants:</strong> DH, ECDH (Elliptic Curve DH)</li>\n      <li><strong>Use Cases:</strong> TLS handshake, VPNs</li>\n    </ul>\n\n    <h4>ECDHE (Elliptic Curve Diffie-Hellman Ephemeral)</h4>\n    <ul>\n      <li><strong>Type:</strong> Key exchange with forward secrecy</li>\n      <li><strong>Benefits:</strong> Smaller keys, better performance than RSA</li>\n      <li><strong>Ephemeral:</strong> New keys for each session</li>\n      <li><strong>Forward Secrecy:</strong> Past sessions secure even if key compromised</li>\n    </ul>\n\n    <h3>Practical Implementation</h3>\n    \n    <h4>Encryption Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Python - AES Encryption\nfrom Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\n\n# Generate key\nkey = get_random_bytes(32)  # 256 bits\ncipher = AES.new(key, AES.MODE_GCM)\nciphertext, tag = cipher.encrypt_and_digest(plaintext)\n\n// Node.js - AES Encryption\nconst crypto = require('crypto');\nconst algorithm = 'aes-256-gcm';\nconst key = crypto.randomBytes(32);\nconst iv = crypto.randomBytes(16);\n\nconst cipher = crypto.createCipheriv(algorithm, key, iv);\nlet encrypted = cipher.update(text, 'utf8', 'hex');\nencrypted += cipher.final('hex');\n\n// Java - RSA Encryption\nKeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\nkeyGen.initialize(2048);\nKeyPair pair = keyGen.generateKeyPair();\n\nCipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");\ncipher.init(Cipher.ENCRYPT_MODE, pair.getPublic());\nbyte[] cipherText = cipher.doFinal(plainText);</code></pre>\n    </div>\n\n    <h3>Hybrid Encryption</h3>\n    <p>Combines symmetric and asymmetric encryption for optimal security and performance.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Hybrid Encryption Process\n1. Generate random symmetric key (e.g., AES-256)\n2. Encrypt data with symmetric key (fast)\n3. Encrypt symmetric key with recipient's public key (RSA)\n4. Send: encrypted data + encrypted symmetric key\n\n// Decryption\n1. Decrypt symmetric key with private key (RSA)\n2. Decrypt data with symmetric key (AES)\n\n// Benefits:\n- Fast bulk encryption (symmetric)\n- Secure key exchange (asymmetric)\n- Best of both worlds</code></pre>\n    </div>\n\n    <h3>Digital Signatures</h3>\n    <p>Provide authentication, integrity, and non-repudiation.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Digital Signature Process\n1. Hash the message (SHA-256)\n2. Encrypt hash with private key\n3. Attach signature to message\n\n// Verification\n1. Decrypt signature with public key\n2. Hash the received message\n3. Compare hashes - if match, signature valid\n\n// Properties:\n- Authentication: Proves sender identity\n- Integrity: Detects tampering\n- Non-repudiation: Sender cannot deny</code></pre>\n    </div>\n\n    <h3>Encryption in Practice</h3>\n    \n    <h4>HTTPS/TLS</h4>\n    <ul>\n      <li><strong>Handshake:</strong> ECDHE for key exchange</li>\n      <li><strong>Certificates:</strong> RSA or ECDSA signatures</li>\n      <li><strong>Session:</strong> AES-GCM for data encryption</li>\n      <li><strong>Forward Secrecy:</strong> Ephemeral keys</li>\n    </ul>\n\n    <h4>Password Storage</h4>\n    <ul>\n      <li><strong>Never:</strong> Store plain text passwords</li>\n      <li><strong>Hash:</strong> One-way function (bcrypt, scrypt, Argon2)</li>\n      <li><strong>Salt:</strong> Random data to prevent rainbow tables</li>\n      <li><strong>Iterations:</strong> Slow down brute force attacks</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Password Hashing Best Practices\n// Using bcrypt\nconst bcrypt = require('bcrypt');\nconst saltRounds = 10;\n\n// Hash password\nconst hash = await bcrypt.hash(password, saltRounds);\n\n// Verify password\nconst match = await bcrypt.compare(password, hash);</code></pre>\n    </div>\n\n    <h3>Key Management</h3>\n    \n    <h4>Best Practices</h4>\n    <ul>\n      <li><strong>Key Generation:</strong> Use cryptographically secure random</li>\n      <li><strong>Key Storage:</strong> Hardware security modules (HSM), key vaults</li>\n      <li><strong>Key Rotation:</strong> Regular key updates</li>\n      <li><strong>Key Escrow:</strong> Backup keys securely</li>\n      <li><strong>Access Control:</strong> Limit key access</li>\n    </ul>\n\n    <h4>Common Mistakes</h4>\n    <ul>\n      <li><strong>Hardcoded Keys:</strong> Never in source code</li>\n      <li><strong>Weak Keys:</strong> Use proper key generation</li>\n      <li><strong>Key Reuse:</strong> Different keys for different purposes</li>\n      <li><strong>Poor Storage:</strong> Don't store keys in plain text</li>\n    </ul>\n\n    <h3>Security Considerations</h3>\n    \n    <h4>Common Attacks</h4>\n    <ul>\n      <li><strong>Brute Force:</strong> Try all possible keys</li>\n      <li><strong>Dictionary Attack:</strong> Common passwords/keys</li>\n      <li><strong>Side Channel:</strong> Timing, power analysis</li>\n      <li><strong>Man-in-the-Middle:</strong> Intercept key exchange</li>\n      <li><strong>Padding Oracle:</strong> Exploit padding validation</li>\n    </ul>\n\n    <h4>Defense Strategies</h4>\n    <ul>\n      <li><strong>Strong Keys:</strong> Sufficient entropy</li>\n      <li><strong>Authenticated Encryption:</strong> AES-GCM, ChaCha20-Poly1305</li>\n      <li><strong>Certificate Pinning:</strong> Prevent MITM</li>\n      <li><strong>Constant Time:</strong> Avoid timing attacks</li>\n      <li><strong>Regular Updates:</strong> Patch vulnerabilities</li>\n    </ul>\n\n    <h3>Compliance and Standards</h3>\n    <ul>\n      <li><strong>FIPS 140-2:</strong> US government cryptographic standards</li>\n      <li><strong>PCI DSS:</strong> Payment card data encryption</li>\n      <li><strong>GDPR:</strong> EU data protection (encryption as safeguard)</li>\n      <li><strong>HIPAA:</strong> Healthcare data encryption requirements</li>\n    </ul>\n\n    <h3>Future Considerations</h3>\n    \n    <h4>Quantum Computing Threat</h4>\n    <ul>\n      <li><strong>Risk:</strong> Breaks current public key cryptography</li>\n      <li><strong>Timeline:</strong> 10-20 years estimate</li>\n      <li><strong>Post-Quantum:</strong> New algorithms being developed</li>\n      <li><strong>Hybrid Approach:</strong> Combine classical and post-quantum</li>\n    </ul>\n  `\n}; ","export const ddos = {\n  id: 'distributed-denial-of-service',\n  title: 'Distributed Denial of Service (DDoS)',\n  content: `\n    <h2>Distributed Denial of Service (DDoS)</h2>\n    <p>In a DDoS attack, multiple compromised computers or devices, often referred to as \"bots\" or \"zombies,\" are used to generate or amplify the attack traffic, overwhelming the target's resources such as bandwidth, CPU, memory, or network connections.</p>\n\n    <h3>How DDoS Attacks Work</h3>\n    \n    <h4>Attack Infrastructure</h4>\n    <ul>\n      <li><strong>Botnet:</strong> Network of compromised computers (bots/zombies)</li>\n      <li><strong>Command & Control (C&C):</strong> Central server controlling the botnet</li>\n      <li><strong>Attack Traffic:</strong> Coordinated flood of requests from multiple sources</li>\n      <li><strong>Target:</strong> The victim's servers, network, or infrastructure</li>\n    </ul>\n\n    <h3>Types of DDoS Attacks</h3>\n    \n    <h4>1. Volume-Based Attacks</h4>\n    <ul>\n      <li><strong>UDP Flood:</strong> Overwhelming with UDP packets</li>\n      <li><strong>ICMP Flood:</strong> Ping flood attacks</li>\n      <li><strong>Amplification Attacks:</strong> DNS, NTP amplification</li>\n      <li><strong>Goal:</strong> Saturate the bandwidth</li>\n    </ul>\n\n    <h4>2. Protocol Attacks</h4>\n    <ul>\n      <li><strong>SYN Flood:</strong> Exploiting TCP handshake</li>\n      <li><strong>Ping of Death:</strong> Malformed packets</li>\n      <li><strong>Smurf Attack:</strong> ICMP amplification</li>\n      <li><strong>Goal:</strong> Consume server resources</li>\n    </ul>\n\n    <h4>3. Application Layer Attacks</h4>\n    <ul>\n      <li><strong>HTTP Flood:</strong> Overwhelming web servers</li>\n      <li><strong>Slowloris:</strong> Keeping connections open</li>\n      <li><strong>DNS Query Flood:</strong> Overwhelming DNS servers</li>\n      <li><strong>Goal:</strong> Crash web applications</li>\n    </ul>\n\n    <h3>Attack Vectors and Techniques</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Example: SYN Flood Attack Pattern\n# Attacker sends SYN packets without completing handshake\n\nNormal TCP Handshake:\nClient → Server: SYN\nServer → Client: SYN-ACK\nClient → Server: ACK\n[Connection Established]\n\nSYN Flood Attack:\nAttacker → Server: SYN (fake source IP)\nServer → Fake IP: SYN-ACK (never received)\nServer: Waits for ACK (timeout)\n[Server resources consumed]\n\n# Thousands of half-open connections exhaust server</code></pre>\n    </div>\n\n    <h3>Defense and Mitigation Techniques</h3>\n    <p>To defend against DDoS attacks, organizations often use various mitigation techniques:</p>\n    \n    <h4>1. Traffic Filtering</h4>\n    <ul>\n      <li><strong>Blackhole Routing:</strong> Drop all traffic to attacked IP</li>\n      <li><strong>IP Filtering:</strong> Block known malicious IPs</li>\n      <li><strong>Geo-blocking:</strong> Block traffic from specific regions</li>\n      <li><strong>Pattern Recognition:</strong> Identify and block attack patterns</li>\n    </ul>\n\n    <h4>2. Rate Limiting</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Example: Rate Limiting Implementation\nclass RateLimiter:\n    def __init__(self, max_requests=100, window=60):\n        self.max_requests = max_requests\n        self.window = window  # seconds\n        self.requests = defaultdict(list)\n    \n    def is_allowed(self, client_ip):\n        now = time.time()\n        # Clean old requests\n        self.requests[client_ip] = [\n            req_time for req_time in self.requests[client_ip]\n            if now - req_time < self.window\n        ]\n        \n        # Check rate limit\n        if len(self.requests[client_ip]) >= self.max_requests:\n            return False\n            \n        self.requests[client_ip].append(now)\n        return True</code></pre>\n    </div>\n\n    <h4>3. IP Whitelisting</h4>\n    <ul>\n      <li>Allow only known good IP addresses</li>\n      <li>Useful for critical services with known users</li>\n      <li>Not practical for public-facing services</li>\n    </ul>\n\n    <h4>4. Blackholing</h4>\n    <ul>\n      <li>Route attack traffic to null route</li>\n      <li>Drops both legitimate and malicious traffic</li>\n      <li>Last resort when service is completely overwhelmed</li>\n    </ul>\n\n    <h4>5. DDoS Protection Services</h4>\n    <ul>\n      <li><strong>CDN-based Protection:</strong> Cloudflare, Akamai</li>\n      <li><strong>Scrubbing Centers:</strong> Clean traffic before forwarding</li>\n      <li><strong>Cloud-based Protection:</strong> AWS Shield, Azure DDoS Protection</li>\n      <li><strong>On-premise Appliances:</strong> Hardware-based solutions</li>\n    </ul>\n\n    <h3>Detection Strategies</h3>\n    \n    <h4>Traffic Analysis</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># DDoS Detection Metrics\ndef detect_ddos_patterns(traffic_data):\n    indicators = {\n        'request_rate': calculate_requests_per_second(traffic_data),\n        'unique_ips': count_unique_source_ips(traffic_data),\n        'packet_size': average_packet_size(traffic_data),\n        'syn_fin_ratio': calculate_syn_fin_ratio(traffic_data),\n        'geographic_distribution': analyze_geo_distribution(traffic_data)\n    }\n    \n    # Detection rules\n    if indicators['request_rate'] > THRESHOLD_RPS:\n        return \"Possible volumetric attack\"\n    \n    if indicators['syn_fin_ratio'] > 3:\n        return \"Possible SYN flood attack\"\n    \n    if indicators['unique_ips'] < 100 and indicators['request_rate'] > 1000:\n        return \"Possible amplification attack\"\n    \n    return \"Normal traffic\"</code></pre>\n    </div>\n\n    <h3>Best Practices for DDoS Protection</h3>\n    \n    <h4>Preparation</h4>\n    <ul>\n      <li><strong>Capacity Planning:</strong> Over-provision bandwidth and server resources</li>\n      <li><strong>DDoS Response Plan:</strong> Document procedures and contacts</li>\n      <li><strong>Regular Testing:</strong> Simulate attacks to test defenses</li>\n      <li><strong>Baseline Monitoring:</strong> Know your normal traffic patterns</li>\n    </ul>\n\n    <h4>Architecture</h4>\n    <ul>\n      <li><strong>Distributed Infrastructure:</strong> Multiple data centers and regions</li>\n      <li><strong>Anycast Routing:</strong> Distribute traffic across multiple servers</li>\n      <li><strong>Load Balancing:</strong> Distribute load across servers</li>\n      <li><strong>Caching:</strong> Reduce load on origin servers</li>\n    </ul>\n\n    <h4>Response</h4>\n    <ul>\n      <li><strong>Early Detection:</strong> Monitor traffic anomalies</li>\n      <li><strong>Incremental Response:</strong> Start with least disruptive measures</li>\n      <li><strong>Communication:</strong> Keep stakeholders informed</li>\n      <li><strong>Post-Attack Analysis:</strong> Learn and improve defenses</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Notable DDoS Attacks</h4>\n    <ul>\n      <li><strong>2016 Dyn Attack:</strong> 1.2 Tbps using Mirai botnet</li>\n      <li><strong>2018 GitHub Attack:</strong> 1.35 Tbps memcached amplification</li>\n      <li><strong>2020 AWS Attack:</strong> 2.3 Tbps, largest recorded</li>\n    </ul>\n\n    <h3>Cost of DDoS Attacks</h3>\n    <ul>\n      <li><strong>Downtime Costs:</strong> Lost revenue during outage</li>\n      <li><strong>Mitigation Costs:</strong> DDoS protection services</li>\n      <li><strong>Reputation Damage:</strong> Loss of customer trust</li>\n      <li><strong>Recovery Costs:</strong> Incident response and analysis</li>\n    </ul>\n  `\n}; ","export const networkProtocols = {\n  id: 'network-protocols',\n  title: 'Network Protocols',\n  content: `\n# Network Protocols\n\nNetwork protocols are standardized rules and procedures that govern communication between devices in a network. Understanding these protocols is essential for system design and network architecture.\n\n## Overview\n\nNetwork protocols define:\n- **Communication rules**: How devices establish connections\n- **Data format**: Structure and encoding of transmitted data\n- **Error handling**: Detection and recovery from transmission errors\n- **Flow control**: Managing data transmission rates\n- **Security**: Authentication and encryption mechanisms\n\n## Protocol Stack Architecture\n\n### OSI Model Mapping\n\n| Layer | Protocols | Purpose |\n|-------|-----------|---------|\n| Application | HTTP, HTTPS, FTP, SMTP, DNS | User interface and services |\n| Presentation | SSL/TLS, MIME | Data encryption and formatting |\n| Session | NetBIOS, RPC | Session management |\n| Transport | TCP, UDP | End-to-end communication |\n| Network | IP, ICMP, ARP | Routing and addressing |\n| Data Link | Ethernet, WiFi | Frame transmission |\n| Physical | Cable, Fiber, Radio | Physical transmission |\n\n## Core Internet Protocols\n\n### 1. IP (Internet Protocol)\n\n**IPv4 Characteristics:**\n- 32-bit addresses (4.3 billion unique addresses)\n- Dotted decimal notation (192.168.1.1)\n- Classful and classless addressing\n- Fragmentation support\n\n**IPv6 Characteristics:**\n- 128-bit addresses (340 undecillion unique addresses)\n- Hexadecimal notation (2001:db8::1)\n- Built-in security features\n- No fragmentation at routers\n\n\\`\\`\\`javascript\n// IP address validation\nfunction validateIPv4(ip) {\n  const parts = ip.split('.');\n  if (parts.length !== 4) return false;\n  \n  return parts.every(part => {\n    const num = parseInt(part, 10);\n    return num >= 0 && num <= 255 && part === String(num);\n  });\n}\n\nfunction validateIPv6(ip) {\n  const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n  const ipv6CompressedRegex = /^(([0-9a-fA-F]{1,4}:)*)?::([0-9a-fA-F]{1,4}:)*[0-9a-fA-F]{1,4}$/;\n  \n  return ipv6Regex.test(ip) || ipv6CompressedRegex.test(ip);\n}\n\\`\\`\\`\n\n**IP Header Structure:**\n\\`\\`\\`\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|Version|  IHL  |Type of Service|          Total Length         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|         Identification        |Flags|      Fragment Offset    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Time to Live |    Protocol   |         Header Checksum       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       Source Address                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Destination Address                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\`\\`\\`\n\n### 2. TCP (Transmission Control Protocol)\n\n**Characteristics:**\n- Connection-oriented protocol\n- Reliable data delivery\n- Flow control and congestion control\n- Ordered data delivery\n- Error detection and recovery\n\n**TCP Three-Way Handshake:**\n\\`\\`\\`\nClient                    Server\n  |                        |\n  |-------SYN(seq=x)------>|\n  |                        |\n  |<--SYN-ACK(seq=y,ack=x+1)|\n  |                        |\n  |-------ACK(ack=y+1)---->|\n  |                        |\n  |   Connection Established|\n\\`\\`\\`\n\n**TCP State Machine:**\n\\`\\`\\`javascript\nconst TCPStates = {\n  CLOSED: 'CLOSED',\n  LISTEN: 'LISTEN',\n  SYN_SENT: 'SYN_SENT',\n  SYN_RECEIVED: 'SYN_RECEIVED',\n  ESTABLISHED: 'ESTABLISHED',\n  FIN_WAIT_1: 'FIN_WAIT_1',\n  FIN_WAIT_2: 'FIN_WAIT_2',\n  CLOSE_WAIT: 'CLOSE_WAIT',\n  CLOSING: 'CLOSING',\n  LAST_ACK: 'LAST_ACK',\n  TIME_WAIT: 'TIME_WAIT'\n};\n\nclass TCPConnection {\n  constructor() {\n    this.state = TCPStates.CLOSED;\n    this.sequenceNumber = Math.floor(Math.random() * 4294967296);\n    this.acknowledgmentNumber = 0;\n  }\n  \n  connect() {\n    if (this.state === TCPStates.CLOSED) {\n      this.state = TCPStates.SYN_SENT;\n      this.sendSYN();\n    }\n  }\n  \n  sendSYN() {\n    const packet = {\n      flags: { SYN: true },\n      sequenceNumber: this.sequenceNumber,\n      acknowledgmentNumber: 0\n    };\n    return packet;\n  }\n  \n  receiveSYNACK(packet) {\n    if (this.state === TCPStates.SYN_SENT) {\n      this.state = TCPStates.ESTABLISHED;\n      this.acknowledgmentNumber = packet.sequenceNumber + 1;\n      this.sendACK();\n    }\n  }\n}\n\\`\\`\\`\n\n**TCP Header Structure:**\n\\`\\`\\`\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |       Destination Port        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Sequence Number                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Acknowledgment Number                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Data |           |U|A|P|R|S|F|                               |\n| Offset| Reserved  |R|C|S|S|Y|I|            Window             |\n|       |           |G|K|H|T|N|N|                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Checksum            |         Urgent Pointer        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\\`\\`\\`\n\n### 3. UDP (User Datagram Protocol)\n\n**Characteristics:**\n- Connectionless protocol\n- Unreliable data delivery\n- Low overhead\n- No flow control\n- No error recovery\n\n**UDP Header Structure:**\n\\`\\`\\`\n 0      7 8     15 16    23 24    31\n+--------+--------+--------+--------+\n|     Source      |   Destination   |\n|      Port       |      Port       |\n+--------+--------+--------+--------+\n|                 |                 |\n|     Length      |    Checksum     |\n+--------+--------+--------+--------+\n|\n|          data octets ...\n+---------------- ...\n\\`\\`\\`\n\n**UDP Implementation Example:**\n\\`\\`\\`javascript\nclass UDPSocket {\n  constructor(port) {\n    this.port = port;\n    this.buffer = [];\n  }\n  \n  send(data, destinationIP, destinationPort) {\n    const packet = {\n      sourcePort: this.port,\n      destinationPort: destinationPort,\n      length: data.length + 8, // 8-byte header\n      checksum: this.calculateChecksum(data),\n      data: data\n    };\n    \n    this.transmit(packet, destinationIP);\n  }\n  \n  receive() {\n    return this.buffer.shift();\n  }\n  \n  calculateChecksum(data) {\n    // Simplified checksum calculation\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) {\n      sum += data.charCodeAt(i);\n    }\n    return (~sum) & 0xFFFF;\n  }\n}\n\\`\\`\\`\n\n## Application Layer Protocols\n\n### 1. HTTP (HyperText Transfer Protocol)\n\n**Request Structure:**\n\\`\\`\\`\nGET /index.html HTTP/1.1\nHost: www.example.com\nUser-Agent: Mozilla/5.0\nAccept: text/html,application/xhtml+xml\nConnection: keep-alive\n\\`\\`\\`\n\n**Response Structure:**\n\\`\\`\\`\nHTTP/1.1 200 OK\nContent-Type: text/html\nContent-Length: 1234\nServer: Apache/2.4.41\nDate: Mon, 01 Jan 2024 12:00:00 GMT\n\n<html>...</html>\n\\`\\`\\`\n\n**HTTP Methods:**\n\\`\\`\\`javascript\nconst HTTPMethods = {\n  GET: 'Retrieve data',\n  POST: 'Submit data',\n  PUT: 'Update/create resource',\n  DELETE: 'Remove resource',\n  PATCH: 'Partial update',\n  HEAD: 'Get headers only',\n  OPTIONS: 'Get allowed methods',\n  TRACE: 'Echo request'\n};\n\\`\\`\\`\n\n### 2. HTTPS (HTTP Secure)\n\n**TLS Handshake Process:**\n\\`\\`\\`\nClient                    Server\n  |                        |\n  |----ClientHello-------->|\n  |                        |\n  |<---ServerHello---------|\n  |<---Certificate---------|\n  |<---ServerHelloDone-----|\n  |                        |\n  |----ClientKeyExchange-->|\n  |----ChangeCipherSpec--->|\n  |----Finished----------->|\n  |                        |\n  |<---ChangeCipherSpec----|\n  |<---Finished------------|\n  |                        |\n  | Application Data       |\n  |<---------------------->|\n\\`\\`\\`\n\n### 3. DNS (Domain Name System)\n\n**DNS Query Types:**\n\\`\\`\\`javascript\nconst DNSRecordTypes = {\n  A: 'IPv4 address',\n  AAAA: 'IPv6 address',\n  CNAME: 'Canonical name',\n  MX: 'Mail exchange',\n  NS: 'Name server',\n  PTR: 'Pointer (reverse lookup)',\n  SOA: 'Start of authority',\n  TXT: 'Text record',\n  SRV: 'Service record'\n};\n\\`\\`\\`\n\n**DNS Resolution Process:**\n\\`\\`\\`javascript\nclass DNSResolver {\n  constructor() {\n    this.cache = new Map();\n    this.rootServers = ['198.41.0.4', '199.9.14.201'];\n  }\n  \n  async resolve(domain) {\n    // Check cache first\n    if (this.cache.has(domain)) {\n      return this.cache.get(domain);\n    }\n    \n    // Recursive resolution\n    const result = await this.recursiveResolve(domain);\n    \n    // Cache result\n    this.cache.set(domain, result);\n    return result;\n  }\n  \n  async recursiveResolve(domain) {\n    const labels = domain.split('.').reverse();\n    let currentServers = this.rootServers;\n    \n    for (const label of labels) {\n      const response = await this.queryServers(currentServers, label);\n      if (response.type === 'A') {\n        return response.address;\n      }\n      currentServers = response.nameservers;\n    }\n  }\n}\n\\`\\`\\`\n\n### 4. FTP (File Transfer Protocol)\n\n**FTP Commands:**\n\\`\\`\\`javascript\nconst FTPCommands = {\n  USER: 'Username for login',\n  PASS: 'Password for login',\n  CWD: 'Change working directory',\n  PWD: 'Print working directory',\n  LIST: 'List directory contents',\n  RETR: 'Retrieve file',\n  STOR: 'Store file',\n  DELE: 'Delete file',\n  MKD: 'Make directory',\n  RMD: 'Remove directory',\n  QUIT: 'Logout'\n};\n\\`\\`\\`\n\n**FTP Data Transfer Modes:**\n- **Active Mode**: Server initiates data connection\n- **Passive Mode**: Client initiates data connection\n\n## Routing Protocols\n\n### 1. RIP (Routing Information Protocol)\n\n**Characteristics:**\n- Distance vector algorithm\n- Hop count metric (max 15)\n- Periodic updates every 30 seconds\n- Simple configuration\n\n\\`\\`\\`javascript\nclass RIPRouter {\n  constructor(routerId) {\n    this.routerId = routerId;\n    this.routingTable = new Map();\n    this.neighbors = new Set();\n  }\n  \n  addRoute(destination, nextHop, metric) {\n    this.routingTable.set(destination, {\n      nextHop: nextHop,\n      metric: metric,\n      timestamp: Date.now()\n    });\n  }\n  \n  sendUpdate() {\n    const update = Array.from(this.routingTable.entries()).map(\n      ([dest, route]) => ({\n        destination: dest,\n        metric: route.metric\n      })\n    );\n    \n    this.neighbors.forEach(neighbor => {\n      this.sendToNeighbor(neighbor, update);\n    });\n  }\n  \n  receiveUpdate(fromRouter, routes) {\n    routes.forEach(route => {\n      const newMetric = route.metric + 1;\n      const existing = this.routingTable.get(route.destination);\n      \n      if (!existing || newMetric < existing.metric) {\n        this.addRoute(route.destination, fromRouter, newMetric);\n      }\n    });\n  }\n}\n\\`\\`\\`\n\n### 2. OSPF (Open Shortest Path First)\n\n**Characteristics:**\n- Link state algorithm\n- Dijkstra's shortest path\n- Area-based hierarchy\n- Fast convergence\n\n**OSPF Packet Types:**\n\\`\\`\\`javascript\nconst OSPFPacketTypes = {\n  HELLO: 1,           // Neighbor discovery\n  DATABASE_DESCRIPTION: 2, // Database synchronization\n  LINK_STATE_REQUEST: 3,   // Request specific LSAs\n  LINK_STATE_UPDATE: 4,    // Send LSAs\n  LINK_STATE_ACK: 5        // Acknowledge LSAs\n};\n\\`\\`\\`\n\n### 3. BGP (Border Gateway Protocol)\n\n**Characteristics:**\n- Path vector protocol\n- Inter-AS routing\n- Policy-based routing\n- Prevents routing loops\n\n\\`\\`\\`javascript\nclass BGPRouter {\n  constructor(asNumber) {\n    this.asNumber = asNumber;\n    this.neighbors = new Map();\n    this.routingTable = new Map();\n  }\n  \n  establishPeering(neighborAS, neighborIP) {\n    this.neighbors.set(neighborAS, {\n      ip: neighborIP,\n      state: 'IDLE'\n    });\n    \n    this.sendOpen(neighborAS);\n  }\n  \n  announceRoute(prefix, asPath) {\n    const announcement = {\n      prefix: prefix,\n      asPath: [this.asNumber, ...asPath],\n      nextHop: this.getNextHop(),\n      localPref: 100\n    };\n    \n    this.neighbors.forEach((neighbor, asNumber) => {\n      this.sendUpdate(asNumber, announcement);\n    });\n  }\n}\n\\`\\`\\`\n\n## Security Protocols\n\n### 1. SSL/TLS (Secure Sockets Layer/Transport Layer Security)\n\n**TLS Versions:**\n- TLS 1.0 (1999) - Deprecated\n- TLS 1.1 (2006) - Deprecated\n- TLS 1.2 (2008) - Widely used\n- TLS 1.3 (2018) - Latest standard\n\n**Cipher Suites:**\n\\`\\`\\`javascript\nconst TLSCipherSuites = {\n  'TLS_AES_128_GCM_SHA256': {\n    keyExchange: 'ECDHE',\n    authentication: 'RSA',\n    encryption: 'AES-128-GCM',\n    hash: 'SHA256'\n  },\n  'TLS_AES_256_GCM_SHA384': {\n    keyExchange: 'ECDHE',\n    authentication: 'RSA',\n    encryption: 'AES-256-GCM',\n    hash: 'SHA384'\n  }\n};\n\\`\\`\\`\n\n### 2. IPSec (Internet Protocol Security)\n\n**IPSec Modes:**\n- **Transport Mode**: Encrypts payload only\n- **Tunnel Mode**: Encrypts entire IP packet\n\n**IPSec Protocols:**\n- **AH (Authentication Header)**: Authentication only\n- **ESP (Encapsulating Security Payload)**: Authentication and encryption\n\n## Network Management Protocols\n\n### 1. SNMP (Simple Network Management Protocol)\n\n**SNMP Operations:**\n\\`\\`\\`javascript\nconst SNMPOperations = {\n  GET: 'Retrieve specific value',\n  GETNEXT: 'Retrieve next value',\n  GETBULK: 'Retrieve multiple values',\n  SET: 'Modify value',\n  TRAP: 'Asynchronous notification',\n  INFORM: 'Acknowledged notification'\n};\n\nclass SNMPAgent {\n  constructor() {\n    this.mib = new Map(); // Management Information Base\n    this.community = 'public';\n  }\n  \n  handleRequest(request) {\n    switch (request.operation) {\n      case 'GET':\n        return this.getValue(request.oid);\n      case 'SET':\n        return this.setValue(request.oid, request.value);\n      case 'GETNEXT':\n        return this.getNextValue(request.oid);\n      default:\n        throw new Error('Unsupported operation');\n    }\n  }\n  \n  sendTrap(oid, value) {\n    const trap = {\n      version: 'v2c',\n      community: this.community,\n      pduType: 'TRAP',\n      oid: oid,\n      value: value,\n      timestamp: Date.now()\n    };\n    \n    this.transmitTrap(trap);\n  }\n}\n\\`\\`\\`\n\n### 2. ICMP (Internet Control Message Protocol)\n\n**ICMP Message Types:**\n\\`\\`\\`javascript\nconst ICMPTypes = {\n  0: 'Echo Reply',\n  3: 'Destination Unreachable',\n  4: 'Source Quench',\n  5: 'Redirect',\n  8: 'Echo Request',\n  11: 'Time Exceeded',\n  12: 'Parameter Problem',\n  13: 'Timestamp Request',\n  14: 'Timestamp Reply'\n};\n\nclass ICMPHandler {\n  handleEchoRequest(packet) {\n    return {\n      type: 0, // Echo Reply\n      code: 0,\n      identifier: packet.identifier,\n      sequenceNumber: packet.sequenceNumber,\n      data: packet.data\n    };\n  }\n  \n  sendDestinationUnreachable(originalPacket, code) {\n    return {\n      type: 3,\n      code: code, // 0=net, 1=host, 2=protocol, 3=port\n      unused: 0,\n      originalHeader: originalPacket.header\n    };\n  }\n}\n\\`\\`\\`\n\n## Protocol Performance Characteristics\n\n### Latency Comparison\n\n| Protocol | Typical Latency | Use Case |\n|----------|----------------|----------|\n| UDP | < 1ms | Real-time gaming, streaming |\n| TCP | 1-10ms | Web browsing, file transfer |\n| HTTP/1.1 | 10-100ms | Web applications |\n| HTTP/2 | 5-50ms | Modern web applications |\n| HTTPS | 20-200ms | Secure web applications |\n\n### Throughput Considerations\n\n\\`\\`\\`javascript\n// TCP throughput calculation\nfunction calculateTCPThroughput(windowSize, rtt) {\n  // Throughput = Window Size / Round Trip Time\n  return windowSize / rtt;\n}\n\n// UDP packet rate calculation\nfunction calculateUDPPacketRate(bandwidth, packetSize) {\n  // Packets per second = Bandwidth / (Packet Size * 8)\n  return bandwidth / (packetSize * 8);\n}\n\\`\\`\\`\n\n## Protocol Selection Guidelines\n\n### Decision Matrix\n\n| Requirement | Recommended Protocol | Alternative |\n|-------------|---------------------|-------------|\n| Reliability | TCP | SCTP |\n| Low latency | UDP | TCP with optimizations |\n| Security | HTTPS/TLS | IPSec |\n| Real-time | RTP/UDP | WebRTC |\n| File transfer | FTP/SFTP | HTTP |\n| Email | SMTP/IMAP | POP3 |\n| Web browsing | HTTP/HTTPS | HTTP/2, HTTP/3 |\n\n### Best Practices\n\n\\`\\`\\`javascript\n// Protocol configuration example\nconst protocolConfig = {\n  web: {\n    protocol: 'HTTPS',\n    version: '1.1',\n    keepAlive: true,\n    compression: 'gzip',\n    timeout: 30000\n  },\n  \n  realTime: {\n    protocol: 'UDP',\n    bufferSize: 1024,\n    jitterBuffer: true,\n    errorCorrection: 'FEC'\n  },\n  \n  fileTransfer: {\n    protocol: 'TCP',\n    windowSize: 65536,\n    congestionControl: 'CUBIC',\n    retransmissionTimeout: 3000\n  }\n};\n\\`\\`\\`\n\n## Emerging Protocols\n\n### 1. HTTP/3 (QUIC)\n\n**Characteristics:**\n- Built on UDP\n- Multiplexed streams\n- 0-RTT connection establishment\n- Built-in encryption\n\n### 2. gRPC\n\n**Features:**\n- HTTP/2 based\n- Protocol Buffers serialization\n- Bidirectional streaming\n- Language agnostic\n\n\\`\\`\\`javascript\n// gRPC service definition\nconst grpcService = {\n  GetUser: {\n    path: '/users.UserService/GetUser',\n    requestType: 'GetUserRequest',\n    responseType: 'User',\n    requestStream: false,\n    responseStream: false\n  },\n  \n  StreamUsers: {\n    path: '/users.UserService/StreamUsers',\n    requestType: 'StreamUsersRequest',\n    responseType: 'User',\n    requestStream: false,\n    responseStream: true\n  }\n};\n\\`\\`\\`\n\n### 3. WebRTC\n\n**Components:**\n- MediaStream API\n- RTCPeerConnection\n- RTCDataChannel\n- STUN/TURN servers\n\n## Conclusion\n\nNetwork protocols form the foundation of modern communication systems. Understanding their characteristics, trade-offs, and appropriate use cases is crucial for:\n\n1. **System Design**: Choosing the right protocols for specific requirements\n2. **Performance Optimization**: Tuning protocol parameters for optimal performance\n3. **Security**: Implementing appropriate security protocols and practices\n4. **Troubleshooting**: Diagnosing and resolving network issues\n5. **Scalability**: Designing systems that can handle increasing loads\n\nThe evolution of protocols continues with new standards addressing modern requirements like low latency, high throughput, and enhanced security. Staying current with protocol developments is essential for building robust, efficient, and secure networked systems.\n`\n}; ","export const tcp = {\n  id: 'tcp',\n  title: 'TCP (Transmission Control Protocol)',\n  content: `# TCP (Transmission Control Protocol)\n\n## Definition\nTCP is a reliable, connection-oriented protocol that ensures data is delivered accurately and in order.\n\n## Key Features\n- **Connection-Oriented**: Establishes connection before data transfer\n- **Reliable**: Guarantees data delivery\n- **Ordered**: Data arrives in correct sequence\n- **Flow Control**: Manages data transmission rate\n- **Error Detection**: Checksums and acknowledgments\n\n## TCP Handshake\n1. **SYN**: Client sends synchronization request\n2. **SYN-ACK**: Server acknowledges and sends its own SYN\n3. **ACK**: Client acknowledges server's SYN\n\n## TCP Header Fields\n- Source/Destination Port\n- Sequence Number\n- Acknowledgment Number\n- Window Size\n- Checksum\n- Flags (SYN, ACK, FIN, RST)\n\n## Congestion Control\n- **Slow Start**: Gradually increase window size\n- **Congestion Avoidance**: Linear increase\n- **Fast Retransmit**: Quick recovery from packet loss\n\n## Interview Questions\n**Q: Explain the TCP three-way handshake.**\nA: SYN from client, SYN-ACK from server, ACK from client to establish connection.`\n}; ","export const tcpVsUdp = {\n  id: 'tcp-vs-udp',\n  title: 'TCP vs UDP',\n  content: `\n    <h2>TCP vs UDP</h2>\n    <p>TCP (Transmission Control Protocol) and UDP (User Datagram Protocol) are the two main transport layer protocols in the Internet Protocol suite. They serve different purposes and have distinct characteristics.</p>\n\n    <h3>TCP (Transmission Control Protocol)</h3>\n    <p>TCP is a connection-oriented, reliable protocol that ensures data delivery through acknowledgments and retransmissions. It provides ordered, error-checked delivery of data between applications.</p>\n\n    <h4>TCP Characteristics</h4>\n    <ul>\n      <li><strong>Connection-Oriented:</strong> Establishes connection before data transfer</li>\n      <li><strong>Reliable:</strong> Guarantees delivery through acknowledgments</li>\n      <li><strong>Ordered:</strong> Data arrives in the same order it was sent</li>\n      <li><strong>Error Checking:</strong> Detects and retransmits corrupted data</li>\n      <li><strong>Flow Control:</strong> Prevents overwhelming the receiver</li>\n      <li><strong>Congestion Control:</strong> Adapts to network conditions</li>\n    </ul>\n\n    <h3>UDP (User Datagram Protocol)</h3>\n    <p>UDP is a connectionless, unreliable protocol that sends data without establishing a connection or guaranteeing delivery. It's faster but less reliable than TCP.</p>\n\n    <h4>UDP Characteristics</h4>\n    <ul>\n      <li><strong>Connectionless:</strong> No connection establishment needed</li>\n      <li><strong>Unreliable:</strong> No delivery guarantees</li>\n      <li><strong>Unordered:</strong> Packets may arrive out of order</li>\n      <li><strong>No Flow Control:</strong> Sender doesn't adapt to receiver</li>\n      <li><strong>Low Overhead:</strong> Minimal protocol overhead</li>\n      <li><strong>Fast:</strong> No connection setup or acknowledgments</li>\n    </ul>\n\n    <h3>Comparison Table</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th>TCP</th>\n          <th>UDP</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Connection</strong></td>\n          <td>Connection-oriented</td>\n          <td>Connectionless</td>\n        </tr>\n        <tr>\n          <td><strong>Reliability</strong></td>\n          <td>Reliable (ACK needed)</td>\n          <td>Unreliable (no ACK)</td>\n        </tr>\n        <tr>\n          <td><strong>Ordering</strong></td>\n          <td>In-order delivery</td>\n          <td>No ordering guarantee</td>\n        </tr>\n        <tr>\n          <td><strong>Speed</strong></td>\n          <td>Slower</td>\n          <td>Faster</td>\n        </tr>\n        <tr>\n          <td><strong>Header Size</strong></td>\n          <td>20 bytes minimum</td>\n          <td>8 bytes</td>\n        </tr>\n        <tr>\n          <td><strong>Error Checking</strong></td>\n          <td>Yes, with recovery</td>\n          <td>Yes, but no recovery</td>\n        </tr>\n        <tr>\n          <td><strong>Flow Control</strong></td>\n          <td>Yes</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>Congestion Control</strong></td>\n          <td>Yes</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>Broadcasting</strong></td>\n          <td>No</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>Use Cases</strong></td>\n          <td>Web, Email, File Transfer</td>\n          <td>Streaming, Gaming, DNS</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>TCP Three-Way Handshake</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. SYN: Client → Server\n   - Client sends SYN packet with initial sequence number\n   - \"Hey, I want to establish a connection\"\n\n2. SYN-ACK: Server → Client\n   - Server responds with SYN-ACK\n   - \"OK, I acknowledge your request, here's my sequence number\"\n\n3. ACK: Client → Server\n   - Client sends ACK to complete handshake\n   - \"Great, connection established\"\n\nConnection established - data transfer can begin</code></pre>\n    </div>\n\n    <h3>TCP Connection Termination</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. FIN: Initiator → Receiver\n   - \"I'm done sending data\"\n\n2. ACK: Receiver → Initiator\n   - \"OK, I acknowledge your FIN\"\n\n3. FIN: Receiver → Initiator\n   - \"I'm also done sending data\"\n\n4. ACK: Initiator → Receiver\n   - \"OK, connection closed\"\n\nConnection terminated</code></pre>\n    </div>\n\n    <h3>Use Cases</h3>\n    \n    <h4>When to Use TCP</h4>\n    <ul>\n      <li><strong>Web Browsing (HTTP/HTTPS):</strong> Reliable page loading</li>\n      <li><strong>Email (SMTP, POP3, IMAP):</strong> Ensure message delivery</li>\n      <li><strong>File Transfer (FTP, SFTP):</strong> Complete file integrity</li>\n      <li><strong>Database Connections:</strong> Consistent data transfer</li>\n      <li><strong>SSH:</strong> Secure remote access</li>\n      <li><strong>Any scenario requiring guaranteed delivery</strong></li>\n    </ul>\n\n    <h4>When to Use UDP</h4>\n    <ul>\n      <li><strong>Live Streaming:</strong> Speed over reliability</li>\n      <li><strong>Online Gaming:</strong> Low latency critical</li>\n      <li><strong>VoIP:</strong> Real-time communication</li>\n      <li><strong>DNS Queries:</strong> Quick lookups</li>\n      <li><strong>DHCP:</strong> Network configuration</li>\n      <li><strong>IoT Sensors:</strong> Frequent small updates</li>\n      <li><strong>Broadcasting/Multicasting:</strong> One-to-many communication</li>\n    </ul>\n\n    <h3>Protocol Headers</h3>\n    \n    <h4>TCP Header (20 bytes minimum)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |       Destination Port        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        Sequence Number                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                    Acknowledgment Number                      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Data |           |U|A|P|R|S|F|                               |\n| Offset| Reserved  |R|C|S|S|Y|I|            Window             |\n|       |           |G|K|H|T|N|N|                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           Checksum            |         Urgent Pointer        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>\n    </div>\n\n    <h4>UDP Header (8 bytes)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          Source Port          |       Destination Port        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|            Length             |           Checksum            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>\n    </div>\n\n    <h3>Performance Considerations</h3>\n    \n    <h4>TCP Performance</h4>\n    <ul>\n      <li><strong>Latency:</strong> Higher due to handshake and acknowledgments</li>\n      <li><strong>Throughput:</strong> Can be high with proper tuning</li>\n      <li><strong>CPU Usage:</strong> Higher due to state management</li>\n      <li><strong>Memory:</strong> Maintains connection state and buffers</li>\n    </ul>\n\n    <h4>UDP Performance</h4>\n    <ul>\n      <li><strong>Latency:</strong> Lower, no connection overhead</li>\n      <li><strong>Throughput:</strong> Can be higher for small messages</li>\n      <li><strong>CPU Usage:</strong> Lower, minimal processing</li>\n      <li><strong>Memory:</strong> No connection state to maintain</li>\n    </ul>\n\n    <h3>Hybrid Approaches</h3>\n    \n    <h4>QUIC Protocol</h4>\n    <ul>\n      <li>Built on UDP but provides reliability</li>\n      <li>Used in HTTP/3</li>\n      <li>Faster connection establishment</li>\n      <li>Better handling of packet loss</li>\n    </ul>\n\n    <h4>Reliable UDP</h4>\n    <ul>\n      <li>Application-layer reliability over UDP</li>\n      <li>Custom acknowledgment mechanisms</li>\n      <li>Used in gaming and streaming</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.educative.io/answers/tcp-vs-udp\" target=\"_blank\">TCP vs UDP - Educative</a></li>\n      <li><a href=\"https://www.scaler.com/topics/computer-network/tcp-vs-udp/\" target=\"_blank\">TCP vs UDP - Scaler</a></li>\n    </ul>\n  `\n}; ","export const osiModel = {\n  id: 'osi-model',\n  title: 'OSI Model',\n  content: `\n    <h2>OSI (Open Systems Interconnection) Model</h2>\n    <p>The OSI Model is a conceptual framework that standardizes the functions of a telecommunication or computing system into seven distinct layers. Each layer serves specific functions and communicates with the layers directly above and below it.</p>\n\n    <h3>The Seven Layers</h3>\n    \n    <h4>Layer 7: Application Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Network process to application</li>\n      <li><strong>Purpose:</strong> Provides network services directly to end-users</li>\n      <li><strong>Protocols:</strong> HTTP, HTTPS, FTP, SMTP, DNS, DHCP</li>\n      <li><strong>Examples:</strong> Web browsers, email clients, file transfer</li>\n      <li><strong>Data Unit:</strong> Data</li>\n    </ul>\n\n    <h4>Layer 6: Presentation Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Data representation and encryption</li>\n      <li><strong>Purpose:</strong> Translates data between application and network format</li>\n      <li><strong>Services:</strong> Encryption/Decryption, Compression, Data conversion</li>\n      <li><strong>Formats:</strong> JPEG, GIF, MPEG, SSL/TLS</li>\n      <li><strong>Data Unit:</strong> Data</li>\n    </ul>\n\n    <h4>Layer 5: Session Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Interhost communication</li>\n      <li><strong>Purpose:</strong> Establishes, manages, and terminates sessions</li>\n      <li><strong>Services:</strong> Session checkpointing, recovery, synchronization</li>\n      <li><strong>Protocols:</strong> SQL, NetBIOS, RPC</li>\n      <li><strong>Data Unit:</strong> Data</li>\n    </ul>\n\n    <h4>Layer 4: Transport Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> End-to-end connections and reliability</li>\n      <li><strong>Purpose:</strong> Reliable data transfer between end systems</li>\n      <li><strong>Services:</strong> Segmentation, Flow control, Error control</li>\n      <li><strong>Protocols:</strong> TCP, UDP, SPX</li>\n      <li><strong>Data Unit:</strong> Segment (TCP) / Datagram (UDP)</li>\n    </ul>\n\n    <h4>Layer 3: Network Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Path determination and logical addressing</li>\n      <li><strong>Purpose:</strong> Routes data packets across networks</li>\n      <li><strong>Services:</strong> Routing, Logical addressing, Path determination</li>\n      <li><strong>Protocols:</strong> IP (IPv4/IPv6), ICMP, OSPF, BGP</li>\n      <li><strong>Data Unit:</strong> Packet</li>\n      <li><strong>Devices:</strong> Routers, Layer 3 switches</li>\n    </ul>\n\n    <h4>Layer 2: Data Link Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Node-to-node delivery</li>\n      <li><strong>Purpose:</strong> Error-free transfer between adjacent nodes</li>\n      <li><strong>Services:</strong> Framing, Physical addressing, Error detection</li>\n      <li><strong>Protocols:</strong> Ethernet, PPP, Wi-Fi (802.11)</li>\n      <li><strong>Data Unit:</strong> Frame</li>\n      <li><strong>Devices:</strong> Switches, Bridges</li>\n    </ul>\n\n    <h4>Layer 1: Physical Layer</h4>\n    <ul>\n      <li><strong>Function:</strong> Transmission of raw bits</li>\n      <li><strong>Purpose:</strong> Defines electrical and physical specifications</li>\n      <li><strong>Components:</strong> Cables, Connectors, Repeaters, Hubs</li>\n      <li><strong>Standards:</strong> RJ45, V.35, Ethernet cables</li>\n      <li><strong>Data Unit:</strong> Bit</li>\n    </ul>\n\n    <h3>Data Encapsulation Process</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Sending Process (Top-Down):\nApplication → Data\nPresentation → Data\nSession → Data\nTransport → Segment/Datagram + Header\nNetwork → Packet + Header\nData Link → Frame + Header + Trailer\nPhysical → Bits\n\nReceiving Process (Bottom-Up):\nBits → Physical\nFrame → Data Link (removes frame header/trailer)\nPacket → Network (removes IP header)\nSegment → Transport (removes TCP/UDP header)\nData → Session\nData → Presentation\nData → Application</code></pre>\n    </div>\n\n    <h3>OSI vs TCP/IP Model</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>OSI Layer</th>\n          <th>TCP/IP Layer</th>\n          <th>Key Difference</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Application</td>\n          <td rowspan=\"3\">Application</td>\n          <td rowspan=\"3\">TCP/IP combines top 3 layers</td>\n        </tr>\n        <tr>\n          <td>Presentation</td>\n        </tr>\n        <tr>\n          <td>Session</td>\n        </tr>\n        <tr>\n          <td>Transport</td>\n          <td>Transport</td>\n          <td>Similar functionality</td>\n        </tr>\n        <tr>\n          <td>Network</td>\n          <td>Internet</td>\n          <td>Called Internet in TCP/IP</td>\n        </tr>\n        <tr>\n          <td>Data Link</td>\n          <td rowspan=\"2\">Network Access</td>\n          <td rowspan=\"2\">TCP/IP combines bottom 2 layers</td>\n        </tr>\n        <tr>\n          <td>Physical</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Remember with Mnemonics</h3>\n    \n    <h4>Top to Bottom</h4>\n    <ul>\n      <li><strong>A</strong>ll <strong>P</strong>eople <strong>S</strong>eem <strong>T</strong>o <strong>N</strong>eed <strong>D</strong>ata <strong>P</strong>rocessing</li>\n      <li><strong>A</strong>pplication, <strong>P</strong>resentation, <strong>S</strong>ession, <strong>T</strong>ransport, <strong>N</strong>etwork, <strong>D</strong>ata Link, <strong>P</strong>hysical</li>\n    </ul>\n\n    <h4>Bottom to Top</h4>\n    <ul>\n      <li><strong>P</strong>lease <strong>D</strong>o <strong>N</strong>ot <strong>T</strong>hrow <strong>S</strong>ausage <strong>P</strong>izza <strong>A</strong>way</li>\n      <li><strong>P</strong>hysical, <strong>D</strong>ata Link, <strong>N</strong>etwork, <strong>T</strong>ransport, <strong>S</strong>ession, <strong>P</strong>resentation, <strong>A</strong>pplication</li>\n    </ul>\n\n    <h3>Practical Applications</h3>\n    \n    <h4>Troubleshooting</h4>\n    <ol>\n      <li><strong>Physical:</strong> Check cables, connections</li>\n      <li><strong>Data Link:</strong> Verify MAC addresses, switch configuration</li>\n      <li><strong>Network:</strong> Check IP configuration, routing</li>\n      <li><strong>Transport:</strong> Verify port numbers, firewall rules</li>\n      <li><strong>Application:</strong> Check application settings</li>\n    </ol>\n\n    <h4>Security Implementations</h4>\n    <ul>\n      <li><strong>Physical:</strong> Secure facilities, cable locks</li>\n      <li><strong>Data Link:</strong> MAC filtering, 802.1X</li>\n      <li><strong>Network:</strong> IPSec, Firewalls</li>\n      <li><strong>Transport:</strong> SSL/TLS</li>\n      <li><strong>Application:</strong> Application firewalls, encryption</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.scaler.com/topics/computer-network/osi-model/\" target=\"_blank\">OSI Model - Scaler</a></li>\n      <li><a href=\"https://www.geeksforgeeks.org/layers-of-osi-model/\" target=\"_blank\">Layers of OSI Model - GeeksforGeeks</a></li>\n    </ul>\n  `\n}; ","export const tcpIpModel = {\n  id: 'tcp-ip-model',\n  title: 'TCP/IP Model',\n  content: `\n    <h2>TCP/IP Model</h2>\n    <p>The TCP/IP model is a concise version of the OSI model, containing four layers instead of seven. It was developed by the Department of Defense (DoD) and is the foundation of the modern internet.</p>\n\n    <h3>The Four Layers</h3>\n    \n    <h4>Layer 4: Application Layer</h4>\n    <ul>\n      <li><strong>Combines:</strong> OSI Application, Presentation, and Session layers</li>\n      <li><strong>Function:</strong> Provides network services to applications</li>\n      <li><strong>Protocols:</strong> HTTP, HTTPS, FTP, SMTP, DNS, SSH, Telnet</li>\n      <li><strong>Responsibilities:</strong> Data formatting, encryption, session management</li>\n      <li><strong>Port Numbers:</strong> Identifies specific applications (80 for HTTP, 443 for HTTPS)</li>\n    </ul>\n\n    <h4>Layer 3: Transport Layer</h4>\n    <ul>\n      <li><strong>Equivalent to:</strong> OSI Transport layer</li>\n      <li><strong>Function:</strong> End-to-end message delivery and error recovery</li>\n      <li><strong>Protocols:</strong> TCP (reliable), UDP (unreliable)</li>\n      <li><strong>TCP Features:</strong> Connection-oriented, flow control, error checking</li>\n      <li><strong>UDP Features:</strong> Connectionless, faster, no error recovery</li>\n    </ul>\n\n    <h4>Layer 2: Internet Layer</h4>\n    <ul>\n      <li><strong>Equivalent to:</strong> OSI Network layer</li>\n      <li><strong>Function:</strong> Routing packets across networks</li>\n      <li><strong>Protocols:</strong> IP (IPv4/IPv6), ICMP, ARP, RARP</li>\n      <li><strong>Responsibilities:</strong> Logical addressing, path determination</li>\n      <li><strong>Key Component:</strong> IP addressing and subnetting</li>\n    </ul>\n\n    <h4>Layer 1: Network Access Layer (Link Layer)</h4>\n    <ul>\n      <li><strong>Combines:</strong> OSI Physical and Data Link layers</li>\n      <li><strong>Function:</strong> Physical transmission of data</li>\n      <li><strong>Protocols:</strong> Ethernet, Wi-Fi, PPP, Frame Relay</li>\n      <li><strong>Components:</strong> NICs, switches, physical cabling</li>\n      <li><strong>Addressing:</strong> MAC addresses</li>\n    </ul>\n\n    <h3>TCP vs UDP Comparison</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th>TCP</th>\n          <th>UDP</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Connection</strong></td>\n          <td>Connection-oriented</td>\n          <td>Connectionless</td>\n        </tr>\n        <tr>\n          <td><strong>Reliability</strong></td>\n          <td>Reliable (ACK needed)</td>\n          <td>Unreliable</td>\n        </tr>\n        <tr>\n          <td><strong>Ordering</strong></td>\n          <td>Ordered delivery</td>\n          <td>No ordering</td>\n        </tr>\n        <tr>\n          <td><strong>Speed</strong></td>\n          <td>Slower</td>\n          <td>Faster</td>\n        </tr>\n        <tr>\n          <td><strong>Header Size</strong></td>\n          <td>20 bytes minimum</td>\n          <td>8 bytes</td>\n        </tr>\n        <tr>\n          <td><strong>Use Cases</strong></td>\n          <td>Web, Email, File Transfer</td>\n          <td>Streaming, Gaming, DNS</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>TCP Three-Way Handshake</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. SYN (Synchronize)\n   Client → Server\n   \"I want to establish a connection\"\n   Seq = x\n\n2. SYN-ACK (Synchronize-Acknowledge)\n   Server → Client\n   \"I acknowledge and also want to connect\"\n   Seq = y, Ack = x + 1\n\n3. ACK (Acknowledge)\n   Client → Server\n   \"Connection established\"\n   Seq = x + 1, Ack = y + 1\n\nConnection Established!</code></pre>\n    </div>\n\n    <h3>TCP Connection Termination</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. FIN (Finish)\n   Client → Server\n   \"I want to close the connection\"\n\n2. ACK\n   Server → Client\n   \"I acknowledge your request\"\n\n3. FIN\n   Server → Client\n   \"I also want to close\"\n\n4. ACK\n   Client → Server\n   \"Connection closed\"</code></pre>\n    </div>\n\n    <h3>Common Port Numbers</h3>\n    \n    <h4>Well-Known Ports (0-1023)</h4>\n    <ul>\n      <li><strong>20/21:</strong> FTP (Data/Control)</li>\n      <li><strong>22:</strong> SSH</li>\n      <li><strong>23:</strong> Telnet</li>\n      <li><strong>25:</strong> SMTP</li>\n      <li><strong>53:</strong> DNS</li>\n      <li><strong>80:</strong> HTTP</li>\n      <li><strong>110:</strong> POP3</li>\n      <li><strong>143:</strong> IMAP</li>\n      <li><strong>443:</strong> HTTPS</li>\n    </ul>\n\n    <h4>Registered Ports (1024-49151)</h4>\n    <ul>\n      <li><strong>3306:</strong> MySQL</li>\n      <li><strong>5432:</strong> PostgreSQL</li>\n      <li><strong>6379:</strong> Redis</li>\n      <li><strong>8080:</strong> HTTP Alternate</li>\n      <li><strong>9092:</strong> Kafka</li>\n      <li><strong>27017:</strong> MongoDB</li>\n    </ul>\n\n    <h3>IP Addressing</h3>\n    \n    <h4>IPv4</h4>\n    <ul>\n      <li>32-bit address (4 octets)</li>\n      <li>Format: xxx.xxx.xxx.xxx (0-255 each)</li>\n      <li>Total addresses: ~4.3 billion</li>\n      <li>Private ranges: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16</li>\n    </ul>\n\n    <h4>IPv6</h4>\n    <ul>\n      <li>128-bit address</li>\n      <li>Format: xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</li>\n      <li>Total addresses: 340 undecillion</li>\n      <li>Built-in security and QoS</li>\n    </ul>\n\n    <h3>TCP/IP Protocol Suite</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Application Layer Protocols:\n- HTTP/HTTPS: Web browsing\n- FTP/SFTP: File transfer\n- SMTP/POP3/IMAP: Email\n- DNS: Name resolution\n- DHCP: Dynamic IP assignment\n\nTransport Layer Protocols:\n- TCP: Reliable, ordered delivery\n- UDP: Fast, unreliable delivery\n\nInternet Layer Protocols:\n- IP: Packet routing\n- ICMP: Error messages and diagnostics (ping)\n- ARP: IP to MAC address resolution\n- RARP: MAC to IP address resolution\n\nNetwork Access Layer:\n- Ethernet: Wired networks\n- Wi-Fi (802.11): Wireless networks\n- PPP: Point-to-point connections</code></pre>\n    </div>\n\n    <h3>Advantages of TCP/IP</h3>\n    <ul>\n      <li><strong>Scalability:</strong> Works from small to global networks</li>\n      <li><strong>Interoperability:</strong> Platform and vendor independent</li>\n      <li><strong>Routability:</strong> Efficient packet routing</li>\n      <li><strong>Robustness:</strong> Automatic error recovery</li>\n      <li><strong>Flexibility:</strong> Supports various physical networks</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.scaler.com/topics/computer-network/tcp-ip-protocol-suite/\" target=\"_blank\">TCP/IP Protocol Suite - Scaler</a></li>\n      <li><a href=\"https://www.geeksforgeeks.org/tcp-ip-model/\" target=\"_blank\">TCP/IP Model - GeeksforGeeks</a></li>\n      <li><a href=\"https://www.educative.io/answers/tcp-vs-udp\" target=\"_blank\">TCP vs UDP - Educative</a></li>\n      <li><a href=\"https://www.scaler.com/topics/computer-network/tcp-vs-udp/\" target=\"_blank\">TCP vs UDP - Scaler</a></li>\n    </ul>\n  `\n};","export const http = {\n  id: 'http',\n  title: 'HTTP (HyperText Transfer Protocol)',\n  content: `# HTTP (HyperText Transfer Protocol)\n\n## Definition\nHTTP is an application-layer protocol for transmitting hypermedia documents between web servers and clients.\n\n## HTTP Methods\n- **GET**: Retrieve data\n- **POST**: Submit data\n- **PUT**: Update/replace resource\n- **PATCH**: Partial update\n- **DELETE**: Remove resource\n- **HEAD**: Get headers only\n- **OPTIONS**: Get allowed methods\n\n## Status Codes\n- **1xx**: Informational\n- **2xx**: Success (200 OK, 201 Created)\n- **3xx**: Redirection (301 Moved, 302 Found)\n- **4xx**: Client Error (400 Bad Request, 404 Not Found)\n- **5xx**: Server Error (500 Internal Server Error)\n\n## HTTP Headers\n- **Request**: Host, User-Agent, Accept\n- **Response**: Content-Type, Content-Length, Set-Cookie\n- **General**: Date, Connection, Cache-Control\n\n## HTTP vs HTTPS\n- **HTTP**: Plain text, port 80\n- **HTTPS**: Encrypted with TLS/SSL, port 443\n\n## Interview Questions\n**Q: What's the difference between PUT and PATCH?**\nA: PUT replaces the entire resource, while PATCH applies partial modifications.`\n}; ","export const httpVsHttps = {\n  id: 'http-vs-https',\n  title: 'HTTP vs HTTPS',\n  content: `\n    <h2>HTTP vs HTTPS</h2>\n    <p>HTTP (Hypertext Transfer Protocol) and HTTPS (HTTP Secure) are the foundation of data communication on the World Wide Web. Understanding their differences is crucial for web security and performance.</p>\n\n    <h3>HTTP (Hypertext Transfer Protocol)</h3>\n    <p>HTTP requests and responses are typically sent and received over the network as plain text. The content of HTTP messages, including headers and message bodies, is human-readable and not encrypted by default. It typically uses port 80 for communication.</p>\n\n    <h4>HTTP Characteristics</h4>\n    <ul>\n      <li><strong>Plain Text:</strong> All data transmitted in readable format</li>\n      <li><strong>No Encryption:</strong> Vulnerable to eavesdropping</li>\n      <li><strong>Port 80:</strong> Default port for HTTP traffic</li>\n      <li><strong>Faster:</strong> No encryption overhead</li>\n      <li><strong>No Certificate:</strong> No SSL/TLS certificate required</li>\n    </ul>\n\n    <h3>HTTPS (HTTP Secure)</h3>\n    <p>HTTPS is essentially HTTP, but secure. Before the actual data transfer begins, the client and server perform a TLS handshake. This handshake involves the server sending its SSL certificate to the client to verify the server's identity. The certificate contains the server's public key and is issued by a trusted Certificate Authority (CA). It uses port 443 for communication.</p>\n\n    <h4>HTTPS Characteristics</h4>\n    <ul>\n      <li><strong>Encrypted:</strong> All data encrypted using TLS/SSL</li>\n      <li><strong>Secure:</strong> Protected against eavesdropping and tampering</li>\n      <li><strong>Port 443:</strong> Default port for HTTPS traffic</li>\n      <li><strong>Certificate Required:</strong> Needs valid SSL/TLS certificate</li>\n      <li><strong>SEO Benefits:</strong> Search engines prefer HTTPS sites</li>\n    </ul>\n\n    <h3>TLS/SSL Handshake Process</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. Client Hello\n   - Client sends supported TLS versions\n   - Cipher suites it supports\n   - Random number (Client Random)\n\n2. Server Hello\n   - Server chooses TLS version and cipher suite\n   - Sends its certificate\n   - Random number (Server Random)\n\n3. Certificate Verification\n   - Client verifies server certificate\n   - Checks CA signature\n   - Validates domain name\n\n4. Key Exchange\n   - Client generates pre-master secret\n   - Encrypts with server's public key\n   - Sends to server\n\n5. Session Keys Generation\n   - Both derive session keys from:\n     * Client Random\n     * Server Random\n     * Pre-master Secret\n\n6. Finished Messages\n   - Client sends encrypted \"finished\" message\n   - Server sends encrypted \"finished\" message\n\n7. Secure Communication Established\n   - All data encrypted with session keys</code></pre>\n    </div>\n\n    <h3>Key Differences</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>HTTP</th>\n          <th>HTTPS</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Security</strong></td>\n          <td>No encryption</td>\n          <td>TLS/SSL encryption</td>\n        </tr>\n        <tr>\n          <td><strong>Port</strong></td>\n          <td>80</td>\n          <td>443</td>\n        </tr>\n        <tr>\n          <td><strong>URL Prefix</strong></td>\n          <td>http://</td>\n          <td>https://</td>\n        </tr>\n        <tr>\n          <td><strong>Certificate</strong></td>\n          <td>Not required</td>\n          <td>SSL/TLS certificate required</td>\n        </tr>\n        <tr>\n          <td><strong>Speed</strong></td>\n          <td>Faster (no encryption)</td>\n          <td>Slightly slower (encryption overhead)</td>\n        </tr>\n        <tr>\n          <td><strong>SEO Ranking</strong></td>\n          <td>Lower preference</td>\n          <td>Higher preference</td>\n        </tr>\n        <tr>\n          <td><strong>Browser Indicator</strong></td>\n          <td>\"Not Secure\" warning</td>\n          <td>Padlock icon</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Security Benefits of HTTPS</h3>\n    \n    <h4>Encryption</h4>\n    <ul>\n      <li>All data encrypted in transit</li>\n      <li>Protects sensitive information (passwords, credit cards)</li>\n      <li>Prevents packet sniffing</li>\n      <li>Guards against man-in-the-middle attacks</li>\n    </ul>\n\n    <h4>Authentication</h4>\n    <ul>\n      <li>Verifies server identity</li>\n      <li>Prevents impersonation</li>\n      <li>Certificate chain validation</li>\n      <li>Domain ownership verification</li>\n    </ul>\n\n    <h4>Data Integrity</h4>\n    <ul>\n      <li>Detects data tampering</li>\n      <li>Message authentication codes (MAC)</li>\n      <li>Prevents content injection</li>\n      <li>Ensures data hasn't been modified</li>\n    </ul>\n\n    <h3>Certificate Types</h3>\n    \n    <h4>Domain Validation (DV)</h4>\n    <ul>\n      <li>Basic level of validation</li>\n      <li>Verifies domain ownership only</li>\n      <li>Quick issuance (minutes)</li>\n      <li>Suitable for blogs, personal sites</li>\n    </ul>\n\n    <h4>Organization Validation (OV)</h4>\n    <ul>\n      <li>Verifies organization identity</li>\n      <li>More thorough vetting process</li>\n      <li>Takes days to issue</li>\n      <li>Shows organization name in certificate</li>\n    </ul>\n\n    <h4>Extended Validation (EV)</h4>\n    <ul>\n      <li>Highest level of validation</li>\n      <li>Extensive verification process</li>\n      <li>Green address bar (in older browsers)</li>\n      <li>Best for e-commerce, banking</li>\n    </ul>\n\n    <h3>Certificate Authorities (CAs)</h3>\n    \n    <h4>Popular CAs</h4>\n    <ul>\n      <li><strong>Let's Encrypt:</strong> Free, automated certificates</li>\n      <li><strong>DigiCert:</strong> Enterprise-grade certificates</li>\n      <li><strong>Comodo/Sectigo:</strong> Wide range of options</li>\n      <li><strong>GlobalSign:</strong> International presence</li>\n      <li><strong>GoDaddy:</strong> Popular with small businesses</li>\n    </ul>\n\n    <h3>HTTPS Implementation Best Practices</h3>\n    \n    <h4>Certificate Management</h4>\n    <ul>\n      <li>Use certificates from trusted CAs</li>\n      <li>Implement automatic renewal</li>\n      <li>Monitor expiration dates</li>\n      <li>Use wildcard certificates for subdomains</li>\n    </ul>\n\n    <h4>Security Headers</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Strict Transport Security\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n\n# Content Security Policy\nContent-Security-Policy: default-src 'self'\n\n# X-Frame-Options\nX-Frame-Options: DENY\n\n# X-Content-Type-Options\nX-Content-Type-Options: nosniff</code></pre>\n    </div>\n\n    <h4>Performance Optimization</h4>\n    <ul>\n      <li><strong>HTTP/2:</strong> Multiplexing over single connection</li>\n      <li><strong>OCSP Stapling:</strong> Faster certificate validation</li>\n      <li><strong>Session Resumption:</strong> Reuse TLS sessions</li>\n      <li><strong>TLS 1.3:</strong> Faster handshake (1-RTT or 0-RTT)</li>\n    </ul>\n\n    <h3>Common HTTPS Issues</h3>\n    \n    <h4>Mixed Content</h4>\n    <ul>\n      <li>HTTPS page loading HTTP resources</li>\n      <li>Browsers block or warn about mixed content</li>\n      <li>Solution: Use protocol-relative URLs or HTTPS everywhere</li>\n    </ul>\n\n    <h4>Certificate Errors</h4>\n    <ul>\n      <li><strong>Expired Certificate:</strong> Renew immediately</li>\n      <li><strong>Self-Signed Certificate:</strong> Not trusted by browsers</li>\n      <li><strong>Domain Mismatch:</strong> Certificate doesn't match domain</li>\n      <li><strong>Untrusted CA:</strong> Certificate from unknown authority</li>\n    </ul>\n\n    <h3>Migration from HTTP to HTTPS</h3>\n    \n    <ol>\n      <li><strong>Obtain SSL Certificate:</strong> Choose appropriate type</li>\n      <li><strong>Install Certificate:</strong> Configure web server</li>\n      <li><strong>Update Internal Links:</strong> Change to HTTPS</li>\n      <li><strong>Set Up Redirects:</strong> 301 redirect HTTP to HTTPS</li>\n      <li><strong>Update External Services:</strong> APIs, CDNs, analytics</li>\n      <li><strong>Submit to Search Engines:</strong> Update sitemap</li>\n      <li><strong>Monitor for Issues:</strong> Check for mixed content</li>\n    </ol>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.cloudflare.com/learning/ssl/why-is-http-not-secure/\" target=\"_blank\">Why is HTTP not secure? - Cloudflare</a></li>\n      <li><a href=\"https://blog.bytebytego.com/p/how-https-works-youtube-diagram-as\" target=\"_blank\">How HTTPS Works - ByteByteGo</a></li>\n    </ul>\n  `\n}; ","export const https = {\n  id: 'https',\n  title: 'HTTPS (HTTP Secure)',\n  content: `# HTTPS (HTTP Secure)\n\n## Definition\nHTTPS is HTTP over TLS/SSL, providing encrypted communication between web browsers and servers.\n\n## Key Features\n- **Encryption**: Data is encrypted in transit\n- **Authentication**: Verifies server identity\n- **Integrity**: Prevents data tampering\n- **Trust**: Uses certificate authorities\n\n## TLS/SSL Handshake\n1. Client Hello (supported ciphers)\n2. Server Hello (chosen cipher, certificate)\n3. Key exchange and verification\n4. Encrypted communication begins\n\n## Certificates\n- **SSL Certificate**: Digital certificate for authentication\n- **Certificate Authority (CA)**: Trusted third party\n- **Public Key Infrastructure (PKI)**: Certificate management\n- **Certificate Chain**: Root, intermediate, and end-entity certificates\n\n## Benefits\n- Data protection\n- SEO advantages\n- User trust\n- Compliance requirements\n\n## Performance Considerations\n- Initial handshake overhead\n- Encryption/decryption processing\n- Certificate validation\n\n## Interview Questions\n**Q: What happens during the TLS handshake?**\nA: Client and server negotiate encryption parameters, exchange certificates, and establish a secure connection.`\n}; ","export const httpVersions = {\n  id: 'http-versions',\n  title: 'HTTP Versions (HTTP/1.0 to HTTP/3.0)',\n  content: `\n    <h2>HTTP Versions Evolution</h2>\n    <p>The evolution of HTTP from version 1.0 to 3.0 represents significant improvements in web performance, addressing issues like connection overhead, head-of-line blocking, and latency.</p>\n\n    <h3>HTTP 1.0 (1996)</h3>\n    <p>Each request to the server required a new TCP connection. No persistent connections were allowed, resulting in increased latency and overhead due to repeated connection establishment.</p>\n\n    <h4>HTTP 1.0 Characteristics</h4>\n    <ul>\n      <li><strong>One Request per Connection:</strong> TCP connection closed after each request</li>\n      <li><strong>No Persistent Connections:</strong> High overhead from repeated handshakes</li>\n      <li><strong>No Host Header:</strong> One IP address could only serve one website</li>\n      <li><strong>Simple:</strong> Easy to implement but inefficient</li>\n    </ul>\n\n    <h3>HTTP 1.1 (1997)</h3>\n    <p>Introduced persistent connections, allowing a single TCP connection to be reused for multiple requests. However, it did not fully address HOL (Head-of-Line) blocking issues, as subsequent requests still had to wait for earlier ones to complete on the same connection. HTTP is primarily unidirectional with workarounds for bidirectional communication.</p>\n\n    <h4>HTTP 1.1 Improvements</h4>\n    <ul>\n      <li><strong>Persistent Connections:</strong> Keep-Alive by default</li>\n      <li><strong>Pipelining:</strong> Send multiple requests without waiting (rarely used)</li>\n      <li><strong>Host Header:</strong> Virtual hosting support</li>\n      <li><strong>Chunked Transfer:</strong> Stream responses without knowing size</li>\n      <li><strong>Cache Control:</strong> Better caching mechanisms</li>\n    </ul>\n\n    <h4>HTTP 1.1 Problems</h4>\n    <ul>\n      <li><strong>Head-of-Line Blocking:</strong> Requests must complete in order</li>\n      <li><strong>Limited Parallelism:</strong> Browsers open multiple connections (6-8)</li>\n      <li><strong>Redundant Headers:</strong> Headers sent with every request</li>\n      <li><strong>Text Protocol:</strong> Inefficient parsing</li>\n    </ul>\n\n    <h3>HTTP 2.0 (2015)</h3>\n    <p>Addressed HOL blocking through request multiplexing, allowing multiple HTTP exchanges (streams) to be multiplexed onto a single TCP connection. This eliminated HOL blocking at the application layer by enabling parallel processing of requests within the same connection. However, HOL blocking still persisted at the transport (TCP) layer, as a single slow request could delay the transmission of other requests on the same connection. HTTP/2 is designed to support native bidirectional communication.</p>\n\n    <h4>HTTP/2 Key Features</h4>\n    <ul>\n      <li><strong>Binary Protocol:</strong> More efficient parsing and less error-prone</li>\n      <li><strong>Multiplexing:</strong> Multiple streams over single connection</li>\n      <li><strong>Header Compression:</strong> HPACK compression reduces overhead</li>\n      <li><strong>Server Push:</strong> Proactively send resources to client</li>\n      <li><strong>Stream Prioritization:</strong> Control resource delivery order</li>\n    </ul>\n\n    <h4>Multiplexing in HTTP/2</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>HTTP/1.1 (Sequential):\nConnection 1: [Request A]---->[Response A]---->[Request B]---->[Response B]\nConnection 2: [Request C]---->[Response C]---->[Request D]---->[Response D]\n\nHTTP/2 (Multiplexed):\nConnection 1: [Req A][Req B][Req C]---->[Res B][Res A][Res C]\n              All requests can be sent immediately\n              Responses can arrive in any order</code></pre>\n    </div>\n\n    <h3>HTTP 3.0 (2020, draft)</h3>\n    <p>Proposed successor to HTTP 2.0, aiming to further improve performance and address HOL blocking issues. Utilizes QUIC (Quick UDP Internet Connections) instead of TCP as the underlying transport protocol. QUIC operates at the transport layer and is designed to provide better performance, particularly for connections with high latency or packet loss.</p>\n\n    <h4>HTTP/3 Key Features</h4>\n    <ul>\n      <li><strong>QUIC Protocol:</strong> Built on UDP instead of TCP</li>\n      <li><strong>0-RTT Connection:</strong> Resume connections instantly</li>\n      <li><strong>No TCP HOL Blocking:</strong> Packet loss affects only one stream</li>\n      <li><strong>Connection Migration:</strong> Survive network changes (WiFi to cellular)</li>\n      <li><strong>Built-in Encryption:</strong> TLS 1.3 mandatory</li>\n    </ul>\n\n    <h3>Head-of-Line (HOL) Blocking</h3>\n    \n    <h4>Application Layer HOL (HTTP/1.1)</h4>\n    <ul>\n      <li>Requests must be processed in order sent</li>\n      <li>Slow response blocks all subsequent responses</li>\n      <li>Browsers work around with multiple connections</li>\n    </ul>\n\n    <h4>Transport Layer HOL (HTTP/2)</h4>\n    <ul>\n      <li>TCP ensures in-order delivery</li>\n      <li>Lost packet blocks all streams</li>\n      <li>Even unrelated streams are affected</li>\n    </ul>\n\n    <h4>Solution in HTTP/3</h4>\n    <ul>\n      <li>QUIC handles streams independently</li>\n      <li>Lost packet only affects its stream</li>\n      <li>Other streams continue unaffected</li>\n    </ul>\n\n    <h3>Performance Comparison</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th>HTTP/1.1</th>\n          <th>HTTP/2</th>\n          <th>HTTP/3</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Protocol</strong></td>\n          <td>Text</td>\n          <td>Binary</td>\n          <td>Binary</td>\n        </tr>\n        <tr>\n          <td><strong>Transport</strong></td>\n          <td>TCP</td>\n          <td>TCP</td>\n          <td>QUIC (UDP)</td>\n        </tr>\n        <tr>\n          <td><strong>Multiplexing</strong></td>\n          <td>No</td>\n          <td>Yes</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>Header Compression</strong></td>\n          <td>No</td>\n          <td>HPACK</td>\n          <td>QPACK</td>\n        </tr>\n        <tr>\n          <td><strong>Server Push</strong></td>\n          <td>No</td>\n          <td>Yes</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>HOL Blocking</strong></td>\n          <td>Application</td>\n          <td>Transport</td>\n          <td>None</td>\n        </tr>\n        <tr>\n          <td><strong>Connection Setup</strong></td>\n          <td>1.5 RTT</td>\n          <td>1.5 RTT</td>\n          <td>0-1 RTT</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>QUIC Protocol Features</h3>\n    \n    <h4>Connection Establishment</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>TCP + TLS (HTTP/2):\n1. TCP SYN\n2. TCP SYN-ACK\n3. TCP ACK\n4. TLS ClientHello\n5. TLS ServerHello\n6. TLS Finished\nTotal: 3 RTT for new connection\n\nQUIC (HTTP/3):\n1. QUIC Initial (includes TLS ClientHello)\n2. QUIC Handshake (includes TLS ServerHello)\nTotal: 1 RTT for new connection\n      0 RTT for resumed connection</code></pre>\n    </div>\n\n    <h4>Stream Management</h4>\n    <ul>\n      <li><strong>Independent Streams:</strong> No inter-stream dependencies</li>\n      <li><strong>Bidirectional:</strong> Client and server initiated streams</li>\n      <li><strong>Flow Control:</strong> Per-stream and connection level</li>\n      <li><strong>Lightweight:</strong> Minimal overhead for new streams</li>\n    </ul>\n\n    <h3>Migration Considerations</h3>\n    \n    <h4>HTTP/1.1 to HTTP/2</h4>\n    <ul>\n      <li>Transparent to applications</li>\n      <li>Same URL structure</li>\n      <li>Negotiate via ALPN</li>\n      <li>Fallback to HTTP/1.1 if needed</li>\n    </ul>\n\n    <h4>HTTP/2 to HTTP/3</h4>\n    <ul>\n      <li>Alt-Svc header announces HTTP/3 support</li>\n      <li>Client tries QUIC on next connection</li>\n      <li>Fallback to HTTP/2 if QUIC fails</li>\n      <li>May require firewall configuration (UDP)</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>For HTTP/2</h4>\n    <ul>\n      <li><strong>Reduce Connections:</strong> Use single connection per origin</li>\n      <li><strong>Avoid Domain Sharding:</strong> No longer beneficial</li>\n      <li><strong>Use Server Push Wisely:</strong> Only for critical resources</li>\n      <li><strong>Optimize for Multiplexing:</strong> Many small requests are fine</li>\n    </ul>\n\n    <h4>For HTTP/3</h4>\n    <ul>\n      <li><strong>Enable Fallback:</strong> Support HTTP/2 as backup</li>\n      <li><strong>Monitor UDP:</strong> Ensure firewalls allow QUIC</li>\n      <li><strong>Test Thoroughly:</strong> New protocol may have issues</li>\n      <li><strong>Use 0-RTT Carefully:</strong> Replay attack considerations</li>\n    </ul>\n\n    <h3>Browser and Server Support</h3>\n    \n    <h4>HTTP/2 Support</h4>\n    <ul>\n      <li>All modern browsers</li>\n      <li>Nginx, Apache, IIS</li>\n      <li>CDNs: Cloudflare, Akamai, Fastly</li>\n      <li>~95% of web traffic capable</li>\n    </ul>\n\n    <h4>HTTP/3 Support</h4>\n    <ul>\n      <li>Chrome, Firefox, Safari (recent versions)</li>\n      <li>Nginx (with patches), LiteSpeed</li>\n      <li>Cloudflare, Google, Facebook</li>\n      <li>Growing adoption (~25% of web traffic)</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://blog.bytebytego.com/p/http1-vs-http2-vs-http3-a-deep-dive\" target=\"_blank\">HTTP/1 vs HTTP/2 vs HTTP/3 - ByteByteGo</a></li>\n    </ul>\n  `\n}; ","export const httpStatusCodes = {\n  id: 'http-status-codes',\n  title: 'HTTP Status Codes',\n  content: `\n    <h2>HTTP Status Codes</h2>\n    <p>HTTP status codes are three-digit numbers returned by servers to indicate the result of a client's request. They are grouped into five categories based on the first digit.</p>\n\n    <h3>Status Code Categories</h3>\n    \n    <h4>1xx - Informational</h4>\n    <p>Request received, continuing process. These are provisional responses.</p>\n    <ul>\n      <li><strong>100 Continue:</strong> Initial part of request received, client should continue</li>\n      <li><strong>101 Switching Protocols:</strong> Server is switching protocols as requested</li>\n      <li><strong>102 Processing:</strong> Server has received and is processing (WebDAV)</li>\n      <li><strong>103 Early Hints:</strong> Used to return some response headers before final HTTP message</li>\n    </ul>\n\n    <h4>2xx - Success</h4>\n    <p>The request was successfully received, understood, and accepted.</p>\n    <ul>\n      <li><strong>200 OK:</strong> Standard response for successful requests</li>\n      <li><strong>201 Created:</strong> Request succeeded and new resource was created</li>\n      <li><strong>202 Accepted:</strong> Request accepted for processing, but not completed</li>\n      <li><strong>203 Non-Authoritative Information:</strong> Request successful but from another source</li>\n      <li><strong>204 No Content:</strong> Request successful but no content to return</li>\n      <li><strong>205 Reset Content:</strong> Request successful, reset document view</li>\n      <li><strong>206 Partial Content:</strong> Partial resource returned (range requests)</li>\n    </ul>\n\n    <h4>3xx - Redirection</h4>\n    <p>Further action needs to be taken to complete the request.</p>\n    <ul>\n      <li><strong>300 Multiple Choices:</strong> Multiple options for the resource</li>\n      <li><strong>301 Moved Permanently:</strong> Resource permanently moved to new URL</li>\n      <li><strong>302 Found:</strong> Resource temporarily at different URL</li>\n      <li><strong>303 See Other:</strong> Response can be found at another URL using GET</li>\n      <li><strong>304 Not Modified:</strong> Resource hasn't changed since last request</li>\n      <li><strong>307 Temporary Redirect:</strong> Temporary redirect, maintain HTTP method</li>\n      <li><strong>308 Permanent Redirect:</strong> Permanent redirect, maintain HTTP method</li>\n    </ul>\n\n    <h4>4xx - Client Error</h4>\n    <p>The request contains bad syntax or cannot be fulfilled.</p>\n    <ul>\n      <li><strong>400 Bad Request:</strong> Server cannot process due to client error</li>\n      <li><strong>401 Unauthorized:</strong> Authentication required</li>\n      <li><strong>402 Payment Required:</strong> Reserved for future use</li>\n      <li><strong>403 Forbidden:</strong> Server understood but refuses to authorize</li>\n      <li><strong>404 Not Found:</strong> Requested resource not found</li>\n      <li><strong>405 Method Not Allowed:</strong> Request method not supported</li>\n      <li><strong>406 Not Acceptable:</strong> Content not acceptable according to Accept headers</li>\n      <li><strong>407 Proxy Authentication Required:</strong> Client must authenticate with proxy</li>\n      <li><strong>408 Request Timeout:</strong> Server timed out waiting for request</li>\n      <li><strong>409 Conflict:</strong> Request conflicts with current state</li>\n      <li><strong>410 Gone:</strong> Resource no longer available</li>\n      <li><strong>411 Length Required:</strong> Content-Length header required</li>\n      <li><strong>412 Precondition Failed:</strong> Precondition in headers not met</li>\n      <li><strong>413 Payload Too Large:</strong> Request entity too large</li>\n      <li><strong>414 URI Too Long:</strong> URI provided was too long</li>\n      <li><strong>415 Unsupported Media Type:</strong> Media type not supported</li>\n      <li><strong>416 Range Not Satisfiable:</strong> Cannot fulfill range request</li>\n      <li><strong>417 Expectation Failed:</strong> Expect header requirements not met</li>\n      <li><strong>418 I'm a teapot:</strong> April Fools joke (RFC 2324)</li>\n      <li><strong>422 Unprocessable Entity:</strong> Request understood but semantically erroneous</li>\n      <li><strong>425 Too Early:</strong> Server unwilling to risk processing replay request</li>\n      <li><strong>426 Upgrade Required:</strong> Client should switch protocols</li>\n      <li><strong>428 Precondition Required:</strong> Origin server requires conditional request</li>\n      <li><strong>429 Too Many Requests:</strong> User has sent too many requests (rate limiting)</li>\n      <li><strong>431 Request Header Fields Too Large:</strong> Header fields too large</li>\n      <li><strong>451 Unavailable For Legal Reasons:</strong> Resource unavailable due to legal reasons</li>\n    </ul>\n\n    <h4>5xx - Server Error</h4>\n    <p>The server failed to fulfill an apparently valid request.</p>\n    <ul>\n      <li><strong>500 Internal Server Error:</strong> Generic server error</li>\n      <li><strong>501 Not Implemented:</strong> Server doesn't support functionality</li>\n      <li><strong>502 Bad Gateway:</strong> Invalid response from upstream server</li>\n      <li><strong>503 Service Unavailable:</strong> Server temporarily unavailable</li>\n      <li><strong>504 Gateway Timeout:</strong> Upstream server timeout</li>\n      <li><strong>505 HTTP Version Not Supported:</strong> HTTP version not supported</li>\n      <li><strong>506 Variant Also Negotiates:</strong> Content negotiation error</li>\n      <li><strong>507 Insufficient Storage:</strong> Server unable to store representation</li>\n      <li><strong>508 Loop Detected:</strong> Infinite loop detected</li>\n      <li><strong>510 Not Extended:</strong> Further extensions required</li>\n      <li><strong>511 Network Authentication Required:</strong> Client needs to authenticate</li>\n    </ul>\n\n    <h3>Common Status Codes in Practice</h3>\n    \n    <h4>Most Frequently Used</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Code</th>\n          <th>Name</th>\n          <th>Common Use Case</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>200</td>\n          <td>OK</td>\n          <td>Successful GET, PUT, PATCH requests</td>\n        </tr>\n        <tr>\n          <td>201</td>\n          <td>Created</td>\n          <td>Successful POST creating new resource</td>\n        </tr>\n        <tr>\n          <td>204</td>\n          <td>No Content</td>\n          <td>Successful DELETE, no body needed</td>\n        </tr>\n        <tr>\n          <td>301</td>\n          <td>Moved Permanently</td>\n          <td>Permanent URL changes</td>\n        </tr>\n        <tr>\n          <td>304</td>\n          <td>Not Modified</td>\n          <td>Cached content still valid</td>\n        </tr>\n        <tr>\n          <td>400</td>\n          <td>Bad Request</td>\n          <td>Invalid request syntax or parameters</td>\n        </tr>\n        <tr>\n          <td>401</td>\n          <td>Unauthorized</td>\n          <td>Missing or invalid authentication</td>\n        </tr>\n        <tr>\n          <td>403</td>\n          <td>Forbidden</td>\n          <td>Authenticated but not authorized</td>\n        </tr>\n        <tr>\n          <td>404</td>\n          <td>Not Found</td>\n          <td>Resource doesn't exist</td>\n        </tr>\n        <tr>\n          <td>429</td>\n          <td>Too Many Requests</td>\n          <td>Rate limiting</td>\n        </tr>\n        <tr>\n          <td>500</td>\n          <td>Internal Server Error</td>\n          <td>Unhandled server exception</td>\n        </tr>\n        <tr>\n          <td>503</td>\n          <td>Service Unavailable</td>\n          <td>Server maintenance or overload</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>RESTful API Status Code Guidelines</h3>\n    \n    <h4>GET Requests</h4>\n    <ul>\n      <li><strong>200 OK:</strong> Resource found and returned</li>\n      <li><strong>404 Not Found:</strong> Resource doesn't exist</li>\n      <li><strong>401/403:</strong> Authentication/authorization issues</li>\n    </ul>\n\n    <h4>POST Requests</h4>\n    <ul>\n      <li><strong>201 Created:</strong> New resource created successfully</li>\n      <li><strong>200 OK:</strong> Action performed but no new resource</li>\n      <li><strong>400 Bad Request:</strong> Invalid data provided</li>\n      <li><strong>409 Conflict:</strong> Resource already exists</li>\n    </ul>\n\n    <h4>PUT/PATCH Requests</h4>\n    <ul>\n      <li><strong>200 OK:</strong> Resource updated, returning updated resource</li>\n      <li><strong>204 No Content:</strong> Resource updated, no content returned</li>\n      <li><strong>404 Not Found:</strong> Resource to update doesn't exist</li>\n    </ul>\n\n    <h4>DELETE Requests</h4>\n    <ul>\n      <li><strong>204 No Content:</strong> Resource deleted successfully</li>\n      <li><strong>200 OK:</strong> Resource deleted, returning confirmation</li>\n      <li><strong>404 Not Found:</strong> Resource to delete doesn't exist</li>\n    </ul>\n\n    <h3>Custom Error Responses</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Example error response body\n{\n  \"error\": {\n    \"code\": \"RESOURCE_NOT_FOUND\",\n    \"message\": \"The requested user does not exist\",\n    \"details\": {\n      \"userId\": \"12345\",\n      \"timestamp\": \"2023-05-23T10:30:00Z\"\n    }\n  }\n}\n\n// Rate limiting response headers\nHTTP/1.1 429 Too Many Requests\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 0\nX-RateLimit-Reset: 1684882734\nRetry-After: 3600</code></pre>\n    </div>\n\n    <h3>Status Code Best Practices</h3>\n    <ul>\n      <li><strong>Be Specific:</strong> Use the most specific status code available</li>\n      <li><strong>Be Consistent:</strong> Same scenarios should return same codes</li>\n      <li><strong>Include Details:</strong> Provide helpful error messages in response body</li>\n      <li><strong>Document Codes:</strong> List all possible status codes in API documentation</li>\n      <li><strong>Don't Overuse 200:</strong> Use appropriate codes for different scenarios</li>\n      <li><strong>Avoid 5xx When Possible:</strong> Handle errors gracefully</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\" target=\"_blank\">HTTP Status Codes - MDN</a></li>\n    </ul>\n  `\n}; ","export const httpHeaders = {\n  id: 'http-headers',\n  title: 'HTTP Headers',\n  content: `\n    <h2>HTTP Headers</h2>\n    <p>HTTP headers are key-value pairs sent between client and server that provide essential information about the request or response. They control caching, authentication, content negotiation, and many other aspects of HTTP communication.</p>\n\n    <h3>ETag (Entity Tag) HTTP Header</h3>\n    <p>ETag header is used by web servers and browsers to determine whether a resource (e.g., web pages, images, CSS files) has changed since it was last requested or cached.</p>\n    \n    <h4>Example</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>ETag: \"686897696a7c876b7e\"</code></pre>\n    </div>\n\n    <h4>How ETags Work</h4>\n    <ol>\n      <li>Server generates unique ETag for each resource version</li>\n      <li>Client stores ETag with cached resource</li>\n      <li>On subsequent requests, client sends If-None-Match header with ETag</li>\n      <li>Server compares ETags:\n        <ul>\n          <li>If match: Returns 304 Not Modified (no body)</li>\n          <li>If different: Returns 200 OK with new content and new ETag</li>\n        </ul>\n      </li>\n    </ol>\n\n    <h3>Authorization HTTP Header</h3>\n    <p>The Authorization header contains credentials for authenticating the client with the server.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Authorization: &lt;scheme&gt; &lt;credentials&gt;</code></pre>\n    </div>\n    \n    <p>&lt;scheme&gt; specifies the authentication scheme being used e.g., \"Basic\", \"Bearer\", \"Digest\".</p>\n\n    <h4>Basic Authentication</h4>\n    <p>In Basic Authentication, the &lt;credentials&gt; consist of the base64-encoded(username:password).</p>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</code></pre>\n    </div>\n\n    <h4>Bearer Authentication</h4>\n    <p>In Bearer Authentication, the &lt;credentials&gt; consist of a token (JWT) provided by the client.</p>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</code></pre>\n    </div>\n\n    <h4>Digest Authentication</h4>\n    <p>In Digest Authentication, the &lt;credentials&gt; contain various pieces of information, including the username, realm, nonce, URI, response, and other parameters.</p>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Authorization: Digest username=\"username\", realm=\"example\", nonce=\"abc123\", uri=\"/resource\", response=\"d41d8cd98f00b204e9800998ecf8427e\"</code></pre>\n    </div>\n\n    <h3>Common Request Headers</h3>\n    \n    <h4>General Headers</h4>\n    <ul>\n      <li><strong>Host:</strong> Domain name of the server (required in HTTP/1.1)</li>\n      <li><strong>User-Agent:</strong> Client software information</li>\n      <li><strong>Accept:</strong> Content types client can process</li>\n      <li><strong>Accept-Language:</strong> Preferred languages</li>\n      <li><strong>Accept-Encoding:</strong> Supported compression methods</li>\n      <li><strong>Connection:</strong> Connection management (keep-alive, close)</li>\n    </ul>\n\n    <h4>Content Headers</h4>\n    <ul>\n      <li><strong>Content-Type:</strong> Media type of the body</li>\n      <li><strong>Content-Length:</strong> Size of the body in bytes</li>\n      <li><strong>Content-Encoding:</strong> Compression applied to body</li>\n    </ul>\n\n    <h4>Conditional Headers</h4>\n    <ul>\n      <li><strong>If-Modified-Since:</strong> Return resource only if modified</li>\n      <li><strong>If-None-Match:</strong> Return resource only if ETag doesn't match</li>\n      <li><strong>If-Match:</strong> Perform action only if ETag matches</li>\n    </ul>\n\n    <h3>Common Response Headers</h3>\n    \n    <h4>Caching Headers</h4>\n    <ul>\n      <li><strong>Cache-Control:</strong> Caching directives</li>\n      <li><strong>Expires:</strong> Expiration date/time</li>\n      <li><strong>Last-Modified:</strong> Last modification date</li>\n      <li><strong>ETag:</strong> Entity tag for cache validation</li>\n    </ul>\n\n    <h4>Security Headers</h4>\n    <ul>\n      <li><strong>Strict-Transport-Security:</strong> Force HTTPS connections</li>\n      <li><strong>Content-Security-Policy:</strong> Control resource loading</li>\n      <li><strong>X-Frame-Options:</strong> Clickjacking protection</li>\n      <li><strong>X-Content-Type-Options:</strong> Prevent MIME sniffing</li>\n      <li><strong>X-XSS-Protection:</strong> XSS filter control</li>\n    </ul>\n\n    <h4>CORS Headers</h4>\n    <ul>\n      <li><strong>Access-Control-Allow-Origin:</strong> Allowed origins</li>\n      <li><strong>Access-Control-Allow-Methods:</strong> Allowed HTTP methods</li>\n      <li><strong>Access-Control-Allow-Headers:</strong> Allowed request headers</li>\n      <li><strong>Access-Control-Max-Age:</strong> Preflight cache duration</li>\n    </ul>\n\n    <h3>Header Examples</h3>\n    \n    <h4>Request Example</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>GET /api/users HTTP/1.1\nHost: api.example.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)\nAccept: application/json\nAccept-Language: en-US,en;q=0.9\nAccept-Encoding: gzip, deflate, br\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIs...\nCache-Control: no-cache\nConnection: keep-alive</code></pre>\n    </div>\n\n    <h4>Response Example</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>HTTP/1.1 200 OK\nDate: Mon, 23 May 2023 22:38:34 GMT\nContent-Type: application/json; charset=utf-8\nContent-Length: 1234\nContent-Encoding: gzip\nCache-Control: public, max-age=3600\nETag: \"686897696a7c876b7e\"\nLast-Modified: Mon, 23 May 2023 20:00:00 GMT\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 99\nX-RateLimit-Reset: 1684882734</code></pre>\n    </div>\n\n    <h3>Custom Headers</h3>\n    \n    <h4>Naming Conventions</h4>\n    <ul>\n      <li>Previously prefixed with X- (deprecated)</li>\n      <li>Now use descriptive names without prefix</li>\n      <li>Use hyphens, not underscores</li>\n      <li>Case-insensitive but use Title-Case</li>\n    </ul>\n\n    <h4>Common Custom Headers</h4>\n    <ul>\n      <li><strong>X-Request-ID:</strong> Trace requests through systems</li>\n      <li><strong>X-API-Key:</strong> API authentication</li>\n      <li><strong>X-RateLimit-*:</strong> Rate limiting information</li>\n      <li><strong>X-Forwarded-For:</strong> Original client IP through proxies</li>\n      <li><strong>X-Real-IP:</strong> Real client IP address</li>\n    </ul>\n\n    <h3>Header Size Limits</h3>\n    <ul>\n      <li><strong>Apache:</strong> 8KB default</li>\n      <li><strong>Nginx:</strong> 4KB-8KB default</li>\n      <li><strong>IIS:</strong> 16KB default</li>\n      <li><strong>Node.js:</strong> 80KB default</li>\n      <li><strong>Recommendation:</strong> Keep total headers under 8KB</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Minimize Header Size:</strong> Remove unnecessary headers</li>\n      <li><strong>Use Standard Headers:</strong> Prefer standard over custom</li>\n      <li><strong>Security Headers:</strong> Always include security headers</li>\n      <li><strong>Compression:</strong> Enable for text content</li>\n      <li><strong>Caching:</strong> Set appropriate cache headers</li>\n      <li><strong>CORS:</strong> Configure correctly for APIs</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\" target=\"_blank\">HTTP Headers - MDN</a></li>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\" target=\"_blank\">ETag - MDN</a></li>\n      <li><a href=\"https://www.educative.io/answers/what-is-an-etag-in-http\" target=\"_blank\">What is an ETag in HTTP - Educative</a></li>\n    </ul>\n  `\n}; ","export const websockets = {\n  id: 'websockets',\n  title: 'WebSockets',\n  content: `# WebSockets\n\n## Definition\nWebSockets provide full-duplex communication channels over a single TCP connection between client and server.\n\n## Key Features\n- **Bidirectional**: Both client and server can send messages\n- **Real-time**: Low-latency communication\n- **Persistent**: Connection stays open\n- **Efficient**: Less overhead than HTTP polling\n- **Cross-origin**: CORS support\n\n## WebSocket Handshake\n1. Client sends HTTP upgrade request\n2. Server responds with 101 Switching Protocols\n3. Connection upgraded to WebSocket protocol\n4. Bidirectional communication begins\n\n## Use Cases\n- **Chat Applications**: Real-time messaging\n- **Live Updates**: Stock prices, sports scores\n- **Gaming**: Multiplayer online games\n- **Collaboration**: Document editing\n- **Notifications**: Push notifications\n\n## WebSocket vs HTTP\n- **Connection**: Persistent vs request-response\n- **Overhead**: Low vs high for frequent updates\n- **Complexity**: Higher vs simpler implementation\n- **Caching**: Not applicable vs cacheable\n\n## Implementation\n\\`\\`\\`javascript\nconst socket = new WebSocket('ws://localhost:8080');\nsocket.onopen = () => console.log('Connected');\nsocket.onmessage = (event) => console.log(event.data);\nsocket.send('Hello Server');\n\\`\\`\\`\n\n## Challenges\n- Connection management\n- Scaling across servers\n- Firewall/proxy issues\n- Reconnection logic\n\n## Interview Questions\n**Q: When would you use WebSockets over HTTP?**\nA: For real-time, bidirectional communication like chat apps, live updates, or collaborative editing.`\n}; ","export const dns = {\n  id: 'dns',\n  title: 'DNS (Domain Name System)',\n  content: `# DNS (Domain Name System)\n\n## Definition\nDNS is a hierarchical system that translates human-readable domain names into IP addresses.\n\n## DNS Hierarchy\n- **Root Servers**: Top-level (.)\n- **TLD Servers**: Top-level domains (.com, .org)\n- **Authoritative Servers**: Domain-specific servers\n- **Recursive Resolvers**: ISP or public DNS servers\n\n## DNS Records\n- **A**: Maps domain to IPv4 address\n- **AAAA**: Maps domain to IPv6 address\n- **CNAME**: Canonical name (alias)\n- **MX**: Mail exchange servers\n- **NS**: Name servers\n- **TXT**: Text records (SPF, DKIM)\n- **SOA**: Start of authority\n\n## DNS Resolution Process\n1. Browser cache check\n2. OS cache check\n3. Router cache check\n4. ISP DNS server query\n5. Root server query\n6. TLD server query\n7. Authoritative server query\n\n## DNS Caching\n- **TTL**: Time to Live for cache entries\n- **Browser Cache**: Local browser storage\n- **OS Cache**: Operating system cache\n- **DNS Server Cache**: Resolver cache\n\n## Interview Questions\n**Q: Explain the DNS resolution process.**\nA: Browser checks caches, then queries DNS servers hierarchically from root to authoritative servers.`\n}; ","export const networking = {\n  id: 'networking',\n  title: 'Computer Networking',\n  content: `# Computer Networking\n\n## Definition\nComputer networking is the practice of connecting computers and other devices to share resources and communicate.\n\n## OSI Model Layers\n1. **Physical**: Cables, signals, hardware\n2. **Data Link**: MAC addresses, switches\n3. **Network**: IP addresses, routing\n4. **Transport**: TCP/UDP, ports\n5. **Session**: Connection management\n6. **Presentation**: Encryption, compression\n7. **Application**: HTTP, FTP, SMTP\n\n## Key Protocols\n- **TCP**: Reliable, connection-oriented\n- **UDP**: Fast, connectionless\n- **HTTP/HTTPS**: Web communication\n- **DNS**: Domain name resolution\n- **DHCP**: Dynamic IP assignment\n\n## Network Types\n- **LAN**: Local Area Network\n- **WAN**: Wide Area Network\n- **MAN**: Metropolitan Area Network\n- **VPN**: Virtual Private Network\n\n## Interview Questions\n**Q: What's the difference between TCP and UDP?**\nA: TCP is reliable and connection-oriented, while UDP is faster but connectionless and unreliable.`\n}; ","export const cors = {\n  id: 'cors',\n  title: 'CORS (Cross-Origin Resource Sharing)',\n  content: `\n    <h2>CORS (Cross-Origin Resource Sharing)</h2>\n    <p>Web browsers enforce a security policy known as the Same-Origin Policy, which restricts web pages from making requests to resources (e.g., APIs, images, scripts) on domains other than the one that served the web page.</p>\n\n    <h3>Same-Origin Policy</h3>\n    <p>Two URLs have the same origin if they have identical:</p>\n    <ul>\n      <li><strong>Protocol:</strong> http vs https</li>\n      <li><strong>Domain:</strong> example.com vs api.example.com</li>\n      <li><strong>Port:</strong> :80 vs :8080</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Origin: https://example.com:443\n\nSame Origin:\n✓ https://example.com/page1\n✓ https://example.com/api/data\n\nDifferent Origin:\n✗ http://example.com         (different protocol)\n✗ https://api.example.com    (different subdomain)\n✗ https://example.com:8080   (different port)\n✗ https://another.com        (different domain)</code></pre>\n    </div>\n\n    <h3>How CORS Works</h3>\n    <p>To enable cross-origin (i.e., CDN) requests, the server must include specific CORS headers in its response to indicate which origins are allowed to access the requested resource.</p>\n\n    <h4>Simple Requests</h4>\n    <p>Requests that meet all these criteria:</p>\n    <ul>\n      <li>Methods: GET, HEAD, POST</li>\n      <li>Headers: Only simple headers (Accept, Accept-Language, Content-Language, Content-Type)</li>\n      <li>Content-Type: application/x-www-form-urlencoded, multipart/form-data, or text/plain</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Simple CORS Request Flow\n\n1. Browser sends request with Origin header:\n   GET /api/data HTTP/1.1\n   Host: api.example.com\n   Origin: https://app.example.com\n\n2. Server responds with CORS headers:\n   HTTP/1.1 200 OK\n   Access-Control-Allow-Origin: https://app.example.com\n   Content-Type: application/json\n   \n   {\"data\": \"response\"}</code></pre>\n    </div>\n\n    <h4>Preflight Requests</h4>\n    <p>For complex requests, browsers send a preflight OPTIONS request first:</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Preflight Request Flow\n\n1. Browser sends preflight request:\n   OPTIONS /api/data HTTP/1.1\n   Host: api.example.com\n   Origin: https://app.example.com\n   Access-Control-Request-Method: PUT\n   Access-Control-Request-Headers: Content-Type, X-Custom-Header\n\n2. Server responds with allowed methods/headers:\n   HTTP/1.1 204 No Content\n   Access-Control-Allow-Origin: https://app.example.com\n   Access-Control-Allow-Methods: GET, POST, PUT, DELETE\n   Access-Control-Allow-Headers: Content-Type, X-Custom-Header\n   Access-Control-Max-Age: 86400\n\n3. If allowed, browser sends actual request:\n   PUT /api/data HTTP/1.1\n   Host: api.example.com\n   Origin: https://app.example.com\n   Content-Type: application/json\n   X-Custom-Header: value</code></pre>\n    </div>\n\n    <h3>CORS Headers</h3>\n    \n    <h4>Response Headers (Server to Client)</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Header</th>\n          <th>Description</th>\n          <th>Example</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Access-Control-Allow-Origin</strong></td>\n          <td>Specifies allowed origins</td>\n          <td>https://example.com or *</td>\n        </tr>\n        <tr>\n          <td><strong>Access-Control-Allow-Methods</strong></td>\n          <td>Allowed HTTP methods</td>\n          <td>GET, POST, PUT, DELETE</td>\n        </tr>\n        <tr>\n          <td><strong>Access-Control-Allow-Headers</strong></td>\n          <td>Allowed request headers</td>\n          <td>Content-Type, Authorization</td>\n        </tr>\n        <tr>\n          <td><strong>Access-Control-Allow-Credentials</strong></td>\n          <td>Allow cookies/auth headers</td>\n          <td>true</td>\n        </tr>\n        <tr>\n          <td><strong>Access-Control-Max-Age</strong></td>\n          <td>Cache preflight response (seconds)</td>\n          <td>86400</td>\n        </tr>\n        <tr>\n          <td><strong>Access-Control-Expose-Headers</strong></td>\n          <td>Headers exposed to client</td>\n          <td>X-Total-Count, X-Page</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h4>Request Headers (Client to Server)</h4>\n    <ul>\n      <li><strong>Origin:</strong> The origin of the request</li>\n      <li><strong>Access-Control-Request-Method:</strong> Method for preflight</li>\n      <li><strong>Access-Control-Request-Headers:</strong> Headers for preflight</li>\n    </ul>\n\n    <h3>Server Implementation Examples</h3>\n    \n    <h4>Node.js/Express</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Simple CORS middleware\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', 'https://app.example.com');\n  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  \n  // Handle preflight\n  if (req.method === 'OPTIONS') {\n    return res.sendStatus(204);\n  }\n  \n  next();\n});\n\n// Using cors package\nconst cors = require('cors');\napp.use(cors({\n  origin: ['https://app.example.com', 'https://beta.example.com'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n}));</code></pre>\n    </div>\n\n    <h4>Python/Flask</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>from flask import Flask, jsonify\nfrom flask_cors import CORS, cross_origin\n\napp = Flask(__name__)\n\n# Enable CORS globally\nCORS(app, origins=['https://app.example.com'])\n\n# Or per route\n@app.route('/api/data')\n@cross_origin(origins=['https://app.example.com'])\ndef get_data():\n    return jsonify({'data': 'response'})</code></pre>\n    </div>\n\n    <h3>Common CORS Scenarios</h3>\n    \n    <h4>1. Public API (Allow All Origins)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// ⚠️ Use with caution - allows any website\nAccess-Control-Allow-Origin: *\n\n// Note: Cannot use * with credentials\n// This will NOT work:\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Credentials: true</code></pre>\n    </div>\n\n    <h4>2. Multiple Allowed Origins</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Dynamic origin checking\nconst allowedOrigins = [\n  'https://app.example.com',\n  'https://beta.example.com',\n  'http://localhost:3000'  // Development\n];\n\napp.use((req, res, next) => {\n  const origin = req.headers.origin;\n  if (allowedOrigins.includes(origin)) {\n    res.header('Access-Control-Allow-Origin', origin);\n  }\n  next();\n});</code></pre>\n    </div>\n\n    <h4>3. Credentials (Cookies/Auth)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Server must explicitly allow credentials\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Origin: https://app.example.com\n\n// Client must include credentials\nfetch('https://api.example.com/data', {\n  credentials: 'include'  // Send cookies\n});</code></pre>\n    </div>\n\n    <h3>Security Considerations</h3>\n    \n    <h4>Common Mistakes</h4>\n    <ul>\n      <li><strong>Using * with credentials:</strong> Not allowed by specification</li>\n      <li><strong>Reflecting any Origin:</strong> Security vulnerability</li>\n      <li><strong>Allowing all headers:</strong> Can expose sensitive data</li>\n      <li><strong>Long cache times:</strong> Makes policy changes difficult</li>\n    </ul>\n\n    <h4>Best Practices</h4>\n    <ul>\n      <li><strong>Whitelist origins:</strong> Only allow known, trusted origins</li>\n      <li><strong>Validate origin:</strong> Don't blindly reflect the Origin header</li>\n      <li><strong>Limit methods:</strong> Only allow necessary HTTP methods</li>\n      <li><strong>Restrict headers:</strong> Only expose required headers</li>\n      <li><strong>Short cache times:</strong> For preflight responses during development</li>\n      <li><strong>HTTPS only:</strong> Use secure connections for sensitive data</li>\n    </ul>\n\n    <h3>Debugging CORS Issues</h3>\n    \n    <h4>Common Errors</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Browser Console Errors\n\n1. No CORS headers:\n   \"Access to fetch at 'api.example.com' from origin \n   'app.example.com' has been blocked by CORS policy: \n   No 'Access-Control-Allow-Origin' header is present\"\n\n2. Origin not allowed:\n   \"The CORS protocol does not allow specifying a \n   wildcard (any) origin and credentials at the same time\"\n\n3. Method not allowed:\n   \"Method PUT is not allowed by \n   Access-Control-Allow-Methods in preflight response\"</code></pre>\n    </div>\n\n    <h4>Debugging Steps</h4>\n    <ol>\n      <li>Check browser DevTools Network tab</li>\n      <li>Look for OPTIONS preflight request</li>\n      <li>Verify response headers</li>\n      <li>Check server logs</li>\n      <li>Test with curl to bypass CORS</li>\n    </ol>\n\n    <h3>Alternatives to CORS</h3>\n    <ul>\n      <li><strong>JSONP:</strong> Only for GET requests, security risks</li>\n      <li><strong>Proxy Server:</strong> Route through same origin</li>\n      <li><strong>WebSockets:</strong> Not subject to CORS</li>\n      <li><strong>Server-Side Requests:</strong> Make API calls from backend</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\" target=\"_blank\">MDN - Cross-Origin Resource Sharing (CORS)</a></li>\n    </ul>\n  `\n}; ","export const urlVsUriVsUrn = {\n  id: 'url-vs-uri-vs-urn',\n  title: 'URL vs URI vs URN',\n  content: `\n    <h2>URL vs URI vs URN</h2>\n    <p>Understanding the differences between URL, URI, and URN is essential for web development and system design. These terms are often confused but have distinct meanings and purposes.</p>\n\n    <h3>URI (Uniform Resource Identifier)</h3>\n    <p>URI is the most general term - it's a string that identifies a resource, either by its location, name, or both. URI is the superset that includes both URLs and URNs.</p>\n\n    <h4>URI Characteristics</h4>\n    <ul>\n      <li><strong>Purpose:</strong> Identify a resource</li>\n      <li><strong>Format:</strong> scheme:scheme-specific-part</li>\n      <li><strong>Includes:</strong> Both URLs and URNs</li>\n      <li><strong>Can be:</strong> Locator, name, or both</li>\n    </ul>\n\n    <h4>URI Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>mailto:user@example.com\nfile:///home/user/file.txt\nhttp://example.com/page\nftp://ftp.example.com/file.zip\ntel:+1-816-555-1212\nurn:isbn:0451450523</code></pre>\n    </div>\n\n    <h3>URL (Uniform Resource Locator)</h3>\n    <p>URL is a subset of URI that specifies where a resource is located and how to retrieve it. It includes the complete address for locating a resource, typically consisting of a protocol, domain name, path, and possibly other components.</p>\n\n    <h4>URL Structure</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>scheme://[userinfo@]host[:port][/path][?query][#fragment]\n\nExample breakdown:\nhttps://user:pass@www.example.com:8080/path/to/page?name=value#section\n\nscheme: https\nuserinfo: user:pass\nhost: www.example.com\nport: 8080\npath: /path/to/page\nquery: name=value\nfragment: section</code></pre>\n    </div>\n\n    <h4>URL Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>http://example.com/mypage.html\nhttps://api.example.com/v1/users?limit=10\nftp://example.com/download.zip\nfile:///C:/Users/John/Documents/file.txt\nhttps://example.com:8443/secure/page</code></pre>\n    </div>\n\n    <h3>URN (Uniform Resource Name)</h3>\n    <p>URN identifies a resource by a unique and persistent name, but doesn't necessarily tell you how to locate it on the internet. URNs are intended to serve as persistent, location-independent resource identifiers.</p>\n\n    <h4>URN Structure</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>urn:namespace-identifier:namespace-specific-string\n\nComponents:\n- \"urn\" - scheme identifier\n- namespace-identifier - registered namespace\n- namespace-specific-string - unique identifier within namespace</code></pre>\n    </div>\n\n    <h4>URN Examples</h4>\n    <ul>\n      <li><strong>urn:isbn:0451450523</strong> - Identifies a book by its ISBN</li>\n      <li><strong>urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66</strong> - A globally unique identifier</li>\n      <li><strong>urn:publishing:book</strong> - An XML namespace that identifies the document as a type of book</li>\n      <li><strong>urn:ietf:rfc:2648</strong> - IETF RFC document</li>\n      <li><strong>urn:mpeg:mpeg7:schema:2001</strong> - MPEG-7 schema</li>\n    </ul>\n\n    <h3>Key Differences</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>URI</th>\n          <th>URL</th>\n          <th>URN</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Purpose</strong></td>\n          <td>Identify</td>\n          <td>Locate</td>\n          <td>Name</td>\n        </tr>\n        <tr>\n          <td><strong>Persistence</strong></td>\n          <td>Varies</td>\n          <td>Can change</td>\n          <td>Persistent</td>\n        </tr>\n        <tr>\n          <td><strong>Location</strong></td>\n          <td>May include</td>\n          <td>Always includes</td>\n          <td>Never includes</td>\n        </tr>\n        <tr>\n          <td><strong>Retrieval</strong></td>\n          <td>May be possible</td>\n          <td>Direct retrieval</td>\n          <td>Requires resolution</td>\n        </tr>\n        <tr>\n          <td><strong>Example</strong></td>\n          <td>Any identifier</td>\n          <td>http://example.com</td>\n          <td>urn:isbn:12345</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Relationship Diagram</h3>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>                    URI\n                 /       \\\\\n               /           \\\\\n             URL           URN\n    (Locator)     (Name)\n\nAll URLs are URIs\nAll URNs are URIs\nNot all URIs are URLs or URNs</code></pre>\n    </div>\n\n    <h3>Practical Examples</h3>\n    \n    <h4>URI but not URL or URN</h4>\n    <ul>\n      <li><strong>data:text/plain;base64,SGVsbG8gV29ybGQ=</strong> - Data URI</li>\n      <li><strong>javascript:alert('Hello')</strong> - JavaScript URI</li>\n      <li><strong>about:blank</strong> - About URI</li>\n    </ul>\n\n    <h4>Real-World Usage</h4>\n    <ul>\n      <li><strong>Web Browsers:</strong> Primarily use URLs</li>\n      <li><strong>XML Namespaces:</strong> Often use URNs</li>\n      <li><strong>RESTful APIs:</strong> Use URLs for endpoints</li>\n      <li><strong>Digital Libraries:</strong> Use URNs for persistent identification</li>\n      <li><strong>Linked Data:</strong> Use URIs for resource identification</li>\n    </ul>\n\n    <h3>Common Misconceptions</h3>\n    \n    <h4>Misconception 1: URI and URL are the same</h4>\n    <p>Reality: URL is a subset of URI. Every URL is a URI, but not every URI is a URL.</p>\n\n    <h4>Misconception 2: URNs are obsolete</h4>\n    <p>Reality: URNs are still used in specific contexts like digital publishing, standards documents, and persistent identifiers.</p>\n\n    <h4>Misconception 3: Only HTTP/HTTPS are valid URL schemes</h4>\n    <p>Reality: Many schemes exist: ftp://, file://, mailto:, tel:, and more.</p>\n\n    <h3>Best Practices</h3>\n    \n    <h4>When to Use Each</h4>\n    <ul>\n      <li><strong>Use URL:</strong> When you need to locate and access a resource</li>\n      <li><strong>Use URN:</strong> When you need a persistent, location-independent identifier</li>\n      <li><strong>Use URI:</strong> When referring to identifiers in general</li>\n    </ul>\n\n    <h4>Design Considerations</h4>\n    <ul>\n      <li><strong>Persistence:</strong> If the identifier must never change, consider URN</li>\n      <li><strong>Accessibility:</strong> If direct access is needed, use URL</li>\n      <li><strong>Flexibility:</strong> URIs provide the most flexibility</li>\n      <li><strong>Standards:</strong> Follow RFC specifications for proper formatting</li>\n    </ul>\n\n    <h3>Technical Specifications</h3>\n    <ul>\n      <li><strong>RFC 3986:</strong> URI Generic Syntax</li>\n      <li><strong>RFC 1738:</strong> URL Specification</li>\n      <li><strong>RFC 2141:</strong> URN Syntax</li>\n      <li><strong>RFC 8141:</strong> URN (updated)</li>\n    </ul>\n  `\n}; ","export const bgp = {\n  id: 'bgp',\n  title: 'BGP (Border Gateway Protocol)',\n  content: `\n    <h2>BGP (Border Gateway Protocol)</h2>\n    <p>BGP is the protocol that routers use to make decisions about how to route packets between different networks. It's the routing protocol that makes the internet work by enabling data routing between autonomous systems (AS).</p>\n\n    <h3>What is BGP?</h3>\n    <ul>\n      <li><strong>Purpose:</strong> Exchange routing information between autonomous systems</li>\n      <li><strong>Type:</strong> Path vector protocol</li>\n      <li><strong>Port:</strong> TCP port 179</li>\n      <li><strong>Version:</strong> BGP-4 is the current version</li>\n      <li><strong>Scale:</strong> Handles the entire internet routing table (900,000+ routes)</li>\n    </ul>\n\n    <h3>Key Concepts</h3>\n    \n    <h4>Autonomous System (AS)</h4>\n    <ul>\n      <li>Collection of IP networks under single administrative control</li>\n      <li>Identified by unique AS Number (ASN)</li>\n      <li>Examples: ISPs, large corporations, universities</li>\n      <li>Range: 1-65535 (16-bit), 65536-4294967295 (32-bit)</li>\n    </ul>\n\n    <h4>BGP Session Types</h4>\n    <ul>\n      <li><strong>eBGP (External BGP):</strong> Between different AS</li>\n      <li><strong>iBGP (Internal BGP):</strong> Within the same AS</li>\n      <li><strong>Multihop BGP:</strong> BGP peers not directly connected</li>\n    </ul>\n\n    <h3>How BGP Works</h3>\n    \n    <h4>BGP Path Selection Process</h4>\n    <ol>\n      <li><strong>Highest Weight:</strong> Cisco-specific, locally significant</li>\n      <li><strong>Highest Local Preference:</strong> Preferred exit point from AS</li>\n      <li><strong>Locally Originated:</strong> Routes originated by this router</li>\n      <li><strong>Shortest AS Path:</strong> Fewest AS hops</li>\n      <li><strong>Lowest Origin Type:</strong> IGP < EGP < Incomplete</li>\n      <li><strong>Lowest MED:</strong> Multi-Exit Discriminator</li>\n      <li><strong>eBGP over iBGP:</strong> External paths preferred</li>\n      <li><strong>Lowest IGP Metric:</strong> To BGP next hop</li>\n      <li><strong>Oldest Route:</strong> Most stable</li>\n      <li><strong>Lowest Router ID:</strong> Tiebreaker</li>\n    </ol>\n\n    <h3>BGP Attributes</h3>\n    \n    <h4>Well-Known Mandatory</h4>\n    <ul>\n      <li><strong>AS-PATH:</strong> List of AS the route has traversed</li>\n      <li><strong>NEXT-HOP:</strong> IP address of next hop router</li>\n      <li><strong>ORIGIN:</strong> How the route was learned (IGP/EGP/Incomplete)</li>\n    </ul>\n\n    <h4>Well-Known Discretionary</h4>\n    <ul>\n      <li><strong>LOCAL-PREF:</strong> Preference value within an AS</li>\n      <li><strong>ATOMIC-AGGREGATE:</strong> Route aggregation indicator</li>\n    </ul>\n\n    <h4>Optional Transitive</h4>\n    <ul>\n      <li><strong>COMMUNITY:</strong> Route tagging for policy</li>\n      <li><strong>AGGREGATOR:</strong> AS and router that aggregated</li>\n    </ul>\n\n    <h4>Optional Non-Transitive</h4>\n    <ul>\n      <li><strong>MED:</strong> Metric for route selection</li>\n      <li><strong>CLUSTER-LIST:</strong> Route reflector path</li>\n    </ul>\n\n    <h3>BGP Message Types</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>1. OPEN - Establish BGP session\n   - Version, AS number, Hold time, BGP ID\n   \n2. UPDATE - Advertise or withdraw routes\n   - Path attributes, NLRI, Withdrawn routes\n   \n3. KEEPALIVE - Maintain session\n   - Sent every 1/3 of hold time (default 60s)\n   \n4. NOTIFICATION - Error or session termination\n   - Error code and subcode</code></pre>\n    </div>\n\n    <h3>BGP States</h3>\n    \n    <ol>\n      <li><strong>Idle:</strong> Initial state, waiting to start</li>\n      <li><strong>Connect:</strong> Waiting for TCP connection</li>\n      <li><strong>Active:</strong> Trying to establish connection</li>\n      <li><strong>OpenSent:</strong> OPEN message sent</li>\n      <li><strong>OpenConfirm:</strong> OPEN received, waiting for KEEPALIVE</li>\n      <li><strong>Established:</strong> Session up, exchanging routes</li>\n    </ol>\n\n    <h3>BGP in Practice</h3>\n    \n    <h4>Common Use Cases</h4>\n    <ul>\n      <li><strong>ISP Connectivity:</strong> Connect to multiple ISPs</li>\n      <li><strong>Multi-homing:</strong> Redundant internet connections</li>\n      <li><strong>Traffic Engineering:</strong> Control inbound/outbound traffic</li>\n      <li><strong>CDN Routing:</strong> Direct users to nearest server</li>\n      <li><strong>DDoS Mitigation:</strong> Black hole routing</li>\n    </ul>\n\n    <h4>BGP Security Issues</h4>\n    <ul>\n      <li><strong>Route Hijacking:</strong> Announcing routes you don't own</li>\n      <li><strong>Route Leaks:</strong> Advertising learned routes incorrectly</li>\n      <li><strong>Prefix Deaggregation:</strong> Announcing more specific routes</li>\n      <li><strong>BGP Session Hijacking:</strong> TCP vulnerabilities</li>\n    </ul>\n\n    <h3>BGP Best Practices</h3>\n    \n    <h4>Security Measures</h4>\n    <ul>\n      <li><strong>Prefix Filtering:</strong> Only accept/announce authorized prefixes</li>\n      <li><strong>AS-PATH Filtering:</strong> Validate AS paths</li>\n      <li><strong>Max Prefix Limits:</strong> Prevent routing table overflow</li>\n      <li><strong>MD5 Authentication:</strong> Secure BGP sessions</li>\n      <li><strong>RPKI:</strong> Resource Public Key Infrastructure</li>\n    </ul>\n\n    <h4>Operational Practices</h4>\n    <ul>\n      <li><strong>Use Communities:</strong> Tag routes for policy</li>\n      <li><strong>Implement BCP38:</strong> Prevent IP spoofing</li>\n      <li><strong>Monitor BGP:</strong> Track session status and routes</li>\n      <li><strong>Document Policies:</strong> Clear routing policies</li>\n      <li><strong>Peer at IXPs:</strong> Internet Exchange Points</li>\n    </ul>\n\n    <h3>BGP Configuration Example</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Basic BGP configuration (Cisco-style)\nrouter bgp 65001\n  bgp router-id 10.0.0.1\n  \n  # eBGP peer\n  neighbor 192.168.1.1 remote-as 65002\n  neighbor 192.168.1.1 description ISP-A\n  \n  # iBGP peer\n  neighbor 10.0.0.2 remote-as 65001\n  neighbor 10.0.0.2 update-source Loopback0\n  \n  # Network advertisements\n  network 203.0.113.0 mask 255.255.255.0\n  \n  # Inbound/Outbound policies\n  neighbor 192.168.1.1 route-map ISP-IN in\n  neighbor 192.168.1.1 route-map ISP-OUT out</code></pre>\n    </div>\n\n    <h3>BGP Troubleshooting</h3>\n    \n    <h4>Common Issues</h4>\n    <ul>\n      <li><strong>Session Not Establishing:</strong> Check connectivity, AS numbers</li>\n      <li><strong>Routes Not Advertised:</strong> Verify network statements, filters</li>\n      <li><strong>Routes Not Preferred:</strong> Check BGP attributes</li>\n      <li><strong>Routing Loops:</strong> AS-PATH should prevent these</li>\n      <li><strong>Convergence Issues:</strong> Timer tuning may help</li>\n    </ul>\n\n    <h4>Useful Commands</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Show BGP summary\nshow ip bgp summary\n\n# Show BGP routes\nshow ip bgp\n\n# Show specific route\nshow ip bgp 203.0.113.0/24\n\n# Show BGP neighbors\nshow ip bgp neighbors\n\n# Clear BGP session (soft reset)\nclear ip bgp 192.168.1.1 soft</code></pre>\n    </div>\n\n    <h3>BGP Scalability</h3>\n    \n    <h4>Route Reflectors</h4>\n    <ul>\n      <li>Reduce iBGP full mesh requirement</li>\n      <li>Reflect routes between iBGP peers</li>\n      <li>Maintain AS-PATH and attributes</li>\n    </ul>\n\n    <h4>Confederations</h4>\n    <ul>\n      <li>Divide AS into sub-AS</li>\n      <li>Reduce iBGP sessions</li>\n      <li>Alternative to route reflectors</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://www.scaler.com/topics/computer-network/bgp-border-gateway-protocol/\" target=\"_blank\">BGP Border Gateway Protocol - Scaler</a></li>\n    </ul>\n  `\n}; ","export const unicodeCharacters = {\n  id: 'unicode-characters',\n  title: 'Unicode Characters',\n  content: `\n    <h2>Unicode Characters</h2>\n    <p>Unicode is a universal character encoding standard that assigns a unique number to every character across all languages and writing systems. Characters are typically represented in hexadecimal format. The length of a Unicode character representation in bits depends on the encoding scheme used.</p>\n\n    <h3>Unicode Encoding Schemes</h3>\n    \n    <h4>UTF-8</h4>\n    <ul>\n      <li><strong>Size:</strong> 8 bits (1 byte) per character for ASCII range</li>\n      <li><strong>Range:</strong> U+0000 to U+007F (127/2^8 - 1)</li>\n      <li><strong>Variable Length:</strong> 1-4 bytes per character</li>\n      <li><strong>Backward Compatible:</strong> With ASCII</li>\n      <li><strong>Most Common:</strong> Used on the web (>95% of websites)</li>\n    </ul>\n\n    <h4>UTF-16</h4>\n    <ul>\n      <li><strong>Size:</strong> 16 bits (2 bytes) per character for BMP</li>\n      <li><strong>Range:</strong> U+0000 to U+FFFF (65535/2^16−1)</li>\n      <li><strong>Variable Length:</strong> 2 or 4 bytes per character</li>\n      <li><strong>Used By:</strong> Windows, Java, JavaScript internally</li>\n      <li><strong>Surrogate Pairs:</strong> For characters beyond BMP</li>\n    </ul>\n\n    <h4>UTF-32</h4>\n    <ul>\n      <li><strong>Size:</strong> 32 bits (4 bytes) per character</li>\n      <li><strong>Range:</strong> U+0000 to U+10FFFF (4294967295/2^32-1)</li>\n      <li><strong>Fixed Length:</strong> Always 4 bytes</li>\n      <li><strong>Simple:</strong> Direct Unicode code point representation</li>\n      <li><strong>Space Inefficient:</strong> Uses more memory</li>\n    </ul>\n\n    <h3>Character Representation</h3>\n    \n    <h4>Code Points</h4>\n    <ul>\n      <li>Unique number assigned to each character</li>\n      <li>Written as U+ followed by hexadecimal digits</li>\n      <li>Example: U+0041 represents 'A'</li>\n      <li>Range: U+0000 to U+10FFFF</li>\n    </ul>\n\n    <h4>Encoding Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Character 'A' (U+0041)\nUTF-8:  0x41         (1 byte)\nUTF-16: 0x0041       (2 bytes)\nUTF-32: 0x00000041   (4 bytes)\n\n# Character '€' (U+20AC)\nUTF-8:  0xE2 0x82 0xAC  (3 bytes)\nUTF-16: 0x20AC          (2 bytes)\nUTF-32: 0x000020AC      (4 bytes)\n\n# Character '𝄞' (U+1D11E)\nUTF-8:  0xF0 0x9D 0x84 0x9E  (4 bytes)\nUTF-16: 0xD834 0xDD1E        (4 bytes, surrogate pair)\nUTF-32: 0x0001D11E           (4 bytes)</code></pre>\n    </div>\n\n    <h3>UTF-8 Encoding Details</h3>\n    \n    <h4>Byte Patterns</h4>\n    <table>\n      <thead>\n        <tr>\n          <th>Code Point Range</th>\n          <th>Byte Pattern</th>\n          <th>Bytes</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>U+0000 to U+007F</td>\n          <td>0xxxxxxx</td>\n          <td>1</td>\n        </tr>\n        <tr>\n          <td>U+0080 to U+07FF</td>\n          <td>110xxxxx 10xxxxxx</td>\n          <td>2</td>\n        </tr>\n        <tr>\n          <td>U+0800 to U+FFFF</td>\n          <td>1110xxxx 10xxxxxx 10xxxxxx</td>\n          <td>3</td>\n        </tr>\n        <tr>\n          <td>U+10000 to U+10FFFF</td>\n          <td>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</td>\n          <td>4</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Common Unicode Blocks</h3>\n    \n    <h4>Basic Multilingual Plane (BMP)</h4>\n    <ul>\n      <li><strong>Basic Latin:</strong> U+0000 to U+007F</li>\n      <li><strong>Latin-1 Supplement:</strong> U+0080 to U+00FF</li>\n      <li><strong>Greek and Coptic:</strong> U+0370 to U+03FF</li>\n      <li><strong>Cyrillic:</strong> U+0400 to U+04FF</li>\n      <li><strong>Hebrew:</strong> U+0590 to U+05FF</li>\n      <li><strong>Arabic:</strong> U+0600 to U+06FF</li>\n      <li><strong>Devanagari:</strong> U+0900 to U+097F</li>\n      <li><strong>CJK Unified Ideographs:</strong> U+4E00 to U+9FFF</li>\n    </ul>\n\n    <h3>Practical Considerations</h3>\n    \n    <h4>Choosing an Encoding</h4>\n    <ul>\n      <li><strong>UTF-8:</strong> Best for web, APIs, and storage</li>\n      <li><strong>UTF-16:</strong> Windows applications, Java/C#</li>\n      <li><strong>UTF-32:</strong> When simple indexing is critical</li>\n    </ul>\n\n    <h4>Common Issues</h4>\n    <ul>\n      <li><strong>Mojibake:</strong> Garbled text from wrong encoding</li>\n      <li><strong>BOM (Byte Order Mark):</strong> Optional in UTF-8, required in UTF-16/32</li>\n      <li><strong>Normalization:</strong> Multiple ways to represent same character</li>\n      <li><strong>String Length:</strong> Bytes vs code points vs graphemes</li>\n    </ul>\n\n    <h3>Programming Considerations</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Python\ntext = \"Hello 世界\"\nprint(len(text))                    # 8 characters\nprint(len(text.encode('utf-8')))    # 12 bytes\nprint(len(text.encode('utf-16')))   # 18 bytes (includes BOM)\n\n# JavaScript\nconst text = \"Hello 世界\";\nconsole.log(text.length);           // 8 (UTF-16 code units)\nconsole.log([...text].length);      // 8 (actual characters)\n\n# String with emoji\nconst emoji = \"👨‍👩‍👧‍👦\";\nconsole.log(emoji.length);          // 11 (UTF-16 code units)\nconsole.log([...emoji].length);     // 7 (code points)\n// But visually it's just 1 emoji!</code></pre>\n    </div>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Always Specify Encoding:</strong> Don't rely on defaults</li>\n      <li><strong>Use UTF-8:</strong> Unless specific reason not to</li>\n      <li><strong>Handle BOM:</strong> Especially when reading files</li>\n      <li><strong>Test with International Data:</strong> Include emojis and various scripts</li>\n      <li><strong>Be Aware of Normalization:</strong> Use libraries for comparison</li>\n      <li><strong>Consider Grapheme Clusters:</strong> For user-facing string operations</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://symbl.cc/en/unicode-table/#devanagari\" target=\"_blank\">Unicode Table - Devanagari</a></li>\n    </ul>\n  `\n}; ","export const serializationDeserialization = {\n  id: 'serialization-deserialization',\n  title: 'Serialization and Deserialization',\n  content: `\n    <h2>Serialization and Deserialization</h2>\n    <p>Serialization refers to the process of converting data objects from their in-memory representation into a byte stream that can be transmitted over a network or stored in a file or database. Deserialization is the reverse process of serialization. It involves converting a byte stream back into its original in-memory data object.</p>\n\n    <h3>Core Concepts</h3>\n    \n    <h4>Why Serialization?</h4>\n    <ul>\n      <li><strong>Network Transmission:</strong> Send objects over network protocols</li>\n      <li><strong>Data Storage:</strong> Save objects to files or databases</li>\n      <li><strong>Inter-Process Communication:</strong> Share data between processes</li>\n      <li><strong>Caching:</strong> Store complex objects in cache systems</li>\n      <li><strong>Deep Cloning:</strong> Create exact copies of objects</li>\n    </ul>\n\n    <h4>Additional Processing</h4>\n    <p>Compression, encryption, and decryption are additional steps that can be applied on top of serialization and deserialization, depending on the specific requirements of the application.</p>\n\n    <h3>Serialization Algorithms</h3>\n    \n    <h4>Binary Serialization/Deserialization</h4>\n    <ul>\n      <li><strong>Format:</strong> Raw binary data</li>\n      <li><strong>Efficiency:</strong> Most space-efficient</li>\n      <li><strong>Speed:</strong> Fast processing</li>\n      <li><strong>Human Readable:</strong> No</li>\n      <li><strong>Language Support:</strong> Language-specific</li>\n      <li><strong>Use Cases:</strong> High-performance systems, gaming</li>\n    </ul>\n\n    <h4>JSON Serialization/Deserialization</h4>\n    <ul>\n      <li><strong>Format:</strong> JavaScript Object Notation</li>\n      <li><strong>Efficiency:</strong> Moderate</li>\n      <li><strong>Speed:</strong> Good</li>\n      <li><strong>Human Readable:</strong> Yes</li>\n      <li><strong>Language Support:</strong> Universal</li>\n      <li><strong>Use Cases:</strong> Web APIs, configuration files</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// JSON Example\n{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"email\": \"john@example.com\",\n  \"active\": true,\n  \"roles\": [\"admin\", \"user\"]\n}</code></pre>\n    </div>\n\n    <h4>XML Serialization/Deserialization</h4>\n    <ul>\n      <li><strong>Format:</strong> Extensible Markup Language</li>\n      <li><strong>Efficiency:</strong> Verbose, larger size</li>\n      <li><strong>Speed:</strong> Slower parsing</li>\n      <li><strong>Human Readable:</strong> Yes</li>\n      <li><strong>Language Support:</strong> Universal</li>\n      <li><strong>Use Cases:</strong> Enterprise systems, SOAP</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>&lt;user&gt;\n  &lt;name&gt;John Doe&lt;/name&gt;\n  &lt;age&gt;30&lt;/age&gt;\n  &lt;email&gt;john@example.com&lt;/email&gt;\n  &lt;active&gt;true&lt;/active&gt;\n  &lt;roles&gt;\n    &lt;role&gt;admin&lt;/role&gt;\n    &lt;role&gt;user&lt;/role&gt;\n  &lt;/roles&gt;\n&lt;/user&gt;</code></pre>\n    </div>\n\n    <h4>Protocol Buffers (protobuf) Serialization/Deserialization</h4>\n    <ul>\n      <li><strong>Format:</strong> Binary format by Google</li>\n      <li><strong>Efficiency:</strong> Very compact</li>\n      <li><strong>Speed:</strong> Very fast</li>\n      <li><strong>Human Readable:</strong> No</li>\n      <li><strong>Language Support:</strong> Multiple languages</li>\n      <li><strong>Use Cases:</strong> Microservices, gRPC</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// .proto file definition\nsyntax = \"proto3\";\n\nmessage User {\n  string name = 1;\n  int32 age = 2;\n  string email = 3;\n  bool active = 4;\n  repeated string roles = 5;\n}</code></pre>\n    </div>\n\n    <h3>Comparison of Formats</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Format</th>\n          <th>Size</th>\n          <th>Speed</th>\n          <th>Human Readable</th>\n          <th>Schema Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Binary</td>\n          <td>Smallest</td>\n          <td>Fastest</td>\n          <td>No</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td>JSON</td>\n          <td>Moderate</td>\n          <td>Good</td>\n          <td>Yes</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td>XML</td>\n          <td>Largest</td>\n          <td>Slowest</td>\n          <td>Yes</td>\n          <td>Optional</td>\n        </tr>\n        <tr>\n          <td>Protocol Buffers</td>\n          <td>Small</td>\n          <td>Very Fast</td>\n          <td>No</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td>MessagePack</td>\n          <td>Small</td>\n          <td>Fast</td>\n          <td>No</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td>Apache Avro</td>\n          <td>Small</td>\n          <td>Fast</td>\n          <td>No</td>\n          <td>Yes</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Serialization Challenges</h3>\n    \n    <h4>Common Issues</h4>\n    <ul>\n      <li><strong>Circular References:</strong> Objects referencing each other</li>\n      <li><strong>Version Compatibility:</strong> Schema evolution</li>\n      <li><strong>Security:</strong> Deserialization vulnerabilities</li>\n      <li><strong>Performance:</strong> Large object graphs</li>\n      <li><strong>Type Information:</strong> Preserving exact types</li>\n    </ul>\n\n    <h4>Security Considerations</h4>\n    <ul>\n      <li><strong>Injection Attacks:</strong> Malicious payloads during deserialization</li>\n      <li><strong>Resource Exhaustion:</strong> Billion laughs attack in XML</li>\n      <li><strong>Type Confusion:</strong> Unexpected object types</li>\n      <li><strong>Information Disclosure:</strong> Sensitive data exposure</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>General Guidelines</h4>\n    <ul>\n      <li><strong>Choose Right Format:</strong> Based on use case requirements</li>\n      <li><strong>Version Your Schema:</strong> Plan for evolution</li>\n      <li><strong>Validate Input:</strong> Never trust deserialized data</li>\n      <li><strong>Handle Errors:</strong> Graceful error handling</li>\n      <li><strong>Consider Performance:</strong> Profile serialization overhead</li>\n    </ul>\n\n    <h4>Language-Specific Examples</h4>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Java - JSON with Jackson\nObjectMapper mapper = new ObjectMapper();\n// Serialization\nString json = mapper.writeValueAsString(user);\n// Deserialization\nUser user = mapper.readValue(json, User.class);\n\n// Python - JSON\nimport json\n# Serialization\njson_str = json.dumps(user_dict)\n# Deserialization\nuser_dict = json.loads(json_str)\n\n// JavaScript - JSON\n// Serialization\nconst json = JSON.stringify(user);\n// Deserialization\nconst user = JSON.parse(json);\n\n// C# - JSON with Newtonsoft\n// Serialization\nstring json = JsonConvert.SerializeObject(user);\n// Deserialization\nUser user = JsonConvert.DeserializeObject<User>(json);</code></pre>\n    </div>\n\n    <h3>Advanced Topics</h3>\n    \n    <h4>Custom Serialization</h4>\n    <ul>\n      <li><strong>Custom Serializers:</strong> Control exact format</li>\n      <li><strong>Field Exclusion:</strong> Skip sensitive fields</li>\n      <li><strong>Type Adapters:</strong> Handle special types</li>\n      <li><strong>Compression:</strong> Reduce payload size</li>\n    </ul>\n\n    <h4>Schema Evolution</h4>\n    <ul>\n      <li><strong>Forward Compatibility:</strong> Old code reads new data</li>\n      <li><strong>Backward Compatibility:</strong> New code reads old data</li>\n      <li><strong>Field Addition:</strong> Optional fields with defaults</li>\n      <li><strong>Field Removal:</strong> Deprecation strategies</li>\n    </ul>\n\n    <h3>Performance Optimization</h3>\n    \n    <h4>Techniques</h4>\n    <ul>\n      <li><strong>Streaming:</strong> Process large data incrementally</li>\n      <li><strong>Lazy Loading:</strong> Deserialize on demand</li>\n      <li><strong>Object Pooling:</strong> Reuse deserialized objects</li>\n      <li><strong>Binary Formats:</strong> When performance critical</li>\n      <li><strong>Compression:</strong> Gzip, Snappy for large payloads</li>\n    </ul>\n\n    <h3>Real-World Applications</h3>\n    <ul>\n      <li><strong>REST APIs:</strong> JSON for web services</li>\n      <li><strong>Message Queues:</strong> Binary formats for throughput</li>\n      <li><strong>Caching Systems:</strong> Redis, Memcached</li>\n      <li><strong>RPC Frameworks:</strong> gRPC with Protocol Buffers</li>\n      <li><strong>Database Storage:</strong> BLOB fields</li>\n      <li><strong>Configuration Files:</strong> JSON, YAML, XML</li>\n    </ul>\n  `\n}; ","export const encodingDecoding = {\n  id: 'encoding-decoding',\n  title: 'Encoding and Decoding',\n  content: `\n    <h2>Encoding and Decoding</h2>\n    <p>Encoding is used to represent data in a specific format that is suitable for a particular purpose, such as storage, transmission, or presentation. Encoding and Decoding are similar concepts to serialization and deserialization. However, serialization and deserialization are commonly used in software development to convert complex data structures or objects into a linear format.</p>\n\n    <h3>Core Concepts</h3>\n    \n    <h4>Encoding vs Serialization</h4>\n    <ul>\n      <li><strong>Encoding:</strong> Transform data into a specific format (character encoding, data representation)</li>\n      <li><strong>Serialization:</strong> Convert objects/data structures into a storable/transmittable format</li>\n      <li><strong>Scope:</strong> Encoding is broader, serialization is a type of encoding</li>\n      <li><strong>Purpose:</strong> Encoding focuses on representation, serialization on object persistence</li>\n    </ul>\n\n    <h3>Encoding Algorithms</h3>\n    \n    <h4>Base64 Encoding/Decoding</h4>\n    <p>Base64 is a binary-to-text encoding scheme that represents binary data in ASCII string format using 64 printable characters.</p>\n    \n    <ul>\n      <li><strong>Character Set:</strong> A-Z, a-z, 0-9, +, /</li>\n      <li><strong>Padding:</strong> = character for alignment</li>\n      <li><strong>Size Increase:</strong> ~33% larger than original</li>\n      <li><strong>Use Cases:</strong> Email attachments, data URLs, API tokens</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Base64 Encoding Example\nOriginal: Hello World\nBase64: SGVsbG8gV29ybGQ=\n\n// How it works:\n1. Convert to binary: 01001000 01100101 01101100 ...\n2. Group into 6-bit chunks: 010010 000110 0101...\n3. Map to Base64 characters: S G V s ...\n4. Add padding if needed: =</code></pre>\n    </div>\n\n    <h4>UTF-8 Encoding/Decoding</h4>\n    <p>UTF-8 is a variable-width character encoding for Unicode, using 1 to 4 bytes per character.</p>\n    \n    <ul>\n      <li><strong>Compatibility:</strong> Backward compatible with ASCII</li>\n      <li><strong>Efficiency:</strong> 1 byte for ASCII characters</li>\n      <li><strong>Coverage:</strong> Supports all Unicode characters</li>\n      <li><strong>Prevalence:</strong> Most common encoding on the web</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// UTF-8 Encoding Rules\nASCII (0-127):          0xxxxxxx                    (1 byte)\nExtended (128-2047):    110xxxxx 10xxxxxx          (2 bytes)\nBMP (2048-65535):       1110xxxx 10xxxxxx 10xxxxxx (3 bytes)\nSupplementary:          11110xxx 10xxxxxx 10xxxxxx 10xxxxxx (4 bytes)\n\nExamples:\n'A' (U+0041):    01000001                    → 0x41\n'€' (U+20AC):    11100010 10000010 10101100 → 0xE282AC\n'😀' (U+1F600):  11110000 10011111 10011000 10000000 → 0xF09F9880</code></pre>\n    </div>\n\n    <h4>UTF-16 Encoding/Decoding</h4>\n    <p>UTF-16 uses 16-bit code units, with surrogate pairs for characters outside the Basic Multilingual Plane.</p>\n    \n    <ul>\n      <li><strong>Fixed Width:</strong> 2 bytes for BMP characters</li>\n      <li><strong>Surrogate Pairs:</strong> 4 bytes for supplementary characters</li>\n      <li><strong>Byte Order:</strong> Big-endian (BE) or Little-endian (LE)</li>\n      <li><strong>Use Cases:</strong> Windows APIs, Java strings, JavaScript</li>\n    </ul>\n\n    <h3>Common Encoding Schemes</h3>\n    \n    <h4>URL Encoding (Percent Encoding)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// URL Encoding Examples\nSpace:       %20\nAmpersand:   %26\nQuestion:    %3F\nPlus:        %2B\n\nOriginal: Hello World & Friends?\nEncoded:  Hello%20World%20%26%20Friends%3F\n\n// JavaScript\nencodeURIComponent(\"Hello World & Friends?\")\n// \"Hello%20World%20%26%20Friends%3F\"</code></pre>\n    </div>\n\n    <h4>HTML Entity Encoding</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// HTML Entity Encoding\n< :  &lt;\n> :  &gt;\n& :  &amp;\n\" :  &quot;\n' :  &#39; or &apos;\n\nOriginal: <script>alert(\"XSS\")</script>\nEncoded:  &lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;</code></pre>\n    </div>\n\n    <h4>Hex Encoding</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Hexadecimal Encoding\nOriginal: Hello\nASCII:    72 101 108 108 111\nHex:      48 65 6C 6C 6F\nString:   \"48656C6C6F\"\n\n// Use cases:\n- Color codes: #FF5733\n- MAC addresses: 00:1B:44:11:3A:B7\n- Binary data representation</code></pre>\n    </div>\n\n    <h3>Encoding Detection and Conversion</h3>\n    \n    <h4>Character Set Detection</h4>\n    <ul>\n      <li><strong>BOM (Byte Order Mark):</strong> Identifies encoding and byte order</li>\n      <li><strong>Heuristic Detection:</strong> Statistical analysis of byte patterns</li>\n      <li><strong>Meta Information:</strong> HTTP headers, XML declarations</li>\n      <li><strong>Libraries:</strong> chardet (Python), jschardet (JavaScript)</li>\n    </ul>\n\n    <h4>Common BOMs</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>UTF-8:      EF BB BF\nUTF-16 BE:  FE FF\nUTF-16 LE:  FF FE\nUTF-32 BE:  00 00 FE FF\nUTF-32 LE:  FF FE 00 00</code></pre>\n    </div>\n\n    <h3>Practical Examples</h3>\n    \n    <h4>Multi-Language Examples</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Python\nimport base64\n# Base64 encoding\nencoded = base64.b64encode(b\"Hello World\")\ndecoded = base64.b64decode(encoded)\n\n# UTF-8 encoding\ntext = \"Hello 世界\"\nutf8_bytes = text.encode('utf-8')\ndecoded_text = utf8_bytes.decode('utf-8')\n\n// JavaScript\n// Base64\nconst encoded = btoa(\"Hello World\");\nconst decoded = atob(encoded);\n\n// UTF-8 with TextEncoder/TextDecoder\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst bytes = encoder.encode(\"Hello 世界\");\nconst text = decoder.decode(bytes);\n\n// Java\nimport java.util.Base64;\nimport java.nio.charset.StandardCharsets;\n\n// Base64\nString encoded = Base64.getEncoder().encodeToString(\"Hello\".getBytes());\nbyte[] decoded = Base64.getDecoder().decode(encoded);\n\n// UTF-8\nbyte[] utf8Bytes = \"Hello 世界\".getBytes(StandardCharsets.UTF_8);\nString text = new String(utf8Bytes, StandardCharsets.UTF_8);</code></pre>\n    </div>\n\n    <h3>Common Pitfalls</h3>\n    \n    <h4>Encoding Errors</h4>\n    <ul>\n      <li><strong>Mojibake:</strong> Garbled text from wrong encoding</li>\n      <li><strong>Replacement Character (�):</strong> Invalid byte sequences</li>\n      <li><strong>Double Encoding:</strong> Encoding already encoded data</li>\n      <li><strong>BOM Issues:</strong> Unexpected bytes at file start</li>\n    </ul>\n\n    <h4>Security Considerations</h4>\n    <ul>\n      <li><strong>Injection Attacks:</strong> Improper encoding in SQL/HTML</li>\n      <li><strong>Path Traversal:</strong> URL encoding bypasses</li>\n      <li><strong>Homograph Attacks:</strong> Similar-looking characters</li>\n      <li><strong>Encoding Smuggling:</strong> Mixed encoding exploitation</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    \n    <h4>General Guidelines</h4>\n    <ul>\n      <li><strong>Use UTF-8:</strong> Default for new applications</li>\n      <li><strong>Specify Encoding:</strong> Always declare encoding explicitly</li>\n      <li><strong>Validate Input:</strong> Check for valid sequences</li>\n      <li><strong>Handle Errors:</strong> Define error handling strategy</li>\n      <li><strong>Test Thoroughly:</strong> Use various character sets</li>\n    </ul>\n\n    <h4>Web Development</h4>\n    <ul>\n      <li><strong>HTTP Headers:</strong> Content-Type: text/html; charset=utf-8</li>\n      <li><strong>HTML Meta:</strong> &lt;meta charset=\"utf-8\"&gt;</li>\n      <li><strong>Form Encoding:</strong> accept-charset=\"utf-8\"</li>\n      <li><strong>URL Encoding:</strong> Use proper encoding functions</li>\n    </ul>\n\n    <h3>Performance Considerations</h3>\n    \n    <h4>Optimization Tips</h4>\n    <ul>\n      <li><strong>Streaming:</strong> Process large files incrementally</li>\n      <li><strong>Caching:</strong> Cache encoding detection results</li>\n      <li><strong>Native Functions:</strong> Use built-in encoding functions</li>\n      <li><strong>Batch Processing:</strong> Encode/decode in chunks</li>\n      <li><strong>Avoid Conversions:</strong> Minimize encoding changes</li>\n    </ul>\n\n    <h3>Real-World Applications</h3>\n    <ul>\n      <li><strong>Email Systems:</strong> MIME encoding for attachments</li>\n      <li><strong>Web APIs:</strong> JSON with UTF-8 encoding</li>\n      <li><strong>Databases:</strong> Character set configuration</li>\n      <li><strong>File Systems:</strong> Filename encoding</li>\n      <li><strong>Network Protocols:</strong> Binary to text encoding</li>\n      <li><strong>Cryptography:</strong> Base64 for keys and certificates</li>\n    </ul>\n  `\n}; ","export const compressionDecompression = {\n  id: 'compression-decompression',\n  title: 'Compression and Decompression',\n  content: `\n    <h2>Compression and Decompression</h2>\n    <p>Before serialization, data can be compressed to reduce its size, which can lead to more efficient transmission over the network or storage in files or databases. Compression algorithms reduce data size by identifying and eliminating redundancy.</p>\n\n    <h3>Core Concepts</h3>\n    \n    <h4>Types of Compression</h4>\n    <ul>\n      <li><strong>Lossless:</strong> Original data can be perfectly reconstructed</li>\n      <li><strong>Lossy:</strong> Some data is lost but often imperceptible (images, audio)</li>\n      <li><strong>Real-time:</strong> Fast enough for streaming applications</li>\n      <li><strong>Archival:</strong> Maximum compression for long-term storage</li>\n    </ul>\n\n    <h3>Compression Algorithms</h3>\n    \n    <h4>Huffman Coding</h4>\n    <p>A lossless data compression algorithm that uses variable-length codes for different characters based on their frequency of occurrence.</p>\n    \n    <ul>\n      <li><strong>Type:</strong> Lossless, entropy encoding</li>\n      <li><strong>Principle:</strong> Frequent characters get shorter codes</li>\n      <li><strong>Process:</strong> Build frequency table → Create binary tree → Assign codes</li>\n      <li><strong>Efficiency:</strong> Optimal for symbol-by-symbol encoding</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Huffman Coding Example\nInput: \"AABBBCCCC\"\nFrequency: A:2, B:3, C:4\n\nHuffman Tree:\n       (9)\n      /   \\\\\n    (5)    C:4\n   /  \\\\\n  A:2  B:3\n\nCodes:\nC: 1\nB: 01\nA: 00\n\nEncoded: 00 00 01 01 01 1 1 1 1\nOriginal: 9 bytes × 8 = 72 bits\nCompressed: 13 bits\nCompression ratio: 82%</code></pre>\n    </div>\n\n    <h4>Run-Length Encoding (RLE)</h4>\n    <p>A simple compression algorithm that replaces sequences of repeated data with a count and a single value.</p>\n    \n    <ul>\n      <li><strong>Type:</strong> Lossless</li>\n      <li><strong>Best for:</strong> Data with many consecutive repeated values</li>\n      <li><strong>Worst case:</strong> Can increase size if no repetition</li>\n      <li><strong>Applications:</strong> Fax machines, simple graphics</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// RLE Example\nOriginal:  AAABBBBBCCCCCC\nEncoded:   3A5B6C\n\nOriginal:  ABCDEF\nEncoded:   1A1B1C1D1E1F (worse than original!)\n\n// Better RLE with escape sequences\nOriginal:  AAABCDDDDD\nEncoded:   3ABC5D (literals not counted)</code></pre>\n    </div>\n\n    <h3>Compression Libraries</h3>\n    \n    <h4>Gzip</h4>\n    <p>Widely used compression library based on DEFLATE algorithm (LZ77 + Huffman coding).</p>\n    \n    <ul>\n      <li><strong>Algorithm:</strong> DEFLATE (LZ77 + Huffman)</li>\n      <li><strong>Compression Level:</strong> 1-9 (speed vs ratio)</li>\n      <li><strong>File Extension:</strong> .gz</li>\n      <li><strong>Use Cases:</strong> HTTP compression, file archiving</li>\n      <li><strong>Typical Ratio:</strong> 60-70% for text</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Using Gzip in different languages\n\n# Python\nimport gzip\n# Compress\nwith gzip.open('file.txt.gz', 'wb') as f:\n    f.write(b'Hello World' * 1000)\n\n# Node.js\nconst zlib = require('zlib');\nconst gzip = zlib.createGzip();\nfs.createReadStream('input.txt')\n  .pipe(gzip)\n  .pipe(fs.createWriteStream('output.txt.gz'));\n\n# Command line\ngzip file.txt          # Creates file.txt.gz\ngzip -d file.txt.gz    # Decompress\ngzip -9 file.txt       # Maximum compression</code></pre>\n    </div>\n\n    <h4>Snappy</h4>\n    <p>Fast compression library by Google, optimized for speed over compression ratio.</p>\n    \n    <ul>\n      <li><strong>Focus:</strong> Speed over compression ratio</li>\n      <li><strong>Compression Speed:</strong> >250 MB/s</li>\n      <li><strong>Decompression Speed:</strong> >500 MB/s</li>\n      <li><strong>Use Cases:</strong> Real-time systems, databases</li>\n      <li><strong>Used by:</strong> Cassandra, MongoDB, Hadoop</li>\n    </ul>\n\n    <h3>Compression Algorithm Comparison</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Algorithm</th>\n          <th>Type</th>\n          <th>Speed</th>\n          <th>Ratio</th>\n          <th>Use Cases</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Gzip</td>\n          <td>Lossless</td>\n          <td>Moderate</td>\n          <td>Good</td>\n          <td>Web, general purpose</td>\n        </tr>\n        <tr>\n          <td>Snappy</td>\n          <td>Lossless</td>\n          <td>Very Fast</td>\n          <td>Moderate</td>\n          <td>Real-time, databases</td>\n        </tr>\n        <tr>\n          <td>LZ4</td>\n          <td>Lossless</td>\n          <td>Extremely Fast</td>\n          <td>Moderate</td>\n          <td>Real-time compression</td>\n        </tr>\n        <tr>\n          <td>Brotli</td>\n          <td>Lossless</td>\n          <td>Slow</td>\n          <td>Excellent</td>\n          <td>Static web content</td>\n        </tr>\n        <tr>\n          <td>Zstandard</td>\n          <td>Lossless</td>\n          <td>Fast</td>\n          <td>Very Good</td>\n          <td>General purpose</td>\n        </tr>\n        <tr>\n          <td>JPEG</td>\n          <td>Lossy</td>\n          <td>Fast</td>\n          <td>Excellent</td>\n          <td>Images</td>\n        </tr>\n        <tr>\n          <td>MP3</td>\n          <td>Lossy</td>\n          <td>Moderate</td>\n          <td>Excellent</td>\n          <td>Audio</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Compression in Practice</h3>\n    \n    <h4>HTTP Compression</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Request header\nAccept-Encoding: gzip, deflate, br\n\n// Response header\nContent-Encoding: gzip\n\n// Server configuration (Nginx)\ngzip on;\ngzip_types text/plain application/json application/javascript;\ngzip_comp_level 6;\ngzip_min_length 1000;</code></pre>\n    </div>\n\n    <h4>Database Compression</h4>\n    <ul>\n      <li><strong>Row Compression:</strong> Compress individual rows</li>\n      <li><strong>Page Compression:</strong> Compress data pages</li>\n      <li><strong>Column Compression:</strong> Compress columnar data</li>\n      <li><strong>Backup Compression:</strong> Compress backup files</li>\n    </ul>\n\n    <h3>Choosing Compression</h3>\n    \n    <h4>Factors to Consider</h4>\n    <ul>\n      <li><strong>Data Type:</strong> Text compresses better than binary</li>\n      <li><strong>Speed Requirements:</strong> Real-time vs batch processing</li>\n      <li><strong>Compression Ratio:</strong> Storage savings needed</li>\n      <li><strong>CPU Usage:</strong> Compression overhead</li>\n      <li><strong>Memory Usage:</strong> Buffer requirements</li>\n    </ul>\n\n    <h4>Best Practices</h4>\n    <ul>\n      <li><strong>Benchmark:</strong> Test with your actual data</li>\n      <li><strong>Consider Context:</strong> Network vs storage compression</li>\n      <li><strong>Avoid Double Compression:</strong> Don't compress already compressed data</li>\n      <li><strong>Stream When Possible:</strong> For large files</li>\n      <li><strong>Cache Compressed Data:</strong> Avoid repeated compression</li>\n    </ul>\n\n    <h3>Advanced Topics</h3>\n    \n    <h4>Dictionary Compression</h4>\n    <ul>\n      <li><strong>Shared Dictionary:</strong> Pre-shared compression dictionary</li>\n      <li><strong>Training:</strong> Build dictionary from sample data</li>\n      <li><strong>Benefits:</strong> Better compression for similar data</li>\n      <li><strong>Examples:</strong> Zstandard dictionary mode</li>\n    </ul>\n\n    <h4>Adaptive Compression</h4>\n    <ul>\n      <li><strong>Dynamic Selection:</strong> Choose algorithm based on data</li>\n      <li><strong>Hybrid Approaches:</strong> Combine multiple algorithms</li>\n      <li><strong>Content-Aware:</strong> Different algorithms for different content types</li>\n    </ul>\n\n    <h3>Common Pitfalls</h3>\n    <ul>\n      <li><strong>Compression Bombs:</strong> Small compressed files that expand enormously</li>\n      <li><strong>CRIME/BREACH:</strong> Security vulnerabilities with HTTPS compression</li>\n      <li><strong>Already Compressed:</strong> Compressing JPEG, MP3, etc.</li>\n      <li><strong>Small Files:</strong> Overhead may exceed savings</li>\n      <li><strong>Random Data:</strong> Cannot be compressed effectively</li>\n    </ul>\n\n    <h3>Real-World Applications</h3>\n    <ul>\n      <li><strong>Web Servers:</strong> Gzip/Brotli for HTML, CSS, JS</li>\n      <li><strong>CDNs:</strong> Edge compression for static assets</li>\n      <li><strong>Databases:</strong> Transparent compression for storage</li>\n      <li><strong>Message Queues:</strong> Compress large messages</li>\n      <li><strong>Log Files:</strong> Compress rotated logs</li>\n      <li><strong>Backups:</strong> Reduce backup storage costs</li>\n      <li><strong>APIs:</strong> Compress JSON/XML responses</li>\n    </ul>\n  `\n}; ","export const udp = {\n  id: 'udp',\n  title: 'UDP (User Datagram Protocol)',\n  content: `# UDP (User Datagram Protocol)\n\n## Definition\nUDP is a connectionless, unreliable protocol that provides fast data transmission without guarantees.\n\n## Key Features\n- **Connectionless**: No connection establishment required\n- **Unreliable**: No guarantee of delivery\n- **Fast**: Minimal overhead\n- **Stateless**: No connection state maintained\n- **Broadcast/Multicast**: Supports one-to-many communication\n\n## UDP Header\n- Source Port (16 bits)\n- Destination Port (16 bits)\n- Length (16 bits)\n- Checksum (16 bits)\n\n## Use Cases\n- **DNS**: Domain name resolution\n- **DHCP**: IP address assignment\n- **Streaming**: Video/audio streaming\n- **Gaming**: Real-time multiplayer games\n- **IoT**: Sensor data transmission\n\n## Advantages\n- Low latency\n- Simple implementation\n- No connection overhead\n- Supports broadcasting\n\n## Disadvantages\n- No reliability guarantees\n- No flow control\n- No congestion control\n- Packet loss possible\n\n## Interview Questions\n**Q: When would you choose UDP over TCP?**\nA: For real-time applications where speed is more important than reliability, like gaming or streaming.`\n}; ","export const containerization = {\n  id: 'containerization',\n  title: 'Containerization',\n  content: `\n    <h2>Containerization</h2>\n    <p>Containerization is a lightweight form of virtualization that packages applications and their dependencies into containers. Containers share the host OS kernel but run in isolated user spaces, making them more efficient than traditional virtual machines.</p>\n\n    <h3>Containers vs Virtual Machines</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Aspect</th>\n          <th>Containers</th>\n          <th>Virtual Machines</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Architecture</strong></td>\n          <td>Share host OS kernel</td>\n          <td>Each has its own OS</td>\n        </tr>\n        <tr>\n          <td><strong>Size</strong></td>\n          <td>Megabytes</td>\n          <td>Gigabytes</td>\n        </tr>\n        <tr>\n          <td><strong>Startup Time</strong></td>\n          <td>Seconds</td>\n          <td>Minutes</td>\n        </tr>\n        <tr>\n          <td><strong>Resource Usage</strong></td>\n          <td>Low overhead</td>\n          <td>Higher overhead</td>\n        </tr>\n        <tr>\n          <td><strong>Isolation</strong></td>\n          <td>Process-level</td>\n          <td>Hardware-level</td>\n        </tr>\n        <tr>\n          <td><strong>Portability</strong></td>\n          <td>Highly portable</td>\n          <td>Less portable</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Docker Architecture</h3>\n    \n    <h4>Core Components</h4>\n    <ul>\n      <li><strong>Docker Engine:</strong> Runtime that creates and manages containers</li>\n      <li><strong>Docker Daemon:</strong> Background service managing Docker objects</li>\n      <li><strong>Docker Client:</strong> CLI tool to interact with Docker daemon</li>\n      <li><strong>Docker Registry:</strong> Storage for Docker images (e.g., Docker Hub)</li>\n    </ul>\n\n    <h4>Docker Objects</h4>\n    <ul>\n      <li><strong>Images:</strong> Read-only templates with instructions for creating containers</li>\n      <li><strong>Containers:</strong> Runnable instances of images</li>\n      <li><strong>Volumes:</strong> Persistent data storage</li>\n      <li><strong>Networks:</strong> Communication between containers</li>\n    </ul>\n\n    <h3>Dockerfile Example</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Multi-stage Dockerfile for Node.js app\n\n# Build stage\nFROM node:16-alpine AS builder\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production\n\n# Runtime stage\nFROM node:16-alpine\nWORKDIR /app\n\n# Create non-root user\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nodejs -u 1001\n\n# Copy built application\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --chown=nodejs:nodejs . .\n\n# Switch to non-root user\nUSER nodejs\n\n# Expose port\nEXPOSE 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD node healthcheck.js\n\n# Start application\nCMD [\"node\", \"server.js\"]</code></pre>\n    </div>\n\n    <h3>Docker Commands</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Image Management\ndocker build -t myapp:latest .              # Build image\ndocker images                               # List images\ndocker rmi myapp:latest                     # Remove image\ndocker pull nginx:latest                    # Download image\n\n# Container Management\ndocker run -d -p 8080:80 --name web nginx  # Run container\ndocker ps                                   # List running containers\ndocker ps -a                                # List all containers\ndocker stop web                             # Stop container\ndocker start web                            # Start container\ndocker rm web                               # Remove container\ndocker logs web                             # View logs\ndocker exec -it web /bin/bash               # Access container shell\n\n# Volume Management\ndocker volume create mydata                 # Create volume\ndocker run -v mydata:/data myapp            # Mount volume\ndocker volume ls                            # List volumes\ndocker volume rm mydata                     # Remove volume\n\n# Network Management\ndocker network create mynet                 # Create network\ndocker run --network mynet myapp            # Use network\ndocker network ls                           # List networks</code></pre>\n    </div>\n\n    <h3>Docker Compose</h3>\n    <p>Tool for defining and running multi-container Docker applications using YAML files.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># docker-compose.yml\nversion: '3.8'\n\nservices:\n  web:\n    build: .\n    ports:\n      - \"8080:80\"\n    environment:\n      - NODE_ENV=production\n      - DATABASE_URL=postgres://db:5432/myapp\n    depends_on:\n      - db\n      - redis\n    volumes:\n      - ./uploads:/app/uploads\n    networks:\n      - backend\n    restart: unless-stopped\n\n  db:\n    image: postgres:13\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: \\${DB_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - backend\n\n  redis:\n    image: redis:6-alpine\n    command: redis-server --appendonly yes\n    volumes:\n      - redis_data:/data\n    networks:\n      - backend\n\nvolumes:\n  postgres_data:\n  redis_data:\n\nnetworks:\n  backend:\n    driver: bridge</code></pre>\n    </div>\n\n    <h3>Container Orchestration</h3>\n    \n    <h4>Kubernetes (K8s)</h4>\n    <p>Open-source container orchestration platform for automating deployment, scaling, and management of containerized applications.</p>\n\n    <h5>Key Concepts</h5>\n    <ul>\n      <li><strong>Pod:</strong> Smallest deployable unit (one or more containers)</li>\n      <li><strong>Service:</strong> Network endpoint for accessing pods</li>\n      <li><strong>Deployment:</strong> Manages replicated application</li>\n      <li><strong>Node:</strong> Worker machine in cluster</li>\n      <li><strong>Cluster:</strong> Set of nodes running containerized applications</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># kubernetes-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-app\n  labels:\n    app: web\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web\n  template:\n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: web\n        image: myapp:latest\n        ports:\n        - containerPort: 8080\n        resources:\n          requests:\n            memory: \"64Mi\"\n            cpu: \"250m\"\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: web-service\nspec:\n  selector:\n    app: web\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n  type: LoadBalancer</code></pre>\n    </div>\n\n    <h3>Container Best Practices</h3>\n    \n    <h4>Security</h4>\n    <ul>\n      <li>Run as non-root user</li>\n      <li>Use minimal base images (Alpine, Distroless)</li>\n      <li>Scan images for vulnerabilities</li>\n      <li>Don't store secrets in images</li>\n      <li>Use read-only filesystems when possible</li>\n      <li>Implement network policies</li>\n    </ul>\n\n    <h4>Image Optimization</h4>\n    <ul>\n      <li>Use multi-stage builds</li>\n      <li>Minimize layers</li>\n      <li>Order commands by change frequency</li>\n      <li>Clean up in same layer</li>\n      <li>Use .dockerignore file</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Optimized Dockerfile\nFROM node:16-alpine AS builder\nWORKDIR /app\n# Copy only package files first (cache layer)\nCOPY package*.json ./\nRUN npm ci --only=production && \\\n    npm cache clean --force  # Clean in same layer\n\nFROM node:16-alpine\nWORKDIR /app\n# Copy from builder\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY . .\n# Combine RUN commands\nRUN addgroup -g 1001 -S nodejs && \\\n    adduser -S nodejs -u 1001 && \\\n    chown -R nodejs:nodejs /app\nUSER nodejs\nCMD [\"node\", \"server.js\"]</code></pre>\n    </div>\n\n    <h4>Container Patterns</h4>\n    <ul>\n      <li><strong>Sidecar:</strong> Helper container alongside main container</li>\n      <li><strong>Ambassador:</strong> Proxy for network connections</li>\n      <li><strong>Adapter:</strong> Standardize output from main container</li>\n      <li><strong>Init Container:</strong> Run setup before main container</li>\n    </ul>\n\n    <h3>Container Registries</h3>\n    \n    <h4>Popular Registries</h4>\n    <ul>\n      <li><strong>Docker Hub:</strong> Default public registry</li>\n      <li><strong>Amazon ECR:</strong> AWS container registry</li>\n      <li><strong>Google Container Registry:</strong> GCP registry</li>\n      <li><strong>Azure Container Registry:</strong> Microsoft registry</li>\n      <li><strong>Harbor:</strong> Open-source enterprise registry</li>\n    </ul>\n\n    <h4>Registry Operations</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Tag and push to registry\ndocker tag myapp:latest myregistry.com/myapp:v1.0\ndocker push myregistry.com/myapp:v1.0\n\n# Pull from private registry\ndocker login myregistry.com\ndocker pull myregistry.com/myapp:v1.0\n\n# Multi-architecture images\ndocker buildx build --platform linux/amd64,linux/arm64 \\\n  -t myregistry.com/myapp:latest --push .</code></pre>\n    </div>\n\n    <h3>Container Monitoring</h3>\n    \n    <h4>Key Metrics</h4>\n    <ul>\n      <li>CPU usage</li>\n      <li>Memory consumption</li>\n      <li>Network I/O</li>\n      <li>Disk usage</li>\n      <li>Container restarts</li>\n      <li>Application-specific metrics</li>\n    </ul>\n\n    <h4>Monitoring Tools</h4>\n    <ul>\n      <li><strong>Prometheus:</strong> Metrics collection and alerting</li>\n      <li><strong>Grafana:</strong> Visualization dashboards</li>\n      <li><strong>ELK Stack:</strong> Logging (Elasticsearch, Logstash, Kibana)</li>\n      <li><strong>Datadog:</strong> Full-stack monitoring</li>\n      <li><strong>New Relic:</strong> Application performance monitoring</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://medium.com/@kmdkhadeer/containerization-and-orchestration-6eadd9a3c2d\" target=\"_blank\">Containerization and Orchestration</a></li>\n      <li><a href=\"https://www.scaler.com/topics/docker/docker-vs-virtual-machine/\" target=\"_blank\">Docker vs Virtual Machine</a></li>\n    </ul>\n  `\n};","export const docker = {\n  id: 'docker',\n  title: 'Docker',\n  content: `# Docker\n\n## Definition\nDocker is a platform that uses containerization technology to package applications and their dependencies into portable containers.\n\n## Core Components\n- **Docker Engine**: Runtime for containers\n- **Docker Images**: Lightweight, standalone packages\n- **Docker Containers**: Running instances of images\n- **Docker Hub**: Cloud-based registry\n- **Dockerfile**: Text file with build instructions\n\n## Basic Commands\n\\`\\`\\`bash\ndocker build -t myapp .          # Build image\ndocker run -p 3000:3000 myapp    # Run container\ndocker ps                        # List running containers\ndocker images                    # List images\ndocker stop container_id         # Stop container\ndocker rm container_id           # Remove container\n\\`\\`\\`\n\n## Dockerfile Instructions\n- **FROM**: Base image\n- **WORKDIR**: Working directory\n- **COPY/ADD**: Copy files\n- **RUN**: Execute commands\n- **EXPOSE**: Expose ports\n- **CMD/ENTRYPOINT**: Default command\n\n## Docker Networking\n- **Bridge**: Default network driver\n- **Host**: Use host networking\n- **None**: Disable networking\n- **Custom Networks**: User-defined networks\n\n## Volumes and Storage\n- **Bind Mounts**: Host filesystem paths\n- **Volumes**: Docker-managed storage\n- **tmpfs**: Temporary filesystem in memory\n\n## Multi-stage Builds\nOptimize image size by using multiple FROM statements\n\n## Docker Compose\nOrchestrate multi-container applications with YAML configuration\n\n## Interview Questions\n**Q: Explain the difference between COPY and ADD in Dockerfile.**\nA: COPY simply copies files, while ADD can also extract archives and download from URLs.`\n}; ","export const kubernetes = {\n  id: 'kubernetes',\n  title: 'Kubernetes',\n  content: `# Kubernetes\n\n## Definition\nKubernetes is an open-source container orchestration platform that automates deployment, scaling, and management of containerized applications.\n\n## Core Components\n- **Master Node**: Control plane components\n- **Worker Nodes**: Run application workloads\n- **etcd**: Distributed key-value store\n- **API Server**: Central management component\n- **Scheduler**: Assigns pods to nodes\n- **Controller Manager**: Maintains desired state\n\n## Key Objects\n- **Pod**: Smallest deployable unit\n- **Service**: Network abstraction for pods\n- **Deployment**: Manages replica sets\n- **ConfigMap**: Configuration data\n- **Secret**: Sensitive data storage\n- **Namespace**: Virtual clusters\n\n## Pod Lifecycle\n1. Pending: Scheduled but not running\n2. Running: Bound to node and running\n3. Succeeded: All containers terminated successfully\n4. Failed: At least one container failed\n5. Unknown: State cannot be determined\n\n## Services Types\n- **ClusterIP**: Internal cluster communication\n- **NodePort**: Expose on each node's IP\n- **LoadBalancer**: External load balancer\n- **ExternalName**: DNS CNAME record\n\n## Scaling\n- **Horizontal Pod Autoscaler**: Scale pods based on metrics\n- **Vertical Pod Autoscaler**: Adjust resource requests\n- **Cluster Autoscaler**: Scale cluster nodes\n\n## Storage\n- **Persistent Volumes**: Cluster-wide storage\n- **Persistent Volume Claims**: Storage requests\n- **Storage Classes**: Dynamic provisioning\n\n## Interview Questions\n**Q: What is the difference between a Pod and a Container?**\nA: A Pod is the smallest deployable unit in Kubernetes that can contain one or more containers that share storage and network.`\n}; ","export const cicd = {\n  id: 'cicd',\n  title: 'CI/CD (Continuous Integration/Continuous Deployment)',\n  content: `# CI/CD (Continuous Integration/Continuous Deployment)\n\n## Definition\nCI/CD is a software development practice that automates the integration, testing, and deployment of code changes.\n\n## Continuous Integration (CI)\n- **Frequent Commits**: Regular code integration\n- **Automated Testing**: Run tests on every commit\n- **Build Automation**: Automatic build processes\n- **Fast Feedback**: Quick notification of issues\n- **Version Control**: Centralized code repository\n\n## Continuous Deployment (CD)\n- **Automated Deployment**: Deploy to production automatically\n- **Environment Promotion**: Move through dev/test/prod\n- **Rollback Capability**: Quick reversion if issues arise\n- **Infrastructure as Code**: Automated environment setup\n\n## CI/CD Pipeline Stages\n1. **Source**: Code commit triggers pipeline\n2. **Build**: Compile and package application\n3. **Test**: Run automated tests\n4. **Deploy**: Deploy to target environment\n5. **Monitor**: Track application performance\n\n## Benefits\n- **Faster Releases**: Automated processes\n- **Better Quality**: Automated testing catches issues\n- **Reduced Risk**: Smaller, incremental changes\n- **Faster Feedback**: Quick issue detection\n- **Improved Collaboration**: Shared responsibility\n\n## Popular Tools\n- **Jenkins**: Open-source automation server\n- **GitLab CI**: Integrated with GitLab\n- **GitHub Actions**: GitHub's CI/CD platform\n- **Azure DevOps**: Microsoft's DevOps platform\n- **CircleCI**: Cloud-based CI/CD\n\n## Best Practices\n- Keep builds fast\n- Test early and often\n- Maintain clean environments\n- Use feature flags\n- Monitor deployments\n\n## Interview Questions\n**Q: What's the difference between Continuous Deployment and Continuous Delivery?**\nA: Continuous Delivery prepares code for release, while Continuous Deployment automatically releases to production.`\n}; ","export const monitoring = {\n  id: 'monitoring',\n  title: 'System Monitoring',\n  content: `# System Monitoring\n\n## Definition\nSystem monitoring is the continuous observation and measurement of system performance, health, and behavior to ensure optimal operation.\n\n## Types of Monitoring\n- **Infrastructure Monitoring**: Servers, networks, storage\n- **Application Monitoring**: Application performance and errors\n- **Log Monitoring**: System and application logs\n- **User Experience Monitoring**: Real user metrics\n- **Business Metrics**: KPIs and business-specific metrics\n\n## Key Metrics\n- **Golden Signals**: Latency, traffic, errors, saturation\n- **RED Metrics**: Rate, errors, duration\n- **USE Metrics**: Utilization, saturation, errors\n- **SLIs**: Service Level Indicators\n- **SLOs**: Service Level Objectives\n\n## Monitoring Stack Components\n- **Metrics Collection**: Prometheus, StatsD, CloudWatch\n- **Log Aggregation**: ELK Stack, Splunk, Fluentd\n- **Tracing**: Jaeger, Zipkin, AWS X-Ray\n- **Visualization**: Grafana, Kibana, Tableau\n- **Alerting**: PagerDuty, Slack, email\n\n## Observability Pillars\n- **Metrics**: Numerical measurements over time\n- **Logs**: Discrete events with context\n- **Traces**: Request flow through distributed systems\n- **Profiles**: Code-level performance analysis\n\n## Alerting Best Practices\n- **Actionable Alerts**: Only alert on actionable issues\n- **Alert Fatigue**: Avoid too many false positives\n- **Escalation**: Multi-level alert escalation\n- **Runbooks**: Documentation for alert response\n- **On-call Rotation**: Distribute alert responsibility\n\n## Monitoring Patterns\n- **Push vs Pull**: Data collection methods\n- **Blackbox vs Whitebox**: External vs internal monitoring\n- **Synthetic Monitoring**: Automated testing\n- **Real User Monitoring**: Actual user experience\n\n## Common Tools\n- **Prometheus + Grafana**: Open-source monitoring\n- **DataDog**: All-in-one monitoring platform\n- **New Relic**: Application performance monitoring\n- **Splunk**: Log analysis and SIEM\n- **AWS CloudWatch**: Cloud-native monitoring\n\n## Challenges\n- **Data Volume**: Managing large amounts of telemetry\n- **Alert Noise**: Too many false positives\n- **Correlation**: Connecting related events\n- **Cost**: Monitoring infrastructure expenses\n- **Complexity**: Distributed system visibility\n\n## Interview Questions\n**Q: What are the four golden signals of monitoring?**\nA: Latency (response time), traffic (request rate), errors (failure rate), and saturation (resource utilization).`\n}; ","export const logging = {\n  id: 'logging',\n  title: 'Logging',\n  content: `# Logging\n\n## Definition\nLogging is the practice of recording events, errors, and information during application execution for debugging, monitoring, and auditing purposes.\n\n## Log Levels\n- **TRACE**: Finest-grained informational events\n- **DEBUG**: Detailed information for diagnosing problems\n- **INFO**: General information about application flow\n- **WARN**: Potentially harmful situations\n- **ERROR**: Error events that allow application to continue\n- **FATAL**: Severe errors that may cause application to terminate\n\n## Log Components\n- **Timestamp**: When the event occurred\n- **Level**: Severity of the log message\n- **Logger Name**: Source component or class\n- **Message**: Human-readable description\n- **Context**: Additional metadata (user ID, request ID)\n- **Stack Trace**: Error details for exceptions\n\n## Structured Logging\n- **JSON Format**: Machine-readable log format\n- **Key-Value Pairs**: Structured data fields\n- **Consistent Schema**: Standardized log structure\n- **Searchable**: Easy to query and analyze\n\n## Log Aggregation\n- **Centralized Logging**: Collect logs from multiple sources\n- **ELK Stack**: Elasticsearch, Logstash, Kibana\n- **Fluentd**: Log collection and forwarding\n- **Splunk**: Enterprise log management\n- **Cloud Solutions**: AWS CloudWatch, Google Cloud Logging\n\n## Best Practices\n- **Appropriate Log Levels**: Use correct severity levels\n- **Meaningful Messages**: Clear, actionable information\n- **Avoid Sensitive Data**: Don't log passwords, tokens\n- **Performance Impact**: Minimize logging overhead\n- **Log Rotation**: Manage log file sizes\n- **Correlation IDs**: Track requests across services\n\n## Distributed Tracing\n- **Trace ID**: Unique identifier for request flow\n- **Span ID**: Individual operation within trace\n- **Parent-Child Relationships**: Service call hierarchy\n- **Sampling**: Reduce trace volume for performance\n\n## Security Considerations\n- **Log Injection**: Sanitize user input in logs\n- **Access Control**: Restrict log access\n- **Retention Policies**: Define log storage duration\n- **Encryption**: Secure log transmission and storage\n\n## Common Logging Libraries\n- **Log4j**: Java logging framework\n- **Logback**: Java logging with SLF4J\n- **Winston**: Node.js logging library\n- **Python Logging**: Built-in Python logging\n- **Serilog**: .NET structured logging\n\n## Monitoring and Alerting\n- **Error Rate Monitoring**: Track error log frequency\n- **Log-based Alerts**: Trigger alerts on log patterns\n- **Anomaly Detection**: Identify unusual log patterns\n- **Dashboard Creation**: Visualize log metrics\n\n## Interview Questions\n**Q: What's the difference between logging and monitoring?**\nA: Logging records discrete events and messages, while monitoring continuously measures system metrics and performance indicators.`\n}; ","export const backup = {\n  id: 'backup',\n  title: 'Database Backup',\n  content: `# Database Backup\n\n## Definition\nDatabase backup is the process of creating copies of database data to protect against data loss and enable recovery.\n\n## Types of Backups\n- **Full Backup**: Complete copy of entire database\n- **Incremental Backup**: Only changes since last backup\n- **Differential Backup**: Changes since last full backup\n- **Transaction Log Backup**: Log file backups for point-in-time recovery\n\n## Backup Strategies\n- **Hot Backup**: Database remains online during backup\n- **Cold Backup**: Database offline during backup\n- **Warm Backup**: Read-only access during backup\n\n## Recovery Models\n- **Simple**: Minimal logging, no point-in-time recovery\n- **Full**: Complete logging, full recovery options\n- **Bulk-Logged**: Minimal logging for bulk operations\n\n## Best Practices\n- Regular backup schedules\n- Test restore procedures\n- Offsite storage\n- Encryption for sensitive data\n- Document recovery procedures\n\n## Interview Questions\n**Q: What's the difference between hot and cold backups?**\nA: Hot backups occur while the database is online and accessible, while cold backups require the database to be offline.`\n}; ","export const recovery = {\n  id: 'recovery',\n  title: 'Database Recovery',\n  content: `# Database Recovery\n\n## Definition\nDatabase recovery is the process of restoring a database to a correct state after a failure or corruption.\n\n## Types of Failures\n- **Transaction Failure**: Individual transaction errors\n- **System Failure**: Hardware/software crashes\n- **Media Failure**: Storage device failures\n- **Disaster**: Natural disasters, fire, theft\n\n## Recovery Techniques\n- **Rollback**: Undo incomplete transactions\n- **Roll-forward**: Redo committed transactions\n- **Point-in-Time Recovery**: Restore to specific timestamp\n- **Crash Recovery**: Automatic recovery after system failure\n\n## Recovery Models\n- **ARIES**: Algorithm for Recovery and Isolation Exploiting Semantics\n- **Write-Ahead Logging**: Log changes before applying them\n- **Checkpointing**: Periodic consistency points\n\n## Recovery Process\n1. Assess the damage\n2. Determine recovery strategy\n3. Restore from backup\n4. Apply transaction logs\n5. Verify data integrity\n\n## Interview Questions\n**Q: What is Write-Ahead Logging?**\nA: A technique where all changes are first written to a log before being applied to the database.`\n}; ","export const failoverStrategies = {\n  id: 'failover-strategies',\n  title: 'Failover Strategies',\n  content: `\n    <h2>Failover Strategies</h2>\n    <p>Failover is the process of switching to a redundant or standby system, server, or network upon the failure or abnormal termination of the currently active system. It's a critical component of high availability and disaster recovery planning.</p>\n\n    <h3>Types of Failover</h3>\n    \n    <h4>1. Cold Failover (Manual Failover)</h4>\n    <p>Requires manual intervention to switch to the backup system.</p>\n    \n    <ul>\n      <li><strong>Process:</strong> Manual detection and switching</li>\n      <li><strong>RTO:</strong> Hours to days</li>\n      <li><strong>RPO:</strong> Depends on backup frequency</li>\n      <li><strong>Cost:</strong> Lowest</li>\n      <li><strong>Complexity:</strong> Simplest</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Cold Failover Process\n1. System failure detected by monitoring\n2. Alert sent to operations team\n3. Team assesses the situation\n4. Decision made to failover\n5. Backup system manually started\n6. DNS records updated\n7. Traffic redirected\n8. Verification and testing\n\n// Time elapsed: 2-4 hours typically</code></pre>\n    </div>\n\n    <h4>2. Warm Failover (Standby)</h4>\n    <p>Backup systems are running but not actively serving traffic.</p>\n    \n    <ul>\n      <li><strong>Process:</strong> Semi-automatic switching</li>\n      <li><strong>RTO:</strong> Minutes to hours</li>\n      <li><strong>RPO:</strong> Minutes to hours</li>\n      <li><strong>Cost:</strong> Moderate</li>\n      <li><strong>Complexity:</strong> Moderate</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Warm Failover Configuration\n{\n  \"primary_site\": {\n    \"status\": \"active\",\n    \"servers\": [\"web1\", \"web2\", \"db1\"],\n    \"load\": \"100%\"\n  },\n  \"standby_site\": {\n    \"status\": \"standby\",\n    \"servers\": [\"web3\", \"db2\"],\n    \"load\": \"0%\",\n    \"sync_interval\": \"5 minutes\",\n    \"health_check\": \"every 30 seconds\"\n  },\n  \"failover_trigger\": {\n    \"type\": \"semi-automatic\",\n    \"conditions\": [\n      \"primary_site_down > 5 minutes\",\n      \"manual_approval_required\"\n    ]\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. Hot Failover (Active-Passive)</h4>\n    <p>Backup systems are fully synchronized and ready to take over immediately.</p>\n    \n    <ul>\n      <li><strong>Process:</strong> Automatic switching</li>\n      <li><strong>RTO:</strong> Seconds to minutes</li>\n      <li><strong>RPO:</strong> Near zero</li>\n      <li><strong>Cost:</strong> High</li>\n      <li><strong>Complexity:</strong> High</li>\n    </ul>\n\n    <h4>4. Active-Active (No Failover Needed)</h4>\n    <p>All systems actively serve traffic; failure of one doesn't require failover.</p>\n    \n    <ul>\n      <li><strong>Process:</strong> Automatic load redistribution</li>\n      <li><strong>RTO:</strong> Zero (no downtime)</li>\n      <li><strong>RPO:</strong> Zero</li>\n      <li><strong>Cost:</strong> Highest</li>\n      <li><strong>Complexity:</strong> Highest</li>\n    </ul>\n\n    <h3>Failover Components</h3>\n    \n    <h4>1. Health Monitoring</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Health Check Implementation\nclass HealthMonitor {\n  constructor(config) {\n    this.targets = config.targets;\n    this.interval = config.interval;\n    this.timeout = config.timeout;\n    this.threshold = config.failureThreshold;\n  }\n\n  async checkHealth(target) {\n    const checks = {\n      ping: await this.pingCheck(target),\n      http: await this.httpCheck(target),\n      database: await this.dbCheck(target),\n      custom: await this.customCheck(target)\n    };\n    \n    return {\n      healthy: Object.values(checks).every(c => c),\n      checks: checks,\n      timestamp: new Date()\n    };\n  }\n\n  async pingCheck(target) {\n    try {\n      const response = await ping(target.ip);\n      return response.time < this.timeout;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async httpCheck(target) {\n    try {\n      const response = await fetch(target.healthEndpoint);\n      return response.status === 200;\n    } catch (error) {\n      return false;\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h4>2. Failure Detection</h4>\n    <ul>\n      <li><strong>Heartbeat:</strong> Regular \"I'm alive\" signals</li>\n      <li><strong>Health Checks:</strong> Active probing</li>\n      <li><strong>Resource Monitoring:</strong> CPU, memory, disk</li>\n      <li><strong>Application Metrics:</strong> Response time, errors</li>\n      <li><strong>Network Connectivity:</strong> Ping, traceroute</li>\n    </ul>\n\n    <h4>3. Decision Making</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Failover Decision Logic\nclass FailoverDecisionEngine {\n  evaluateFailover(healthData) {\n    const decision = {\n      shouldFailover: false,\n      reason: null,\n      confidence: 0\n    };\n\n    // Check multiple failure conditions\n    if (healthData.consecutiveFailures >= 3) {\n      decision.shouldFailover = true;\n      decision.reason = \"Multiple consecutive failures\";\n      decision.confidence = 0.9;\n    }\n\n    if (healthData.responseTime > 5000) {\n      decision.shouldFailover = true;\n      decision.reason = \"Response time exceeded threshold\";\n      decision.confidence = 0.7;\n    }\n\n    if (healthData.errorRate > 0.5) {\n      decision.shouldFailover = true;\n      decision.reason = \"High error rate\";\n      decision.confidence = 0.8;\n    }\n\n    // Prevent flapping\n    if (this.recentFailovers() > 2) {\n      decision.shouldFailover = false;\n      decision.reason = \"Too many recent failovers\";\n    }\n\n    return decision;\n  }\n}</code></pre>\n    </div>\n\n    <h4>4. Traffic Switching</h4>\n    <ul>\n      <li><strong>DNS Failover:</strong> Update DNS records</li>\n      <li><strong>Load Balancer:</strong> Redirect traffic</li>\n      <li><strong>IP Failover:</strong> Virtual IP migration</li>\n      <li><strong>Application Level:</strong> Client-side failover</li>\n    </ul>\n\n    <h3>Failover Patterns</h3>\n    \n    <h4>1. Master-Slave Replication</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Master-Slave Failover\n┌─────────────┐     Replication    ┌─────────────┐\n│   Master    │ ─────────────────> │    Slave    │\n│  (Active)   │                    │  (Standby)  │\n└─────────────┘                    └─────────────┘\n       │                                   │\n       │ Failure                          │\n       ▼                                   ▼\n┌─────────────┐                    ┌─────────────┐\n│   Master    │                    │    Slave    │\n│   (Down)    │                    │  (Promoted) │\n└─────────────┘                    └─────────────┘\n\n// Configuration\n{\n  \"replication\": {\n    \"mode\": \"asynchronous\",\n    \"lag_threshold\": \"5 seconds\",\n    \"auto_failover\": true,\n    \"promotion_script\": \"/scripts/promote_slave.sh\"\n  }\n}</code></pre>\n    </div>\n\n    <h4>2. Multi-Master Replication</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Multi-Master Setup\n┌─────────────┐ <──────────> ┌─────────────┐\n│  Master 1   │              │  Master 2   │\n│  (Active)   │              │  (Active)   │\n└─────────────┘              └─────────────┘\n       │                            │\n       └──────────┬─────────────────┘\n                  │\n            Load Balancer\n                  │\n              Clients\n\n// No failover needed - automatic rerouting</code></pre>\n    </div>\n\n    <h4>3. Cascading Failover</h4>\n    <p>Multiple backup systems in priority order.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Cascading Failover Priority\n{\n  \"failover_chain\": [\n    {\n      \"priority\": 1,\n      \"site\": \"primary_datacenter\",\n      \"status\": \"active\"\n    },\n    {\n      \"priority\": 2,\n      \"site\": \"secondary_datacenter\",\n      \"status\": \"standby\"\n    },\n    {\n      \"priority\": 3,\n      \"site\": \"cloud_backup\",\n      \"status\": \"cold\"\n    },\n    {\n      \"priority\": 4,\n      \"site\": \"disaster_recovery\",\n      \"status\": \"cold\"\n    }\n  ]\n}</code></pre>\n    </div>\n\n    <h3>Implementation Strategies</h3>\n    \n    <h4>1. Database Failover</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// PostgreSQL Automatic Failover\n-- Primary server configuration\nprimary_conninfo = 'host=primary port=5432 user=replicator'\nrestore_command = 'cp /archive/%f %p'\nrecovery_target_timeline = 'latest'\n\n-- Standby server configuration\nstandby_mode = on\nprimary_conninfo = 'host=primary port=5432 user=replicator'\ntrigger_file = '/tmp/postgresql.trigger'\n\n-- Failover script\n#!/bin/bash\n# Check primary health\nif ! pg_isready -h primary; then\n  # Promote standby\n  touch /tmp/postgresql.trigger\n  \n  # Update application configuration\n  sed -i 's/primary/standby/g' /app/config/database.yml\n  \n  # Notify monitoring system\n  curl -X POST monitoring.example.com/api/failover\nfi</code></pre>\n    </div>\n\n    <h4>2. Application-Level Failover</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Circuit Breaker Pattern for Failover\nclass ServiceClient {\n  constructor() {\n    this.primary = 'https://api.primary.com';\n    this.secondary = 'https://api.secondary.com';\n    this.circuitBreaker = new CircuitBreaker({\n      timeout: 3000,\n      errorThreshold: 50,\n      resetTimeout: 30000\n    });\n  }\n\n  async makeRequest(endpoint, data) {\n    try {\n      // Try primary first\n      return await this.circuitBreaker.fire(\n        () => this.request(this.primary + endpoint, data)\n      );\n    } catch (error) {\n      console.log('Primary failed, trying secondary');\n      \n      // Failover to secondary\n      return await this.request(this.secondary + endpoint, data);\n    }\n  }\n\n  async request(url, data) {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      timeout: 3000\n    });\n    \n    if (!response.ok) {\n      throw new Error(\\`HTTP \\${response.status}\\`);\n    }\n    \n    return response.json();\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. DNS-Based Failover</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Route53 Health Check and Failover\n{\n  \"HealthCheck\": {\n    \"Type\": \"HTTPS\",\n    \"ResourcePath\": \"/health\",\n    \"FullyQualifiedDomainName\": \"primary.example.com\",\n    \"Port\": 443,\n    \"RequestInterval\": 30,\n    \"FailureThreshold\": 3\n  },\n  \"RecordSets\": [\n    {\n      \"Name\": \"api.example.com\",\n      \"Type\": \"A\",\n      \"SetIdentifier\": \"Primary\",\n      \"Failover\": \"PRIMARY\",\n      \"HealthCheckId\": \"health-check-primary\",\n      \"Value\": \"192.168.1.1\"\n    },\n    {\n      \"Name\": \"api.example.com\",\n      \"Type\": \"A\",\n      \"SetIdentifier\": \"Secondary\",\n      \"Failover\": \"SECONDARY\",\n      \"Value\": \"192.168.2.1\"\n    }\n  ]\n}</code></pre>\n    </div>\n\n    <h3>Testing Failover</h3>\n    \n    <h4>1. Planned Failover Tests</h4>\n    <ul>\n      <li><strong>Scheduled Maintenance:</strong> Test during low traffic</li>\n      <li><strong>Gradual Failover:</strong> Move traffic incrementally</li>\n      <li><strong>Rollback Plan:</strong> Quick recovery if issues</li>\n      <li><strong>Documentation:</strong> Record all steps</li>\n    </ul>\n\n    <h4>2. Chaos Engineering</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Chaos Monkey Configuration\n{\n  \"chaos_experiments\": [\n    {\n      \"name\": \"random_instance_termination\",\n      \"probability\": 0.1,\n      \"schedule\": \"business_hours\",\n      \"targets\": [\"web_tier\", \"app_tier\"]\n    },\n    {\n      \"name\": \"network_latency\",\n      \"latency_ms\": 1000,\n      \"probability\": 0.2,\n      \"duration\": \"5m\"\n    },\n    {\n      \"name\": \"database_connection_failure\",\n      \"probability\": 0.05,\n      \"duration\": \"30s\"\n    }\n  ]\n}</code></pre>\n    </div>\n\n    <h3>Monitoring and Alerting</h3>\n    \n    <h4>Key Metrics</h4>\n    <ul>\n      <li><strong>Failover Time:</strong> Time to complete switch</li>\n      <li><strong>Data Loss:</strong> Transactions lost during failover</li>\n      <li><strong>False Positives:</strong> Unnecessary failovers</li>\n      <li><strong>Success Rate:</strong> Successful vs failed failovers</li>\n      <li><strong>Recovery Time:</strong> Time to restore primary</li>\n    </ul>\n\n    <h4>Alert Configuration</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Alerting Rules\nalerts:\n  - name: FailoverInitiated\n    condition: failover_started == 1\n    severity: warning\n    notify:\n      - ops_team\n      - on_call_engineer\n    \n  - name: FailoverFailed\n    condition: failover_success == 0\n    severity: critical\n    notify:\n      - all_engineers\n      - management\n    escalation:\n      after: 5m\n      to: cto\n\n  - name: DataLossDuringFailover\n    condition: lost_transactions > 0\n    severity: high\n    notify:\n      - database_team\n      - ops_team</code></pre>\n    </div>\n\n    <h3>Best Practices</h3>\n    \n    <h4>1. Design Principles</h4>\n    <ul>\n      <li><strong>Simplicity:</strong> Complex failover = more failure points</li>\n      <li><strong>Automation:</strong> Minimize human intervention</li>\n      <li><strong>Testing:</strong> Regular failover drills</li>\n      <li><strong>Documentation:</strong> Clear runbooks</li>\n      <li><strong>Monitoring:</strong> Comprehensive visibility</li>\n    </ul>\n\n    <h4>2. Common Pitfalls</h4>\n    <ul>\n      <li><strong>Split Brain:</strong> Both systems think they're primary</li>\n      <li><strong>Cascading Failures:</strong> Failover causes more failures</li>\n      <li><strong>Data Inconsistency:</strong> Replication lag issues</li>\n      <li><strong>Flapping:</strong> Repeated failover/failback</li>\n      <li><strong>Resource Exhaustion:</strong> Backup can't handle load</li>\n    </ul>\n\n    <h4>3. Recovery Procedures</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Post-Failover Recovery Checklist\n1. Verify backup system stability\n2. Assess data consistency\n3. Check for data loss\n4. Update monitoring dashboards\n5. Notify stakeholders\n6. Begin root cause analysis\n7. Plan primary restoration\n8. Schedule post-mortem\n9. Update documentation\n10. Test failback procedure</code></pre>\n    </div>\n\n    <h3>Cost Considerations</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Strategy</th>\n          <th>Infrastructure Cost</th>\n          <th>Operational Cost</th>\n          <th>Data Loss Risk</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Cold Failover</td>\n          <td>Low</td>\n          <td>Low</td>\n          <td>High</td>\n        </tr>\n        <tr>\n          <td>Warm Failover</td>\n          <td>Medium</td>\n          <td>Medium</td>\n          <td>Medium</td>\n        </tr>\n        <tr>\n          <td>Hot Failover</td>\n          <td>High</td>\n          <td>High</td>\n          <td>Low</td>\n        </tr>\n        <tr>\n          <td>Active-Active</td>\n          <td>Highest</td>\n          <td>Highest</td>\n          <td>Lowest</td>\n        </tr>\n      </tbody>\n    </table>\n  `\n}; ","export const serverless = {\n  id: 'serverless',\n  title: 'Serverless Computing',\n  content: `# Serverless Computing\n\n## Definition\nServerless computing is a cloud execution model where the cloud provider manages server infrastructure, automatically scaling and charging only for actual usage.\n\n## Key Characteristics\n- **No Server Management**: Provider handles infrastructure\n- **Event-Driven**: Functions triggered by events\n- **Automatic Scaling**: Scale to zero and up automatically\n- **Pay-per-Execution**: Charged only for actual usage\n- **Stateless**: Functions don't maintain state between invocations\n\n## Function as a Service (FaaS)\n- **AWS Lambda**: Amazon's serverless platform\n- **Azure Functions**: Microsoft's serverless offering\n- **Google Cloud Functions**: Google's FaaS platform\n- **Cloudflare Workers**: Edge computing functions\n\n## Backend as a Service (BaaS)\n- **Firebase**: Google's mobile/web backend\n- **AWS Amplify**: Full-stack development platform\n- **Supabase**: Open-source Firebase alternative\n- **Auth0**: Authentication as a service\n\n## Event Sources\n- **HTTP Requests**: API Gateway triggers\n- **Database Changes**: DynamoDB streams\n- **File Uploads**: S3 bucket events\n- **Scheduled Events**: Cron-like triggers\n- **Message Queues**: SQS, SNS events\n\n## Benefits\n- **Cost Efficiency**: Pay only for execution time\n- **Automatic Scaling**: Handle traffic spikes automatically\n- **Reduced Operational Overhead**: No server management\n- **Faster Time to Market**: Focus on business logic\n- **High Availability**: Built-in redundancy\n\n## Limitations\n- **Cold Start**: Initial invocation latency\n- **Vendor Lock-in**: Platform-specific implementations\n- **Execution Time Limits**: Maximum function duration\n- **Memory Constraints**: Limited memory allocation\n- **Debugging Complexity**: Distributed debugging challenges\n\n## Use Cases\n- **API Backends**: REST API implementations\n- **Data Processing**: ETL pipelines, file processing\n- **Real-time Processing**: Stream processing, IoT data\n- **Scheduled Tasks**: Cron jobs, maintenance tasks\n- **Event Handling**: Webhook processing, notifications\n\n## Architecture Patterns\n- **Microservices**: Single-purpose functions\n- **Event-Driven**: Reactive architectures\n- **CQRS**: Command Query Responsibility Segregation\n- **Saga Pattern**: Distributed transaction management\n\n## Best Practices\n- **Stateless Design**: Don't rely on local state\n- **Connection Pooling**: Reuse database connections\n- **Error Handling**: Proper exception management\n- **Monitoring**: Comprehensive observability\n- **Security**: Principle of least privilege\n\n## Serverless Frameworks\n- **Serverless Framework**: Multi-cloud deployment\n- **AWS SAM**: AWS Serverless Application Model\n- **Terraform**: Infrastructure as code\n- **Pulumi**: Modern infrastructure as code\n\n## Interview Questions\n**Q: What is a cold start in serverless computing?**\nA: Cold start is the initial latency when a function is invoked for the first time or after being idle, as the provider needs to initialize the runtime environment.`\n}; ","export const edgeComputing = {\n  id: 'edge-computing',\n  title: 'Edge Computing',\n  content: `# Edge Computing\n\n## Definition\nEdge computing brings computation and data storage closer to the sources of data, reducing latency and bandwidth usage.\n\n## Key Concepts\n- **Edge Nodes**: Computing resources at network edge\n- **Fog Computing**: Distributed computing between edge and cloud\n- **Mobile Edge Computing (MEC)**: Edge computing for mobile networks\n- **Content Delivery Networks (CDN)**: Distributed content caching\n- **Internet of Things (IoT)**: Connected devices generating data\n\n## Architecture Components\n- **Edge Devices**: Sensors, smartphones, IoT devices\n- **Edge Gateways**: Local processing hubs\n- **Edge Servers**: Compute resources at network edge\n- **Cloud Backend**: Centralized processing and storage\n- **Network Infrastructure**: Connecting edge to cloud\n\n## Benefits\n- **Reduced Latency**: Process data closer to source\n- **Bandwidth Efficiency**: Reduce data transmission\n- **Improved Reliability**: Local processing capabilities\n- **Enhanced Security**: Data processing at edge\n- **Cost Optimization**: Reduce cloud computing costs\n\n## Use Cases\n- **Autonomous Vehicles**: Real-time decision making\n- **Smart Cities**: Traffic management, surveillance\n- **Industrial IoT**: Manufacturing process optimization\n- **Augmented Reality**: Low-latency AR experiences\n- **Healthcare**: Remote patient monitoring\n- **Retail**: Personalized shopping experiences\n\n## Edge Computing Platforms\n- **AWS Wavelength**: 5G edge computing\n- **Azure Stack Edge**: Microsoft's edge platform\n- **Google Distributed Cloud**: Google's edge solution\n- **Cloudflare Workers**: Edge computing platform\n- **Fastly Compute@Edge**: Edge computing service\n\n## Challenges\n- **Resource Constraints**: Limited computing power\n- **Management Complexity**: Distributed infrastructure\n- **Security**: Securing distributed nodes\n- **Connectivity**: Intermittent network connections\n- **Standardization**: Lack of common standards\n\n## Edge AI\n- **Machine Learning at Edge**: Local model inference\n- **Model Optimization**: Compressed models for edge\n- **Federated Learning**: Distributed model training\n- **Real-time Analytics**: Immediate data insights\n\n## 5G and Edge Computing\n- **Ultra-Low Latency**: Sub-millisecond response times\n- **Network Slicing**: Dedicated network resources\n- **Multi-Access Edge Computing**: Telecom edge computing\n\n## Data Management\n- **Data Filtering**: Process only relevant data\n- **Data Aggregation**: Summarize before sending to cloud\n- **Caching**: Store frequently accessed data locally\n- **Synchronization**: Coordinate between edge and cloud\n\n## Interview Questions\n**Q: How does edge computing differ from cloud computing?**\nA: Edge computing processes data closer to where it's generated for lower latency, while cloud computing centralizes processing in remote data centers.`\n}; ","export const containers = {\n  id: 'containers',\n  title: 'Containers',\n  content: `# Containers\n\n## Definition\nContainers are lightweight, portable units that package applications and their dependencies together for consistent deployment across environments.\n\n## Key Concepts\n- **Image**: Read-only template for creating containers\n- **Container**: Running instance of an image\n- **Registry**: Repository for storing images\n- **Dockerfile**: Instructions for building images\n- **Orchestration**: Managing multiple containers\n\n## Benefits\n- **Portability**: Run anywhere containers are supported\n- **Consistency**: Same environment across dev/test/prod\n- **Efficiency**: Lightweight compared to VMs\n- **Scalability**: Quick startup and shutdown\n- **Isolation**: Process and resource isolation\n\n## Container vs Virtual Machines\n- **Resource Usage**: Containers share OS kernel\n- **Startup Time**: Containers start faster\n- **Isolation**: VMs provide stronger isolation\n- **Overhead**: Containers have less overhead\n\n## Docker Basics\n\\`\\`\\`dockerfile\nFROM node:14\nWORKDIR /app\nCOPY package.json .\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD [\"npm\", \"start\"]\n\\`\\`\\`\n\n## Container Orchestration\n- **Docker Compose**: Multi-container applications\n- **Kubernetes**: Production-grade orchestration\n- **Docker Swarm**: Docker's native orchestration\n\n## Best Practices\n- Use official base images\n- Minimize image layers\n- Don't run as root\n- Use .dockerignore\n- Keep containers stateless\n\n## Interview Questions\n**Q: What are the advantages of containers over virtual machines?**\nA: Containers are more lightweight, start faster, and provide better resource utilization while maintaining application isolation.`\n}; ","export const tracing = {\n  id: 'tracing',\n  title: 'Distributed Tracing',\n  content: `# Distributed Tracing\n\n## Definition\nDistributed tracing tracks requests as they flow through multiple services in a distributed system, providing end-to-end visibility.\n\n## Key Concepts\n- **Trace**: Complete journey of a request through the system\n- **Span**: Individual operation within a trace\n- **Trace ID**: Unique identifier for the entire request\n- **Span ID**: Unique identifier for each operation\n- **Parent-Child Relationships**: Service call hierarchy\n\n## Span Attributes\n- **Operation Name**: What the span represents\n- **Start Time**: When operation began\n- **Duration**: How long operation took\n- **Tags**: Key-value metadata\n- **Logs**: Time-stamped events within span\n- **Status**: Success, error, or timeout\n\n## Trace Propagation\n- **Context Propagation**: Pass trace context between services\n- **HTTP Headers**: Carry trace IDs in requests\n- **Message Queues**: Propagate context through async messaging\n- **Database Calls**: Track database operations\n\n## Sampling Strategies\n- **Head-based Sampling**: Decision at trace start\n- **Tail-based Sampling**: Decision after trace completion\n- **Probabilistic**: Random percentage sampling\n- **Rate-based**: Fixed number of traces per second\n- **Adaptive**: Dynamic sampling based on conditions\n\n## Popular Tracing Systems\n- **Jaeger**: Open-source distributed tracing\n- **Zipkin**: Distributed tracing system\n- **AWS X-Ray**: Amazon's tracing service\n- **Google Cloud Trace**: Google's tracing solution\n- **Azure Application Insights**: Microsoft's APM\n\n## OpenTelemetry\n- **Unified Standard**: Vendor-neutral observability framework\n- **Auto-instrumentation**: Automatic trace generation\n- **Manual Instrumentation**: Custom span creation\n- **Multiple Backends**: Support for various tracing systems\n\n## Benefits\n- **Performance Debugging**: Identify bottlenecks\n- **Error Root Cause**: Trace error propagation\n- **Service Dependencies**: Understand service interactions\n- **Latency Analysis**: Measure request processing time\n- **Capacity Planning**: Identify resource constraints\n\n## Implementation Challenges\n- **Performance Overhead**: Tracing impact on application\n- **Sampling Decisions**: Balance detail vs performance\n- **Context Propagation**: Ensure complete trace coverage\n- **Storage Costs**: Managing trace data volume\n- **Complexity**: Distributed system instrumentation\n\n## Best Practices\n- **Meaningful Span Names**: Clear operation descriptions\n- **Appropriate Sampling**: Balance cost vs visibility\n- **Error Handling**: Capture and propagate errors\n- **Custom Attributes**: Add business context\n- **Performance Monitoring**: Track tracing overhead\n\n## Interview Questions\n**Q: How does distributed tracing help with microservices debugging?**\nA: It provides end-to-end visibility of request flow across services, helping identify bottlenecks, errors, and dependencies in complex distributed systems.`\n}; ","export const monitoringObservability = {\n  id: 'monitoring-observability',\n  title: 'Monitoring and Observability',\n  content: `\n    <h2>Monitoring and Observability</h2>\n    <p>Monitoring and observability are critical for maintaining healthy, reliable systems. While monitoring tells you when something is wrong, observability helps you understand why it's wrong and how to fix it.</p>\n\n    <h3>Monitoring vs Observability</h3>\n    \n    <h4>Monitoring</h4>\n    <ul>\n      <li><strong>Definition:</strong> Collecting, processing, and alerting on predefined metrics</li>\n      <li><strong>Focus:</strong> Known unknowns - problems you anticipate</li>\n      <li><strong>Questions:</strong> \"Is the system working?\" \"Are we meeting SLAs?\"</li>\n      <li><strong>Approach:</strong> Dashboard-driven, threshold-based alerts</li>\n    </ul>\n\n    <h4>Observability</h4>\n    <ul>\n      <li><strong>Definition:</strong> Understanding internal system state from external outputs</li>\n      <li><strong>Focus:</strong> Unknown unknowns - problems you didn't anticipate</li>\n      <li><strong>Questions:</strong> \"Why is this happening?\" \"What changed?\"</li>\n      <li><strong>Approach:</strong> Exploration-driven, high-cardinality data</li>\n    </ul>\n\n    <h3>Three Pillars of Observability</h3>\n    \n    <h4>1. Metrics</h4>\n    <p>Numeric measurements collected over time.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Types of Metrics\nCounter: Only increases (requests, errors)\nGauge: Can go up or down (CPU usage, memory)\nHistogram: Distribution of values (request latency)\nSummary: Similar to histogram with percentiles\n\n// Example Prometheus Metrics\nhttp_requests_total{method=\"GET\", status=\"200\"} 1234\ncpu_usage_percent{instance=\"web-01\"} 45.2\nrequest_duration_seconds{quantile=\"0.99\"} 0.128</code></pre>\n    </div>\n\n    <h4>2. Logs</h4>\n    <p>Timestamped records of discrete events.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Structured Logging Example\n{\n  \"timestamp\": \"2024-01-15T10:30:45.123Z\",\n  \"level\": \"ERROR\",\n  \"service\": \"payment-api\",\n  \"trace_id\": \"abc123\",\n  \"user_id\": \"user_456\",\n  \"message\": \"Payment processing failed\",\n  \"error\": {\n    \"type\": \"InvalidCardError\",\n    \"code\": \"CARD_DECLINED\",\n    \"provider\": \"stripe\"\n  },\n  \"context\": {\n    \"amount\": 99.99,\n    \"currency\": \"USD\",\n    \"attempt\": 2\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. Traces</h4>\n    <p>End-to-end journey of requests through distributed systems.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Distributed Trace Example\nTrace ID: 7b3a4c2d1e5f\n┌─────────────────────────────────────────┐\n│ Frontend (25ms)                         │\n└─────┬───────────────────────────────────┘\n      │\n      ├─┬─ API Gateway (5ms)\n      │ │\n      │ ├─┬─ Auth Service (15ms)\n      │ │ └─── Database (8ms)\n      │ │\n      │ └─┬─ Product Service (45ms)\n      │   ├─── Cache (2ms) [HIT]\n      │   └─── Database (40ms)\n      │\n      └─── Total: 95ms</code></pre>\n    </div>\n\n    <h3>Key Metrics to Monitor</h3>\n    \n    <h4>Golden Signals (Google SRE)</h4>\n    <ul>\n      <li><strong>Latency:</strong> Time to service requests</li>\n      <li><strong>Traffic:</strong> Demand on system (RPS)</li>\n      <li><strong>Errors:</strong> Rate of failed requests</li>\n      <li><strong>Saturation:</strong> Resource utilization</li>\n    </ul>\n\n    <h4>RED Method</h4>\n    <ul>\n      <li><strong>Rate:</strong> Requests per second</li>\n      <li><strong>Errors:</strong> Failed requests per second</li>\n      <li><strong>Duration:</strong> Time per request</li>\n    </ul>\n\n    <h4>USE Method</h4>\n    <ul>\n      <li><strong>Utilization:</strong> % of resource busy</li>\n      <li><strong>Saturation:</strong> Queue length</li>\n      <li><strong>Errors:</strong> Error events</li>\n    </ul>\n\n    <h3>Monitoring Tools and Platforms</h3>\n    \n    <h4>Metrics Collection</h4>\n    <ul>\n      <li><strong>Prometheus:</strong> Open-source, pull-based metrics</li>\n      <li><strong>Graphite:</strong> Time-series database</li>\n      <li><strong>InfluxDB:</strong> Purpose-built for metrics</li>\n      <li><strong>CloudWatch:</strong> AWS native monitoring</li>\n      <li><strong>Datadog:</strong> SaaS monitoring platform</li>\n    </ul>\n\n    <h4>Log Management</h4>\n    <ul>\n      <li><strong>ELK Stack:</strong> Elasticsearch, Logstash, Kibana</li>\n      <li><strong>Splunk:</strong> Enterprise log analysis</li>\n      <li><strong>Fluentd:</strong> Unified logging layer</li>\n      <li><strong>Loki:</strong> Prometheus-like for logs</li>\n      <li><strong>CloudWatch Logs:</strong> AWS log management</li>\n    </ul>\n\n    <h4>Distributed Tracing</h4>\n    <ul>\n      <li><strong>Jaeger:</strong> Uber's distributed tracing</li>\n      <li><strong>Zipkin:</strong> Twitter's tracing system</li>\n      <li><strong>AWS X-Ray:</strong> AWS native tracing</li>\n      <li><strong>Google Cloud Trace:</strong> GCP tracing</li>\n      <li><strong>Datadog APM:</strong> Application performance monitoring</li>\n    </ul>\n\n    <h3>Implementation Best Practices</h3>\n    \n    <h4>Instrumentation</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// OpenTelemetry Example\nconst { MeterProvider } = require('@opentelemetry/sdk-metrics');\nconst { PrometheusExporter } = require('@opentelemetry/exporter-prometheus');\n\n// Initialize metrics\nconst meterProvider = new MeterProvider({\n  exporter: new PrometheusExporter({ port: 9090 }),\n  interval: 1000,\n});\n\n// Create metrics\nconst meter = meterProvider.getMeter('my-service');\nconst requestCounter = meter.createCounter('http_requests', {\n  description: 'Count of HTTP requests',\n});\n\nconst latencyHistogram = meter.createHistogram('http_latency', {\n  description: 'HTTP request latency',\n  unit: 'ms',\n});\n\n// Use in application\napp.use((req, res, next) => {\n  const start = Date.now();\n  \n  res.on('finish', () => {\n    const labels = {\n      method: req.method,\n      route: req.route?.path || 'unknown',\n      status: res.statusCode,\n    };\n    \n    requestCounter.add(1, labels);\n    latencyHistogram.record(Date.now() - start, labels);\n  });\n  \n  next();\n});</code></pre>\n    </div>\n\n    <h4>Structured Logging</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Winston Logger Configuration\nconst winston = require('winston');\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: {\n    service: 'user-service',\n    version: process.env.VERSION,\n  },\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'error.log', level: 'error' }),\n  ],\n});\n\n// Contextual logging\nlogger.info('User login', {\n  userId: user.id,\n  email: user.email,\n  ip: req.ip,\n  userAgent: req.headers['user-agent'],\n});</code></pre>\n    </div>\n\n    <h3>Alerting Strategies</h3>\n    \n    <h4>Alert Design Principles</h4>\n    <ul>\n      <li><strong>Actionable:</strong> Every alert should have a clear action</li>\n      <li><strong>Urgent:</strong> Only alert on issues needing immediate attention</li>\n      <li><strong>Contextual:</strong> Include relevant information for debugging</li>\n      <li><strong>Tested:</strong> Regularly verify alerts work correctly</li>\n    </ul>\n\n    <h4>Alert Fatigue Prevention</h4>\n    <ul>\n      <li><strong>Symptom-based:</strong> Alert on user impact, not every anomaly</li>\n      <li><strong>Deduplication:</strong> Group related alerts</li>\n      <li><strong>Escalation:</strong> Route to appropriate on-call</li>\n      <li><strong>Self-healing:</strong> Automate common fixes</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Prometheus Alert Rules\ngroups:\n  - name: api_alerts\n    rules:\n    - alert: HighErrorRate\n      expr: |\n        rate(http_requests_total{status=~\"5..\"}[5m]) \n        / rate(http_requests_total[5m]) > 0.05\n      for: 5m\n      labels:\n        severity: critical\n        team: platform\n      annotations:\n        summary: \"High error rate on {{ $labels.instance }}\"\n        description: \"Error rate is {{ $value | humanizePercentage }}\"\n        runbook: \"https://wiki.company.com/runbooks/high-error-rate\"\n        \n    - alert: HighLatency\n      expr: |\n        histogram_quantile(0.95, \n          rate(http_request_duration_seconds_bucket[5m])\n        ) > 1.0\n      for: 10m\n      labels:\n        severity: warning</code></pre>\n    </div>\n\n    <h3>Dashboards and Visualization</h3>\n    \n    <h4>Dashboard Best Practices</h4>\n    <ul>\n      <li><strong>Purpose-driven:</strong> Each dashboard serves specific audience</li>\n      <li><strong>Information hierarchy:</strong> Most important metrics prominent</li>\n      <li><strong>Time consistency:</strong> All panels show same time range</li>\n      <li><strong>Annotations:</strong> Mark deployments, incidents</li>\n      <li><strong>Mobile-friendly:</strong> Viewable on-call</li>\n    </ul>\n\n    <h4>Types of Dashboards</h4>\n    <ul>\n      <li><strong>Executive:</strong> Business KPIs, SLA compliance</li>\n      <li><strong>Service:</strong> Golden signals, dependencies</li>\n      <li><strong>Infrastructure:</strong> Resource utilization, capacity</li>\n      <li><strong>Debug:</strong> Detailed metrics for troubleshooting</li>\n    </ul>\n\n    <h3>SLIs, SLOs, and Error Budgets</h3>\n    \n    <h4>Service Level Indicators (SLIs)</h4>\n    <p>Quantitative measure of service behavior.</p>\n    <ul>\n      <li><strong>Availability:</strong> % of successful requests</li>\n      <li><strong>Latency:</strong> Request duration percentiles</li>\n      <li><strong>Throughput:</strong> Requests per second</li>\n      <li><strong>Quality:</strong> Data correctness, freshness</li>\n    </ul>\n\n    <h4>Service Level Objectives (SLOs)</h4>\n    <p>Target values for SLIs.</p>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// SLO Examples\nAvailability: 99.9% of requests succeed (43.2 min/month downtime)\nLatency: 95% of requests complete in < 200ms\nThroughput: System handles 10,000 RPS\n\n// Multi-window SLOs\n- 99.9% availability over 30 days\n- 99.95% availability over 7 days\n- 99.99% availability over 1 day</code></pre>\n    </div>\n\n    <h4>Error Budgets</h4>\n    <p>Allowable unreliability (100% - SLO).</p>\n    <ul>\n      <li><strong>Purpose:</strong> Balance reliability vs feature velocity</li>\n      <li><strong>Usage:</strong> Stop releases when budget exhausted</li>\n      <li><strong>Calculation:</strong> (1 - SLO) × time period</li>\n    </ul>\n\n    <h3>Observability in Microservices</h3>\n    \n    <h4>Correlation and Context</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Request Context Propagation\nconst { trace, context } = require('@opentelemetry/api');\n\n// Middleware to propagate context\napp.use((req, res, next) => {\n  const span = trace.getActiveSpan();\n  \n  // Extract trace context from headers\n  const traceId = req.headers['x-trace-id'] || generateTraceId();\n  const spanId = generateSpanId();\n  \n  // Set context for logging\n  req.context = {\n    traceId,\n    spanId,\n    userId: req.user?.id,\n    sessionId: req.session?.id,\n  };\n  \n  // Add to response headers\n  res.setHeader('x-trace-id', traceId);\n  \n  next();\n});</code></pre>\n    </div>\n\n    <h4>Service Mesh Observability</h4>\n    <ul>\n      <li><strong>Automatic instrumentation:</strong> Proxy-level metrics</li>\n      <li><strong>Traffic routing:</strong> A/B testing, canary metrics</li>\n      <li><strong>Security:</strong> mTLS verification metrics</li>\n      <li><strong>Examples:</strong> Istio, Linkerd, Consul Connect</li>\n    </ul>\n\n    <h3>Performance and Cost Optimization</h3>\n    \n    <h4>Data Retention Strategies</h4>\n    <ul>\n      <li><strong>Hot storage:</strong> Recent data (1-7 days) - fast queries</li>\n      <li><strong>Warm storage:</strong> Medium-term (1-3 months) - slower</li>\n      <li><strong>Cold storage:</strong> Long-term archive - cheapest</li>\n      <li><strong>Sampling:</strong> Keep subset of high-volume data</li>\n      <li><strong>Aggregation:</strong> Roll up old data to summaries</li>\n    </ul>\n\n    <h4>Query Optimization</h4>\n    <ul>\n      <li><strong>Indexing:</strong> Proper labels and tags</li>\n      <li><strong>Time ranges:</strong> Limit query scope</li>\n      <li><strong>Cardinality:</strong> Control label combinations</li>\n      <li><strong>Caching:</strong> Cache expensive queries</li>\n    </ul>\n\n    <h3>Incident Response Integration</h3>\n    \n    <h4>Automated Workflows</h4>\n    <ul>\n      <li><strong>Alert → Ticket:</strong> Create incident tickets</li>\n      <li><strong>Runbook links:</strong> Context-aware documentation</li>\n      <li><strong>Auto-remediation:</strong> Trigger healing actions</li>\n      <li><strong>Stakeholder notification:</strong> Status page updates</li>\n    </ul>\n\n    <h4>Post-Incident Analysis</h4>\n    <ul>\n      <li><strong>Timeline reconstruction:</strong> Correlate all signals</li>\n      <li><strong>Root cause analysis:</strong> Trace to origin</li>\n      <li><strong>Impact assessment:</strong> Affected users/services</li>\n      <li><strong>Prevention:</strong> Add monitoring for gaps</li>\n    </ul>\n  `\n}; ","export const retryPattern = {\n  id: 'retry-pattern',\n  title: 'Retry Pattern',\n  content: `# Retry Pattern\n\n## Definition\nThe Retry pattern automatically retries failed operations with configurable delays and limits to handle transient failures.\n\n## Types of Retries\n- **Immediate Retry**: Retry immediately without delay\n- **Fixed Delay**: Constant wait time between retries\n- **Exponential Backoff**: Increasing delay between retries\n- **Linear Backoff**: Linearly increasing delay\n- **Random Jitter**: Add randomness to prevent thundering herd\n\n## Key Parameters\n- **Max Retry Attempts**: Maximum number of retries\n- **Initial Delay**: First retry delay\n- **Backoff Multiplier**: Delay increase factor\n- **Max Delay**: Maximum delay between retries\n- **Jitter**: Random variation in delay\n\n## Exponential Backoff Formula\n\\`\\`\\`\ndelay = initial_delay * (multiplier ^ attempt) + jitter\n\\`\\`\\`\n\n## When to Use Retries\n- **Transient Failures**: Network timeouts, temporary unavailability\n- **Rate Limiting**: API quota exceeded\n- **Resource Contention**: Database lock timeouts\n- **Infrastructure Issues**: Temporary service outages\n\n## When NOT to Use Retries\n- **Authentication Failures**: Invalid credentials\n- **Authorization Errors**: Permission denied\n- **Validation Errors**: Bad request data\n- **Not Found Errors**: Resource doesn't exist\n\n## Implementation Considerations\n- **Idempotency**: Ensure operations can be safely retried\n- **Timeout**: Set appropriate timeout for each attempt\n- **Circuit Breaker**: Combine with circuit breaker pattern\n- **Monitoring**: Track retry attempts and success rates\n\n## Best Practices\n- **Exponential Backoff with Jitter**: Prevent thundering herd\n- **Maximum Retry Limit**: Avoid infinite retries\n- **Idempotent Operations**: Safe to retry multiple times\n- **Proper Error Classification**: Only retry transient errors\n- **Monitoring and Alerting**: Track retry patterns\n\n## Common Libraries\n- **Polly**: .NET resilience library\n- **Tenacity**: Python retry library\n- **Retrying**: Python decorator for retries\n- **Resilience4j**: Java resilience patterns\n\n## Related Patterns\n- **Circuit Breaker**: Stop retries when service is down\n- **Timeout Pattern**: Limit time spent on retries\n- **Bulkhead Pattern**: Isolate retry resources\n\n## Interview Questions\n**Q: Why is jitter important in retry patterns?**\nA: Jitter prevents the thundering herd problem where multiple clients retry simultaneously, potentially overwhelming the recovering service.`\n}; ","export const dataStructures = {\n  id: 'data-structures',\n  title: 'Data Structures',\n  content: `# Data Structures\n\n## Definition\nData structures are specialized formats for organizing, storing, and manipulating data efficiently in computer programs.\n\n## Linear Data Structures\n- **Array**: Fixed-size sequential collection\n- **Linked List**: Dynamic sequential collection with pointers\n- **Stack**: Last-In-First-Out (LIFO) structure\n- **Queue**: First-In-First-Out (FIFO) structure\n- **Deque**: Double-ended queue\n\n## Non-Linear Data Structures\n- **Tree**: Hierarchical structure with nodes\n- **Graph**: Nodes connected by edges\n- **Heap**: Complete binary tree with heap property\n- **Trie**: Prefix tree for string operations\n\n## Hash-Based Structures\n- **Hash Table**: Key-value pairs with hash function\n- **Hash Set**: Unique elements using hashing\n- **Bloom Filter**: Probabilistic membership testing\n\n## Tree Types\n- **Binary Tree**: Each node has at most two children\n- **Binary Search Tree**: Ordered binary tree\n- **AVL Tree**: Self-balancing binary search tree\n- **Red-Black Tree**: Self-balancing binary search tree\n- **B-Tree**: Multi-way tree for databases\n\n## Time Complexity (Big O)\n- **Access**: O(1) for arrays, O(n) for linked lists\n- **Search**: O(log n) for balanced trees, O(n) for linear\n- **Insertion**: O(1) for stacks/queues, O(log n) for balanced trees\n- **Deletion**: Similar to insertion complexity\n\n## Space Complexity\n- **Arrays**: O(n) contiguous memory\n- **Linked Lists**: O(n) with pointer overhead\n- **Trees**: O(n) with structure overhead\n- **Hash Tables**: O(n) with load factor considerations\n\n## Use Cases\n- **Arrays**: Random access, mathematical operations\n- **Linked Lists**: Dynamic size, frequent insertions/deletions\n- **Stacks**: Function calls, expression evaluation\n- **Queues**: Task scheduling, breadth-first search\n- **Trees**: Hierarchical data, searching, sorting\n- **Hash Tables**: Fast lookups, caching\n\n## Implementation Considerations\n- **Memory Usage**: Space efficiency\n- **Cache Performance**: Locality of reference\n- **Thread Safety**: Concurrent access\n- **Garbage Collection**: Memory management\n\n## Interview Questions\n**Q: When would you use a linked list over an array?**\nA: When you need frequent insertions/deletions at arbitrary positions and don't need random access to elements.`\n}; ","export const algorithms = {\n  id: 'algorithms',\n  title: 'Sorting & Searching Algorithms',\n  content: `\n    <h2>Sorting & Searching Algorithms</h2>\n    <p>Sorting and searching are fundamental algorithmic problems. Understanding different approaches, their time complexities, and trade-offs is essential for efficient problem-solving.</p>\n\n    <h3>Sorting Algorithms</h3>\n\n    <h4>Bubble Sort</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(n²) average and worst case, O(n) best case</li>\n      <li><strong>Space Complexity:</strong> O(1)</li>\n      <li><strong>Stable:</strong> Yes</li>\n      <li><strong>In-place:</strong> Yes</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Bubble Sort - repeatedly swaps adjacent elements if they're in wrong order\nfunction bubbleSort(arr) {\n  const n = arr.length;\n  let swapped;\n  \n  for (let i = 0; i < n - 1; i++) {\n    swapped = false;\n    \n    // Last i elements are already sorted\n    for (let j = 0; j < n - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // Swap elements\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n        swapped = true;\n      }\n    }\n    \n    // If no swapping occurred, array is sorted\n    if (!swapped) break;\n  }\n  \n  return arr;\n}\n\n// Optimized version with early termination\nfunction optimizedBubbleSort(arr) {\n  let n = arr.length;\n  \n  while (n > 1) {\n    let newN = 0;\n    \n    for (let i = 1; i < n; i++) {\n      if (arr[i - 1] > arr[i]) {\n        [arr[i - 1], arr[i]] = [arr[i], arr[i - 1]];\n        newN = i;\n      }\n    }\n    \n    n = newN;\n  }\n  \n  return arr;\n}</code></pre>\n    </div>\n\n    <h4>Quick Sort</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(n log n) average, O(n²) worst case</li>\n      <li><strong>Space Complexity:</strong> O(log n) average, O(n) worst case</li>\n      <li><strong>Stable:</strong> No (can be made stable with modifications)</li>\n      <li><strong>In-place:</strong> Yes</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Quick Sort - divide and conquer with partitioning\nfunction quickSort(arr, low = 0, high = arr.length - 1) {\n  if (low < high) {\n    // Partition the array and get pivot index\n    const pivotIndex = partition(arr, low, high);\n    \n    // Recursively sort elements before and after partition\n    quickSort(arr, low, pivotIndex - 1);\n    quickSort(arr, pivotIndex + 1, high);\n  }\n  \n  return arr;\n}\n\n// Lomuto partition scheme\nfunction partition(arr, low, high) {\n  // Choose rightmost element as pivot\n  const pivot = arr[high];\n  let i = low - 1; // Index of smaller element\n  \n  for (let j = low; j < high; j++) {\n    // If current element is smaller than or equal to pivot\n    if (arr[j] <= pivot) {\n      i++;\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n  }\n  \n  // Place pivot in correct position\n  [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\n  return i + 1;\n}\n\n// Hoare partition scheme (alternative)\nfunction hoarePartition(arr, low, high) {\n  const pivot = arr[low];\n  let i = low - 1;\n  let j = high + 1;\n  \n  while (true) {\n    do {\n      i++;\n    } while (arr[i] < pivot);\n    \n    do {\n      j--;\n    } while (arr[j] > pivot);\n    \n    if (i >= j) {\n      return j;\n    }\n    \n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\n\n// Randomized Quick Sort (better average performance)\nfunction randomizedQuickSort(arr, low = 0, high = arr.length - 1) {\n  if (low < high) {\n    // Randomly choose pivot\n    const randomIndex = low + Math.floor(Math.random() * (high - low + 1));\n    [arr[randomIndex], arr[high]] = [arr[high], arr[randomIndex]];\n    \n    const pivotIndex = partition(arr, low, high);\n    randomizedQuickSort(arr, low, pivotIndex - 1);\n    randomizedQuickSort(arr, pivotIndex + 1, high);\n  }\n  \n  return arr;\n}</code></pre>\n    </div>\n\n    <h4>Merge Sort</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(n log n) all cases</li>\n      <li><strong>Space Complexity:</strong> O(n)</li>\n      <li><strong>Stable:</strong> Yes</li>\n      <li><strong>In-place:</strong> No</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Merge Sort - divide and conquer with merging\nfunction mergeSort(arr) {\n  if (arr.length <= 1) {\n    return arr;\n  }\n  \n  // Divide array into two halves\n  const mid = Math.floor(arr.length / 2);\n  const left = arr.slice(0, mid);\n  const right = arr.slice(mid);\n  \n  // Recursively sort both halves and merge\n  return merge(mergeSort(left), mergeSort(right));\n}\n\nfunction merge(left, right) {\n  const result = [];\n  let leftIndex = 0;\n  let rightIndex = 0;\n  \n  // Merge elements in sorted order\n  while (leftIndex < left.length && rightIndex < right.length) {\n    if (left[leftIndex] <= right[rightIndex]) {\n      result.push(left[leftIndex]);\n      leftIndex++;\n    } else {\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n  }\n  \n  // Add remaining elements\n  while (leftIndex < left.length) {\n    result.push(left[leftIndex]);\n    leftIndex++;\n  }\n  \n  while (rightIndex < right.length) {\n    result.push(right[rightIndex]);\n    rightIndex++;\n  }\n  \n  return result;\n}\n\n// In-place merge sort (more complex but O(1) extra space)\nfunction inPlaceMergeSort(arr, start = 0, end = arr.length - 1) {\n  if (start < end) {\n    const mid = Math.floor((start + end) / 2);\n    \n    inPlaceMergeSort(arr, start, mid);\n    inPlaceMergeSort(arr, mid + 1, end);\n    inPlaceMerge(arr, start, mid, end);\n  }\n  \n  return arr;\n}\n\nfunction inPlaceMerge(arr, start, mid, end) {\n  let start2 = mid + 1;\n  \n  // If the direct merge is already sorted\n  if (arr[mid] <= arr[start2]) {\n    return;\n  }\n  \n  // Two pointers to maintain start of both arrays to merge\n  while (start <= mid && start2 <= end) {\n    // If element 1 is in right place\n    if (arr[start] <= arr[start2]) {\n      start++;\n    } else {\n      const value = arr[start2];\n      let index = start2;\n      \n      // Shift all elements between element 1 and element 2, right by 1\n      while (index !== start) {\n        arr[index] = arr[index - 1];\n        index--;\n      }\n      arr[start] = value;\n      \n      // Update all pointers\n      start++;\n      mid++;\n      start2++;\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h4>Heap Sort</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(n log n) all cases</li>\n      <li><strong>Space Complexity:</strong> O(1)</li>\n      <li><strong>Stable:</strong> No</li>\n      <li><strong>In-place:</strong> Yes</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Heap Sort - uses binary heap data structure\nfunction heapSort(arr) {\n  const n = arr.length;\n  \n  // Build max heap\n  for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n    heapify(arr, n, i);\n  }\n  \n  // Extract elements from heap one by one\n  for (let i = n - 1; i > 0; i--) {\n    // Move current root to end\n    [arr[0], arr[i]] = [arr[i], arr[0]];\n    \n    // Call heapify on the reduced heap\n    heapify(arr, i, 0);\n  }\n  \n  return arr;\n}\n\n// Heapify a subtree rooted with node i\nfunction heapify(arr, n, i) {\n  let largest = i; // Initialize largest as root\n  const left = 2 * i + 1; // Left child\n  const right = 2 * i + 2; // Right child\n  \n  // If left child is larger than root\n  if (left < n && arr[left] > arr[largest]) {\n    largest = left;\n  }\n  \n  // If right child is larger than largest so far\n  if (right < n && arr[right] > arr[largest]) {\n    largest = right;\n  }\n  \n  // If largest is not root\n  if (largest !== i) {\n    [arr[i], arr[largest]] = [arr[largest], arr[i]];\n    \n    // Recursively heapify the affected sub-tree\n    heapify(arr, n, largest);\n  }\n}</code></pre>\n    </div>\n\n    <h3>Searching Algorithms</h3>\n\n    <h4>Linear Search</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(n)</li>\n      <li><strong>Space Complexity:</strong> O(1)</li>\n      <li><strong>Works on:</strong> Sorted and unsorted arrays</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Linear Search - check each element sequentially\nfunction linearSearch(arr, target) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === target) {\n      return i; // Return index if found\n    }\n  }\n  return -1; // Return -1 if not found\n}\n\n// Linear search with early termination for sorted arrays\nfunction linearSearchSorted(arr, target) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === target) {\n      return i;\n    }\n    if (arr[i] > target) {\n      return -1; // Target cannot be in remaining elements\n    }\n  }\n  return -1;\n}\n\n// Find all occurrences\nfunction linearSearchAll(arr, target) {\n  const indices = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === target) {\n      indices.push(i);\n    }\n  }\n  return indices;\n}</code></pre>\n    </div>\n\n    <h4>Binary Search</h4>\n    <ul>\n      <li><strong>Time Complexity:</strong> O(log n)</li>\n      <li><strong>Space Complexity:</strong> O(1) iterative, O(log n) recursive</li>\n      <li><strong>Prerequisite:</strong> Array must be sorted</li>\n    </ul>\n\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Binary Search - iterative approach\nfunction binarySearch(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n  \n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    \n    if (arr[mid] === target) {\n      return mid;\n    } else if (arr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  \n  return -1;\n}\n\n// Binary Search - recursive approach\nfunction binarySearchRecursive(arr, target, left = 0, right = arr.length - 1) {\n  if (left > right) {\n    return -1;\n  }\n  \n  const mid = Math.floor((left + right) / 2);\n  \n  if (arr[mid] === target) {\n    return mid;\n  } else if (arr[mid] < target) {\n    return binarySearchRecursive(arr, target, mid + 1, right);\n  } else {\n    return binarySearchRecursive(arr, target, left, mid - 1);\n  }\n}\n\n// Find first occurrence of target\nfunction binarySearchFirst(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n  let result = -1;\n  \n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    \n    if (arr[mid] === target) {\n      result = mid;\n      right = mid - 1; // Continue searching in left half\n    } else if (arr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  \n  return result;\n}\n\n// Find last occurrence of target\nfunction binarySearchLast(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n  let result = -1;\n  \n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    \n    if (arr[mid] === target) {\n      result = mid;\n      left = mid + 1; // Continue searching in right half\n    } else if (arr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  \n  return result;\n}\n\n// Find insertion point for target to maintain sorted order\nfunction binarySearchInsertionPoint(arr, target) {\n  let left = 0;\n  let right = arr.length;\n  \n  while (left < right) {\n    const mid = Math.floor((left + right) / 2);\n    \n    if (arr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid;\n    }\n  }\n  \n  return left;\n}</code></pre>\n    </div>\n\n    <h3>Advanced Searching</h3>\n\n    <h4>Ternary Search</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Ternary Search - divides array into three parts\nfunction ternarySearch(arr, target, left = 0, right = arr.length - 1) {\n  if (left > right) {\n    return -1;\n  }\n  \n  // Divide array into three parts\n  const mid1 = left + Math.floor((right - left) / 3);\n  const mid2 = right - Math.floor((right - left) / 3);\n  \n  if (arr[mid1] === target) {\n    return mid1;\n  }\n  if (arr[mid2] === target) {\n    return mid2;\n  }\n  \n  // Determine which part to search\n  if (target < arr[mid1]) {\n    return ternarySearch(arr, target, left, mid1 - 1);\n  } else if (target > arr[mid2]) {\n    return ternarySearch(arr, target, mid2 + 1, right);\n  } else {\n    return ternarySearch(arr, target, mid1 + 1, mid2 - 1);\n  }\n}</code></pre>\n    </div>\n\n    <h4>Exponential Search</h4>\n    <div class=\"code-block\">\n      <span class=\"code-label\">CODE</span>\n      <pre><code>// Exponential Search - find range then binary search\nfunction exponentialSearch(arr, target) {\n  const n = arr.length;\n  \n  // If target is at first position\n  if (arr[0] === target) {\n    return 0;\n  }\n  \n  // Find range for binary search by repeated doubling\n  let i = 1;\n  while (i < n && arr[i] <= target) {\n    i *= 2;\n  }\n  \n  // Perform binary search in found range\n  return binarySearch(\n    arr.slice(Math.floor(i / 2), Math.min(i, n)),\n    target\n  ) + Math.floor(i / 2);\n}</code></pre>\n    </div>\n\n    <h3>Algorithm Comparison</h3>\n\n    <table>\n      <thead>\n        <tr>\n          <th>Algorithm</th>\n          <th>Best Case</th>\n          <th>Average Case</th>\n          <th>Worst Case</th>\n          <th>Space</th>\n          <th>Stable</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Bubble Sort</strong></td>\n          <td>O(n)</td>\n          <td>O(n²)</td>\n          <td>O(n²)</td>\n          <td>O(1)</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>Quick Sort</strong></td>\n          <td>O(n log n)</td>\n          <td>O(n log n)</td>\n          <td>O(n²)</td>\n          <td>O(log n)</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>Merge Sort</strong></td>\n          <td>O(n log n)</td>\n          <td>O(n log n)</td>\n          <td>O(n log n)</td>\n          <td>O(n)</td>\n          <td>Yes</td>\n        </tr>\n        <tr>\n          <td><strong>Heap Sort</strong></td>\n          <td>O(n log n)</td>\n          <td>O(n log n)</td>\n          <td>O(n log n)</td>\n          <td>O(1)</td>\n          <td>No</td>\n        </tr>\n        <tr>\n          <td><strong>Linear Search</strong></td>\n          <td>O(1)</td>\n          <td>O(n)</td>\n          <td>O(n)</td>\n          <td>O(1)</td>\n          <td>N/A</td>\n        </tr>\n        <tr>\n          <td><strong>Binary Search</strong></td>\n          <td>O(1)</td>\n          <td>O(log n)</td>\n          <td>O(log n)</td>\n          <td>O(1)</td>\n          <td>N/A</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>When to Use Which Algorithm</h3>\n\n    <h4>Sorting Algorithm Selection</h4>\n    <ul>\n      <li><strong>Quick Sort:</strong> General purpose, good average performance</li>\n      <li><strong>Merge Sort:</strong> When stability is required, guaranteed O(n log n)</li>\n      <li><strong>Heap Sort:</strong> When O(1) space is critical</li>\n      <li><strong>Bubble Sort:</strong> Educational purposes, very small datasets</li>\n    </ul>\n\n    <h4>Searching Algorithm Selection</h4>\n    <ul>\n      <li><strong>Binary Search:</strong> Sorted arrays, O(log n) performance needed</li>\n      <li><strong>Linear Search:</strong> Unsorted arrays, small datasets</li>\n      <li><strong>Exponential Search:</strong> Unbounded/infinite arrays</li>\n    </ul>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>Algorithm choice depends on data characteristics, performance requirements, and constraints. Understanding trade-offs between time, space, and stability helps in making optimal decisions.</p>\n    </div>\n  `\n}; ","export const indexing = {\n  id: 'indexing',\n  title: 'Database Indexing',\n  content: `# Database Indexing\n\n## Definition\nDatabase indexing is a data structure technique used to quickly locate and access data in a database table.\n\n## Types of Indexes\n- **Primary Index**: Based on primary key\n- **Secondary Index**: On non-primary key columns\n- **Clustered Index**: Data physically ordered\n- **Non-Clustered Index**: Logical ordering with pointers\n- **Composite Index**: Multiple columns\n- **Unique Index**: Ensures uniqueness\n\n## Index Structures\n- **B-Tree**: Balanced tree structure\n- **Hash Index**: Hash table for equality searches\n- **Bitmap Index**: For low-cardinality data\n- **Full-Text Index**: For text search\n\n## Benefits\n- Faster query performance\n- Efficient sorting and grouping\n- Quick data retrieval\n- Improved JOIN operations\n\n## Drawbacks\n- Additional storage overhead\n- Slower INSERT/UPDATE/DELETE operations\n- Maintenance overhead\n- Memory usage\n\n## Interview Questions\n**Q: When should you create an index?**\nA: On frequently queried columns, foreign keys, and columns used in WHERE, ORDER BY, and JOIN clauses.\n\n**Q: What is the difference between clustered and non-clustered indexes?**\nA: Clustered indexes physically reorder table data, while non-clustered indexes create separate structures with pointers to data rows.`\n}; ","export const cacheStrategies = {\n  id: 'cache-strategies',\n  title: 'Cache Strategies',\n  content: `\n    <h2>Cache Strategies</h2>\n    <p>Cache strategies define how data is read from and written to cache in relation to the underlying data store. Choosing the right caching strategy is crucial for optimizing application performance and maintaining data consistency.</p>\n\n    <h3>Reading Data from Cache</h3>\n    \n    <h4>Cache-Aside (Lazy Loading)</h4>\n    <p>The application code is responsible for managing the cache. If the data is found in the cache, it's cache hit and data is returned to the application. If not, its cache miss, the application fetches the data from the underlying data store, stores it in the cache for future use, and then returns it to the application.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Cache-Aside Pattern Implementation\ndef get_user(user_id):\n    # Try to get from cache first\n    user = cache.get(f\"user:{user_id}\")\n    \n    if user is None:\n        # Cache miss - fetch from database\n        user = database.query(\"SELECT * FROM users WHERE id = ?\", user_id)\n        \n        if user:\n            # Store in cache for future requests\n            cache.set(f\"user:{user_id}\", user, ttl=3600)\n    \n    return user\n\n# Advantages:\n# - Only requested data is cached\n# - Cache can use different data model than database\n# - Resilient to cache failures\n\n# Disadvantages:\n# - Initial request is slow (cache miss)\n# - Possible data inconsistency\n# - Extra code complexity</code></pre>\n    </div>\n\n    <h4>Read-Through</h4>\n    <p>The cache itself is responsible for managing the cache and automatically fetching data from the underlying data store when it's not found in the cache. When the application requests data, the cache checks if it's available. If not, it automatically fetches it from the data store, populates the cache, and then returns the data to the application.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Read-Through Pattern (Cache Library Handles Loading)\nclass ReadThroughCache:\n    def __init__(self, data_loader):\n        self.cache = {}\n        self.data_loader = data_loader\n    \n    def get(self, key):\n        if key in self.cache:\n            return self.cache[key]\n        \n        # Cache automatically loads from data store\n        value = self.data_loader(key)\n        if value is not None:\n            self.cache[key] = value\n        \n        return value\n\n# Usage\ncache = ReadThroughCache(\n    data_loader=lambda key: database.get(key)\n)\nuser = cache.get(\"user:123\")  # Cache handles everything</code></pre>\n    </div>\n\n    <h3>Writing Data to Cache</h3>\n    \n    <h4>Write-Around</h4>\n    <p>The data is written directly to the underlying data store (e.g., SSD), bypassing the cache. This strategy is useful for write-heavy workloads.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Write-Around Pattern\ndef update_user(user_id, user_data):\n    # Write directly to database, bypass cache\n    database.update(\"UPDATE users SET ... WHERE id = ?\", \n                   user_data, user_id)\n    \n    # Invalidate cache entry (optional)\n    cache.delete(f\"user:{user_id}\")\n    \n    # Next read will fetch fresh data from database\n\n# Use when:\n# - Data is written once, read infrequently\n# - Write performance is critical\n# - Can tolerate cache misses on reads</code></pre>\n    </div>\n\n    <h4>Write-Through</h4>\n    <p>The data is written to both the cache and the underlying data store synchronously. This ensures that the data in the cache is always consistent with the data in the underlying data store but can introduce additional latency for write operations.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Write-Through Pattern\ndef update_user(user_id, user_data):\n    # Write to cache\n    cache.set(f\"user:{user_id}\", user_data)\n    \n    # Write to database (synchronous)\n    database.update(\"UPDATE users SET ... WHERE id = ?\", \n                   user_data, user_id)\n    \n    # Both writes must succeed\n    # Data is always consistent\n\n# Advantages:\n# - Cache always has latest data\n# - Simplifies cache consistency\n# - Good for read-heavy workloads\n\n# Disadvantages:\n# - Higher write latency\n# - Cache churn for infrequently read data</code></pre>\n    </div>\n\n    <h4>Write-Back (Write-Behind)</h4>\n    <p>The data is written to the cache first and then asynchronously written to the underlying data store. This can improve write performance since writes are acknowledged as soon as they're written to the cache, but there's a risk of data loss if the cache fails before data is written to the data store. write-ahead-log (WAL) can be used for this.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Write-Back Pattern\nclass WriteBackCache:\n    def __init__(self):\n        self.cache = {}\n        self.dirty_keys = set()\n        self.wal = WriteAheadLog()  # For durability\n    \n    def set(self, key, value):\n        # Log to WAL first for durability\n        self.wal.append(('SET', key, value))\n        \n        # Write to cache immediately\n        self.cache[key] = value\n        self.dirty_keys.add(key)\n        \n        # Return immediately (fast writes)\n        return True\n    \n    def flush_to_database(self):\n        # Periodically flush dirty entries to database\n        for key in self.dirty_keys:\n            value = self.cache[key]\n            database.update(key, value)\n        \n        self.dirty_keys.clear()\n        self.wal.checkpoint()</code></pre>\n    </div>\n\n    <h4>Write-Behind</h4>\n    <p>Similar to Write-Back, but the actual write to the data store is deferred until a later time, often during periods of low activity, and may involve batching or aggregating data before writing it to the data store.</p>\n\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Write-Behind with Batching\nclass WriteBehindCache:\n    def __init__(self, batch_size=100, flush_interval=60):\n        self.cache = {}\n        self.write_buffer = []\n        self.batch_size = batch_size\n        self.flush_interval = flush_interval\n        self.last_flush = time.time()\n    \n    def set(self, key, value):\n        self.cache[key] = value\n        self.write_buffer.append((key, value))\n        \n        # Check if we should flush\n        if len(self.write_buffer) >= self.batch_size:\n            self.flush_batch()\n    \n    def flush_batch(self):\n        if not self.write_buffer:\n            return\n        \n        # Batch write to database\n        database.batch_update(self.write_buffer)\n        self.write_buffer.clear()\n        self.last_flush = time.time()</code></pre>\n    </div>\n\n    <h3>Cache Strategy Comparison</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Strategy</th>\n          <th>Read Performance</th>\n          <th>Write Performance</th>\n          <th>Consistency</th>\n          <th>Use Case</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>Cache-Aside</strong></td>\n          <td>Good (after warm-up)</td>\n          <td>Good</td>\n          <td>Eventual</td>\n          <td>General purpose</td>\n        </tr>\n        <tr>\n          <td><strong>Read-Through</strong></td>\n          <td>Good (after warm-up)</td>\n          <td>N/A</td>\n          <td>Eventual</td>\n          <td>Read-heavy workloads</td>\n        </tr>\n        <tr>\n          <td><strong>Write-Around</strong></td>\n          <td>Poor (cache misses)</td>\n          <td>Best</td>\n          <td>Eventual</td>\n          <td>Write once, read rarely</td>\n        </tr>\n        <tr>\n          <td><strong>Write-Through</strong></td>\n          <td>Best</td>\n          <td>Poor</td>\n          <td>Strong</td>\n          <td>Read-heavy, consistency critical</td>\n        </tr>\n        <tr>\n          <td><strong>Write-Back</strong></td>\n          <td>Best</td>\n          <td>Best</td>\n          <td>Weak</td>\n          <td>Write-heavy workloads</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Choosing the Right Strategy</h3>\n    \n    <h4>Consider These Factors</h4>\n    <ul>\n      <li><strong>Read/Write Ratio:</strong> Read-heavy vs write-heavy workload</li>\n      <li><strong>Consistency Requirements:</strong> Strong vs eventual consistency</li>\n      <li><strong>Latency Tolerance:</strong> Acceptable read/write latencies</li>\n      <li><strong>Data Loss Tolerance:</strong> Can you afford to lose writes?</li>\n      <li><strong>Complexity:</strong> Implementation and maintenance overhead</li>\n    </ul>\n\n    <h4>Common Patterns</h4>\n    <ul>\n      <li><strong>Session Data:</strong> Write-through for consistency</li>\n      <li><strong>Product Catalog:</strong> Cache-aside with long TTL</li>\n      <li><strong>Analytics Data:</strong> Write-behind with batching</li>\n      <li><strong>User Profiles:</strong> Read-through with moderate TTL</li>\n      <li><strong>Audit Logs:</strong> Write-around (skip cache)</li>\n    </ul>\n\n    <h3>Best Practices</h3>\n    <ul>\n      <li><strong>Set Appropriate TTLs:</strong> Balance freshness vs performance</li>\n      <li><strong>Handle Cache Failures:</strong> Graceful degradation to database</li>\n      <li><strong>Monitor Hit Rates:</strong> Track cache effectiveness</li>\n      <li><strong>Implement Cache Warming:</strong> Pre-populate critical data</li>\n      <li><strong>Use Cache Invalidation:</strong> Keep data consistent</li>\n      <li><strong>Consider Cache Stampede:</strong> Prevent thundering herd</li>\n    </ul>\n\n    <h3>Related Links</h3>\n    <ul>\n      <li><a href=\"https://codeahoy.com/2017/08/11/caching-strategies-and-how-to-choose-the-right-one/\" target=\"_blank\">Caching Strategies and How to Choose the Right One</a></li>\n      <li><a href=\"https://blog.bytebytego.com/p/top-caching-strategies\" target=\"_blank\">Top Caching Strategies - ByteByteGo</a></li>\n    </ul>\n  `\n}; ","export const cacheEvictionPolicies = {\n  id: 'cache-eviction-policies',\n  title: 'Cache Eviction Policies',\n  content: `\n# Cache Eviction Policies\n\nCache eviction policies determine which data to remove when cache capacity is reached. Understanding these policies is crucial for optimizing cache performance and hit rates.\n\n## Overview\n\nWhen a cache reaches its capacity limit, it must decide which existing entries to remove to make space for new data. The choice of eviction policy significantly impacts:\n- **Cache hit rate**: Percentage of requests served from cache\n- **Performance**: Overall system response time\n- **Resource utilization**: Memory and CPU usage\n- **Application behavior**: User experience and throughput\n\n## Common Eviction Policies\n\n### 1. LRU (Least Recently Used)\n\n**Algorithm:**\n- Evicts the least recently accessed item\n- Maintains access order information\n- Based on temporal locality principle\n\n**Implementation:**\n\\`\\`\\`javascript\nclass LRUCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n  }\n  \n  get(key) {\n    if (this.cache.has(key)) {\n      // Move to end (most recently used)\n      const value = this.cache.get(key);\n      this.cache.delete(key);\n      this.cache.set(key, value);\n      return value;\n    }\n    return -1;\n  }\n  \n  put(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n    } else if (this.cache.size >= this.capacity) {\n      // Remove least recently used (first item)\n      const firstKey = this.cache.keys().next().value;\n      this.cache.delete(firstKey);\n    }\n    this.cache.set(key, value);\n  }\n}\n\\`\\`\\`\n\n**Advantages:**\n- Good performance for temporal locality\n- Intuitive behavior\n- Well-suited for most general-purpose applications\n\n**Disadvantages:**\n- Overhead of maintaining access order\n- Vulnerable to sequential scans\n- Can be fooled by one-time large data accesses\n\n**Use Cases:**\n- Web page caching\n- Database buffer pools\n- CPU caches\n- General-purpose applications\n\n### 2. LFU (Least Frequently Used)\n\n**Algorithm:**\n- Evicts the least frequently accessed item\n- Maintains frequency counters\n- Based on frequency of access pattern\n\n**Implementation:**\n\\`\\`\\`javascript\nclass LFUCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n    this.frequencies = new Map();\n    this.minFreq = 0;\n    this.freqGroups = new Map();\n  }\n  \n  get(key) {\n    if (!this.cache.has(key)) return -1;\n    \n    this.updateFrequency(key);\n    return this.cache.get(key);\n  }\n  \n  put(key, value) {\n    if (this.capacity === 0) return;\n    \n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n      this.updateFrequency(key);\n      return;\n    }\n    \n    if (this.cache.size >= this.capacity) {\n      this.evictLFU();\n    }\n    \n    this.cache.set(key, value);\n    this.frequencies.set(key, 1);\n    this.addToFreqGroup(key, 1);\n    this.minFreq = 1;\n  }\n  \n  updateFrequency(key) {\n    const freq = this.frequencies.get(key);\n    this.frequencies.set(key, freq + 1);\n    \n    this.removeFromFreqGroup(key, freq);\n    this.addToFreqGroup(key, freq + 1);\n    \n    if (freq === this.minFreq && this.freqGroups.get(freq).size === 0) {\n      this.minFreq++;\n    }\n  }\n  \n  evictLFU() {\n    const leastFreqKeys = this.freqGroups.get(this.minFreq);\n    const keyToEvict = leastFreqKeys.keys().next().value;\n    \n    this.cache.delete(keyToEvict);\n    this.frequencies.delete(keyToEvict);\n    this.removeFromFreqGroup(keyToEvict, this.minFreq);\n  }\n}\n\\`\\`\\`\n\n**Advantages:**\n- Excellent for workloads with clear frequency patterns\n- Resistant to temporal anomalies\n- Good for long-term caching strategies\n\n**Disadvantages:**\n- Complex implementation\n- Higher memory overhead\n- Slow adaptation to changing patterns\n- Age problem (old frequent items stay forever)\n\n**Use Cases:**\n- Content delivery networks\n- Database query result caching\n- Static content caching\n- Long-term data caching\n\n### 3. FIFO (First In, First Out)\n\n**Algorithm:**\n- Evicts the oldest item in the cache\n- Simple queue-based implementation\n- No consideration of access patterns\n\n**Implementation:**\n\\`\\`\\`javascript\nclass FIFOCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n    this.queue = [];\n  }\n  \n  get(key) {\n    return this.cache.has(key) ? this.cache.get(key) : -1;\n  }\n  \n  put(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n      return;\n    }\n    \n    if (this.cache.size >= this.capacity) {\n      const oldestKey = this.queue.shift();\n      this.cache.delete(oldestKey);\n    }\n    \n    this.cache.set(key, value);\n    this.queue.push(key);\n  }\n}\n\\`\\`\\`\n\n**Advantages:**\n- Simple implementation\n- Low overhead\n- Predictable behavior\n- Fair eviction policy\n\n**Disadvantages:**\n- Ignores access patterns\n- Poor performance for temporal locality\n- May evict frequently used items\n\n**Use Cases:**\n- Simple caching scenarios\n- When implementation simplicity is priority\n- Temporary data storage\n- Log rotation systems\n\n### 4. LIFO (Last In, First Out)\n\n**Algorithm:**\n- Evicts the most recently added item\n- Stack-based implementation\n- Opposite of FIFO approach\n\n**Implementation:**\n\\`\\`\\`javascript\nclass LIFOCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n    this.stack = [];\n  }\n  \n  get(key) {\n    return this.cache.has(key) ? this.cache.get(key) : -1;\n  }\n  \n  put(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n      return;\n    }\n    \n    if (this.cache.size >= this.capacity) {\n      const newestKey = this.stack.pop();\n      this.cache.delete(newestKey);\n    }\n    \n    this.cache.set(key, value);\n    this.stack.push(key);\n  }\n}\n\\`\\`\\`\n\n**Use Cases:**\n- Stack-like data access patterns\n- Undo operations\n- Temporary computations\n- Specialized applications\n\n### 5. Random Replacement\n\n**Algorithm:**\n- Evicts a randomly selected item\n- No pattern analysis required\n- Probabilistically fair\n\n**Implementation:**\n\\`\\`\\`javascript\nclass RandomCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.cache = new Map();\n    this.keys = [];\n  }\n  \n  get(key) {\n    return this.cache.has(key) ? this.cache.get(key) : -1;\n  }\n  \n  put(key, value) {\n    if (this.cache.has(key)) {\n      this.cache.set(key, value);\n      return;\n    }\n    \n    if (this.cache.size >= this.capacity) {\n      const randomIndex = Math.floor(Math.random() * this.keys.length);\n      const randomKey = this.keys[randomIndex];\n      \n      this.cache.delete(randomKey);\n      this.keys.splice(randomIndex, 1);\n    }\n    \n    this.cache.set(key, value);\n    this.keys.push(key);\n  }\n}\n\\`\\`\\`\n\n**Advantages:**\n- Simple implementation\n- No overhead for tracking access patterns\n- Resistant to worst-case scenarios\n- Good average performance\n\n**Disadvantages:**\n- Unpredictable behavior\n- May evict frequently used items\n- No optimization for access patterns\n\n**Use Cases:**\n- When access patterns are completely random\n- Simple caching requirements\n- Testing and benchmarking\n- Memory-constrained environments\n\n## Advanced Eviction Policies\n\n### 1. LRU-K\n\n**Algorithm:**\n- Considers K most recent accesses\n- More sophisticated than simple LRU\n- Better handling of sequential scans\n\n**Characteristics:**\n- Tracks K most recent access times\n- Evicts item with oldest K-th access\n- Commonly used: LRU-2\n\n**Use Cases:**\n- Database buffer management\n- File system caches\n- Applications with mixed access patterns\n\n### 2. 2Q (Two Queue)\n\n**Algorithm:**\n- Uses two LRU queues: A1 (FIFO) and Am (LRU)\n- New items enter A1\n- Promoted to Am on second access\n- Eviction from A1 or Am based on sizes\n\n**Implementation Concept:**\n\\`\\`\\`javascript\nclass TwoQCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.a1Size = Math.floor(capacity * 0.25); // 25% for A1\n    this.amSize = capacity - this.a1Size;      // 75% for Am\n    \n    this.a1 = new FIFOCache(this.a1Size);     // FIFO queue\n    this.am = new LRUCache(this.amSize);      // LRU queue\n    this.a1Out = new Set();                   // Ghost entries\n  }\n  \n  get(key) {\n    // Check Am first (hot data)\n    let value = this.am.get(key);\n    if (value !== -1) return value;\n    \n    // Check A1 (warm data)\n    value = this.a1.get(key);\n    if (value !== -1) {\n      // Promote to Am\n      this.a1.delete(key);\n      this.am.put(key, value);\n      return value;\n    }\n    \n    return -1;\n  }\n}\n\\`\\`\\`\n\n**Advantages:**\n- Better scan resistance than LRU\n- Good performance for mixed workloads\n- Adaptive behavior\n\n**Use Cases:**\n- Database systems\n- File systems\n- Mixed read/write workloads\n\n### 3. ARC (Adaptive Replacement Cache)\n\n**Algorithm:**\n- Dynamically balances between recency and frequency\n- Uses four lists: T1, T2, B1, B2\n- Self-tuning based on workload\n\n**Characteristics:**\n- T1: Recent items (LRU)\n- T2: Frequent items (LRU)\n- B1, B2: Ghost entries for adaptation\n- Dynamically adjusts T1/T2 sizes\n\n**Advantages:**\n- Excellent adaptation to workload changes\n- Combines benefits of LRU and LFU\n- Self-tuning parameters\n\n**Disadvantages:**\n- Complex implementation\n- Higher memory overhead\n- Patent restrictions (historically)\n\n**Use Cases:**\n- High-performance storage systems\n- Database buffer pools\n- Enterprise caching solutions\n\n## Policy Comparison\n\n### Performance Characteristics\n\n| Policy | Hit Rate | Implementation | Memory Overhead | Adaptation |\n|--------|----------|----------------|-----------------|------------|\n| LRU | Good | Medium | Medium | Fast |\n| LFU | Excellent* | Complex | High | Slow |\n| FIFO | Poor | Simple | Low | None |\n| Random | Average | Simple | Low | None |\n| LRU-K | Very Good | Complex | High | Medium |\n| 2Q | Very Good | Medium | Medium | Medium |\n| ARC | Excellent | Complex | High | Excellent |\n\n*Depends on workload characteristics\n\n### Workload Suitability\n\n| Workload Type | Best Policies | Worst Policies |\n|---------------|---------------|----------------|\n| Temporal Locality | LRU, LRU-K, ARC | FIFO, Random |\n| Frequency-based | LFU, ARC | FIFO, LIFO |\n| Sequential Scans | 2Q, LRU-K, ARC | LRU, LFU |\n| Random Access | Random, ARC | LRU, LFU |\n| Mixed Patterns | ARC, 2Q | FIFO, LIFO |\n\n## Implementation Considerations\n\n### 1. Thread Safety\n\n\\`\\`\\`javascript\nclass ThreadSafeLRUCache {\n  constructor(capacity) {\n    this.cache = new LRUCache(capacity);\n    this.lock = new ReadWriteLock();\n  }\n  \n  get(key) {\n    this.lock.readLock();\n    try {\n      return this.cache.get(key);\n    } finally {\n      this.lock.readUnlock();\n    }\n  }\n  \n  put(key, value) {\n    this.lock.writeLock();\n    try {\n      this.cache.put(key, value);\n    } finally {\n      this.lock.writeUnlock();\n    }\n  }\n}\n\\`\\`\\`\n\n### 2. Memory Efficiency\n\n\\`\\`\\`javascript\n// Compact LRU using doubly-linked list\nclass CompactLRU {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.size = 0;\n    this.head = { key: 0, value: 0 };\n    this.tail = { key: 0, value: 0 };\n    this.head.next = this.tail;\n    this.tail.prev = this.head;\n    this.cache = new Map();\n  }\n  \n  addNode(node) {\n    node.prev = this.head;\n    node.next = this.head.next;\n    this.head.next.prev = node;\n    this.head.next = node;\n  }\n  \n  removeNode(node) {\n    node.prev.next = node.next;\n    node.next.prev = node.prev;\n  }\n  \n  moveToHead(node) {\n    this.removeNode(node);\n    this.addNode(node);\n  }\n  \n  popTail() {\n    const lastNode = this.tail.prev;\n    this.removeNode(lastNode);\n    return lastNode;\n  }\n}\n\\`\\`\\`\n\n### 3. Performance Optimization\n\n\\`\\`\\`javascript\n// Lock-free LRU using atomic operations\nclass LockFreeLRU {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.segments = [];\n    this.segmentCount = Math.min(16, capacity);\n    \n    for (let i = 0; i < this.segmentCount; i++) {\n      this.segments.push(new LRUCache(Math.ceil(capacity / this.segmentCount)));\n    }\n  }\n  \n  getSegment(key) {\n    return this.segments[this.hash(key) % this.segmentCount];\n  }\n  \n  hash(key) {\n    // Simple hash function\n    let hash = 0;\n    for (let i = 0; i < key.length; i++) {\n      hash = ((hash << 5) - hash + key.charCodeAt(i)) & 0xffffffff;\n    }\n    return Math.abs(hash);\n  }\n  \n  get(key) {\n    return this.getSegment(key).get(key);\n  }\n  \n  put(key, value) {\n    this.getSegment(key).put(key, value);\n  }\n}\n\\`\\`\\`\n\n## Best Practices\n\n### 1. Policy Selection\n\n\\`\\`\\`javascript\n// Decision framework for policy selection\nfunction selectEvictionPolicy(workloadCharacteristics) {\n  const {\n    temporalLocality,\n    frequencyPattern,\n    scanResistance,\n    implementationComplexity,\n    memoryConstraints\n  } = workloadCharacteristics;\n  \n  if (memoryConstraints === 'strict') {\n    return 'FIFO'; // Lowest overhead\n  }\n  \n  if (implementationComplexity === 'simple') {\n    return temporalLocality ? 'LRU' : 'Random';\n  }\n  \n  if (scanResistance === 'required') {\n    return '2Q'; // Good scan resistance\n  }\n  \n  if (frequencyPattern === 'strong') {\n    return 'LFU'; // Frequency-based\n  }\n  \n  if (workloadCharacteristics.adaptive === true) {\n    return 'ARC'; // Self-tuning\n  }\n  \n  return 'LRU'; // Default choice\n}\n\\`\\`\\`\n\n### 2. Monitoring and Tuning\n\n\\`\\`\\`javascript\nclass CacheMetrics {\n  constructor() {\n    this.hits = 0;\n    this.misses = 0;\n    this.evictions = 0;\n    this.startTime = Date.now();\n  }\n  \n  recordHit() {\n    this.hits++;\n  }\n  \n  recordMiss() {\n    this.misses++;\n  }\n  \n  recordEviction() {\n    this.evictions++;\n  }\n  \n  getHitRate() {\n    const total = this.hits + this.misses;\n    return total > 0 ? this.hits / total : 0;\n  }\n  \n  getEvictionRate() {\n    const duration = (Date.now() - this.startTime) / 1000;\n    return this.evictions / duration;\n  }\n  \n  shouldTunePolicy() {\n    const hitRate = this.getHitRate();\n    const evictionRate = this.getEvictionRate();\n    \n    return hitRate < 0.8 || evictionRate > 100; // Thresholds\n  }\n}\n\\`\\`\\`\n\n### 3. Hybrid Approaches\n\n\\`\\`\\`javascript\n// Multi-tier cache with different policies\nclass HybridCache {\n  constructor(l1Size, l2Size) {\n    this.l1 = new LRUCache(l1Size);     // Fast, small cache\n    this.l2 = new LFUCache(l2Size);     // Larger, frequency-based\n  }\n  \n  get(key) {\n    // Check L1 first\n    let value = this.l1.get(key);\n    if (value !== -1) {\n      return value;\n    }\n    \n    // Check L2\n    value = this.l2.get(key);\n    if (value !== -1) {\n      // Promote to L1\n      this.l1.put(key, value);\n      return value;\n    }\n    \n    return -1;\n  }\n  \n  put(key, value) {\n    // Always insert into L1\n    this.l1.put(key, value);\n    \n    // Also insert into L2 for frequency tracking\n    this.l2.put(key, value);\n  }\n}\n\\`\\`\\`\n\n## Common Pitfalls\n\n### 1. Wrong Policy Choice\n\n\\`\\`\\`javascript\n// Anti-pattern: Using LRU for sequential scans\nconst badChoice = {\n  workload: 'large sequential file processing',\n  policy: 'LRU',\n  result: 'poor hit rate due to scan pollution'\n};\n\n// Better: Use scan-resistant policy\nconst goodChoice = {\n  workload: 'large sequential file processing',\n  policy: '2Q',\n  result: 'maintains cache for hot data'\n};\n\\`\\`\\`\n\n### 2. Ignoring Overhead\n\n\\`\\`\\`javascript\n// Consider implementation overhead\nconst overheadComparison = {\n  FIFO: { memory: 'O(1)', cpu: 'O(1)' },\n  LRU: { memory: 'O(n)', cpu: 'O(1)' },\n  LFU: { memory: 'O(n)', cpu: 'O(log n)' },\n  ARC: { memory: 'O(n)', cpu: 'O(1)' }\n};\n\\`\\`\\`\n\n### 3. Static Configuration\n\n\\`\\`\\`javascript\n// Anti-pattern: Fixed cache policy\nconst staticCache = new LRUCache(1000);\n\n// Better: Adaptive configuration\nclass AdaptiveCache {\n  constructor() {\n    this.policy = 'LRU';\n    this.cache = new LRUCache(1000);\n    this.metrics = new CacheMetrics();\n  }\n  \n  adaptPolicy() {\n    if (this.metrics.shouldTunePolicy()) {\n      // Switch policy based on observed patterns\n      this.policy = this.selectOptimalPolicy();\n      this.cache = this.createCache(this.policy);\n    }\n  }\n}\n\\`\\`\\`\n\n## Conclusion\n\nCache eviction policies are fundamental to cache performance and system efficiency. The choice of policy should be based on:\n\n1. **Workload characteristics**: Access patterns and data locality\n2. **Performance requirements**: Hit rate and latency targets\n3. **Resource constraints**: Memory and CPU limitations\n4. **Implementation complexity**: Development and maintenance costs\n\nModern systems often benefit from adaptive or hybrid approaches that can adjust to changing workload patterns. Understanding the trade-offs between different policies enables informed decisions that optimize cache effectiveness for specific use cases.\n\nRegular monitoring and tuning of cache behavior ensures continued optimal performance as workloads evolve over time.\n`\n}; ","export const normalization = {\n  id: 'normalization',\n  title: 'Database Normalization',\n  content: `# Database Normalization\n\n## Definition\nDatabase normalization is the process of organizing data to reduce redundancy and improve data integrity.\n\n## Normal Forms\n- **1NF (First Normal Form)**: Atomic values, no repeating groups\n- **2NF (Second Normal Form)**: 1NF + no partial dependencies\n- **3NF (Third Normal Form)**: 2NF + no transitive dependencies\n- **BCNF (Boyce-Codd Normal Form)**: Stricter version of 3NF\n\n## Benefits\n- Reduces data redundancy\n- Improves data integrity\n- Easier maintenance\n- Consistent data updates\n\n## Drawbacks\n- More complex queries\n- Potential performance impact\n- Increased JOIN operations\n- More tables to manage\n\n## Denormalization\nSometimes intentionally breaking normal forms for:\n- Performance optimization\n- Simplified queries\n- Reduced JOIN complexity\n- Analytical workloads\n\n## Interview Questions\n**Q: What is the difference between 2NF and 3NF?**\nA: 2NF eliminates partial dependencies on composite keys, while 3NF eliminates transitive dependencies between non-key attributes.\n\n**Q: When would you consider denormalization?**\nA: For read-heavy workloads, data warehousing, or when query performance is more critical than storage efficiency.`\n}; ","export const sql = {\n  id: 'sql',\n  title: 'SQL (Structured Query Language)',\n  content: `# SQL (Structured Query Language)\n\n## Definition\nSQL is a standardized language for managing and manipulating relational databases.\n\n## Core SQL Commands\n- **DDL (Data Definition Language)**: CREATE, ALTER, DROP\n- **DML (Data Manipulation Language)**: INSERT, UPDATE, DELETE\n- **DQL (Data Query Language)**: SELECT\n- **DCL (Data Control Language)**: GRANT, REVOKE\n\n## Basic Syntax\n\\`\\`\\`sql\nSELECT column1, column2 \nFROM table_name \nWHERE condition\nORDER BY column1;\n\\`\\`\\`\n\n## Key Concepts\n- **Tables**: Structured data storage\n- **Relationships**: Foreign keys, joins\n- **Indexes**: Performance optimization\n- **Constraints**: Data integrity rules\n\n## Common Operations\n- **Joins**: INNER, LEFT, RIGHT, FULL OUTER\n- **Aggregations**: COUNT, SUM, AVG, MIN, MAX\n- **Subqueries**: Nested SELECT statements\n- **Transactions**: BEGIN, COMMIT, ROLLBACK\n\n## Interview Questions\n**Q: What is the difference between INNER JOIN and LEFT JOIN?**\nA: INNER JOIN returns only matching records from both tables, while LEFT JOIN returns all records from the left table and matching records from the right table.\n\n**Q: What is a SQL injection attack?**\nA: A security vulnerability where malicious SQL code is inserted into application queries to manipulate the database.`\n}; ","export const nosql = {\n  id: 'nosql',\n  title: 'NoSQL Databases',\n  content: `# NoSQL Databases\n\n## Definition\nNoSQL (Not Only SQL) databases are non-relational databases designed for distributed data storage and horizontal scaling.\n\n## Types of NoSQL Databases\n- **Document**: MongoDB, CouchDB\n- **Key-Value**: Redis, DynamoDB\n- **Column-Family**: Cassandra, HBase\n- **Graph**: Neo4j, Amazon Neptune\n\n## Key Characteristics\n- **Schema Flexibility**: Dynamic schemas\n- **Horizontal Scaling**: Distributed across multiple servers\n- **Eventual Consistency**: CAP theorem trade-offs\n- **High Performance**: Optimized for specific use cases\n\n## Advantages\n- Scalability for large datasets\n- Flexible data models\n- High availability\n- Cost-effective for distributed systems\n\n## Disadvantages\n- Limited ACID compliance\n- Less mature tooling\n- Eventual consistency challenges\n- Learning curve for SQL developers\n\n## Interview Questions\n**Q: When would you choose NoSQL over SQL?**\nA: For applications requiring horizontal scaling, flexible schemas, high write throughput, or handling unstructured data.\n\n**Q: What is eventual consistency?**\nA: A consistency model where the system will become consistent over time, but may not be immediately consistent after updates.`\n}; ","export const softwareDesignPatterns = {\n  id: 'software-design-patterns',\n  title: 'Software Design Patterns',\n  content: `\n    <h2>Software Design Patterns</h2>\n    <p>Design patterns are reusable solutions to common problems in software design. They represent best practices and proven solutions that developers have refined over time.</p>\n\n    <h3>Categories of Design Patterns</h3>\n    \n    <h4>Creational Patterns</h4>\n    <p>Deal with object creation mechanisms, trying to create objects in a manner suitable to the situation.</p>\n    \n    <h4>Structural Patterns</h4>\n    <p>Deal with object composition or the structure of classes and objects.</p>\n    \n    <h4>Behavioral Patterns</h4>\n    <p>Focus on communication between objects and the assignment of responsibilities.</p>\n\n    <h3>Creational Patterns</h3>\n    \n    <h4>1. Singleton Pattern</h4>\n    <p>Ensures a class has only one instance and provides global access to it.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// JavaScript Singleton\nclass Database {\n  constructor() {\n    if (Database.instance) {\n      return Database.instance;\n    }\n    this.connection = this.connect();\n    Database.instance = this;\n  }\n  \n  connect() {\n    // Database connection logic\n    return { connected: true };\n  }\n}\n\n// Thread-safe Singleton in Java\npublic class Singleton {\n    private static volatile Singleton instance;\n    \n    private Singleton() {}\n    \n    public static Singleton getInstance() {\n        if (instance == null) {\n            synchronized (Singleton.class) {\n                if (instance == null) {\n                    instance = new Singleton();\n                }\n            }\n        }\n        return instance;\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Factory Pattern</h4>\n    <p>Provides an interface for creating objects without specifying their exact classes.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Factory Pattern Example\nclass VehicleFactory {\n  createVehicle(type) {\n    switch(type) {\n      case 'car':\n        return new Car();\n      case 'truck':\n        return new Truck();\n      case 'motorcycle':\n        return new Motorcycle();\n      default:\n        throw new Error('Unknown vehicle type');\n    }\n  }\n}\n\n// Abstract Factory Pattern\nclass UIFactory {\n  static getFactory(os) {\n    switch(os) {\n      case 'windows':\n        return new WindowsUIFactory();\n      case 'mac':\n        return new MacUIFactory();\n      case 'linux':\n        return new LinuxUIFactory();\n    }\n  }\n}\n\nclass WindowsUIFactory {\n  createButton() { return new WindowsButton(); }\n  createCheckbox() { return new WindowsCheckbox(); }\n}</code></pre>\n    </div>\n\n    <h4>3. Builder Pattern</h4>\n    <p>Separates the construction of complex objects from their representation.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Builder Pattern\nclass HttpRequest {\n  constructor(builder) {\n    this.method = builder.method;\n    this.url = builder.url;\n    this.headers = builder.headers;\n    this.body = builder.body;\n    this.timeout = builder.timeout;\n  }\n}\n\nclass HttpRequestBuilder {\n  constructor(method, url) {\n    this.method = method;\n    this.url = url;\n    this.headers = {};\n  }\n  \n  setHeader(key, value) {\n    this.headers[key] = value;\n    return this;\n  }\n  \n  setBody(body) {\n    this.body = body;\n    return this;\n  }\n  \n  setTimeout(timeout) {\n    this.timeout = timeout;\n    return this;\n  }\n  \n  build() {\n    return new HttpRequest(this);\n  }\n}\n\n// Usage\nconst request = new HttpRequestBuilder('POST', '/api/users')\n  .setHeader('Content-Type', 'application/json')\n  .setBody({ name: 'John' })\n  .setTimeout(5000)\n  .build();</code></pre>\n    </div>\n\n    <h4>4. Prototype Pattern</h4>\n    <p>Creates new objects by cloning existing instances.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Prototype Pattern\nclass Shape {\n  clone() {\n    return Object.create(\n      Object.getPrototypeOf(this),\n      Object.getOwnPropertyDescriptors(this)\n    );\n  }\n}\n\nclass Rectangle extends Shape {\n  constructor(width, height) {\n    super();\n    this.width = width;\n    this.height = height;\n  }\n}\n\n// Usage\nconst rect1 = new Rectangle(10, 20);\nconst rect2 = rect1.clone();\nrect2.width = 30; // rect1 remains unchanged</code></pre>\n    </div>\n\n    <h3>Structural Patterns</h3>\n    \n    <h4>1. Adapter Pattern</h4>\n    <p>Allows incompatible interfaces to work together.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Adapter Pattern\n// Old payment interface\nclass OldPaymentSystem {\n  makePayment(amount) {\n    console.log(\\`Processing $\\${amount} through old system\\`);\n  }\n}\n\n// New payment interface expected by our app\nclass PaymentInterface {\n  processPayment(amount, currency) {\n    throw new Error('Must implement processPayment');\n  }\n}\n\n// Adapter\nclass PaymentAdapter extends PaymentInterface {\n  constructor(oldPaymentSystem) {\n    super();\n    this.oldSystem = oldPaymentSystem;\n  }\n  \n  processPayment(amount, currency) {\n    // Convert to old system format\n    const convertedAmount = this.convertCurrency(amount, currency);\n    this.oldSystem.makePayment(convertedAmount);\n  }\n  \n  convertCurrency(amount, currency) {\n    // Currency conversion logic\n    return amount; // Simplified\n  }\n}</code></pre>\n    </div>\n\n    <h4>2. Decorator Pattern</h4>\n    <p>Adds new functionality to objects without altering their structure.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Decorator Pattern\nclass Coffee {\n  cost() { return 5; }\n  description() { return 'Simple coffee'; }\n}\n\nclass CoffeeDecorator {\n  constructor(coffee) {\n    this.coffee = coffee;\n  }\n  \n  cost() { return this.coffee.cost(); }\n  description() { return this.coffee.description(); }\n}\n\nclass MilkDecorator extends CoffeeDecorator {\n  cost() { return this.coffee.cost() + 2; }\n  description() { return this.coffee.description() + ', milk'; }\n}\n\nclass SugarDecorator extends CoffeeDecorator {\n  cost() { return this.coffee.cost() + 1; }\n  description() { return this.coffee.description() + ', sugar'; }\n}\n\n// Usage\nlet coffee = new Coffee();\ncoffee = new MilkDecorator(coffee);\ncoffee = new SugarDecorator(coffee);\nconsole.log(coffee.description()); // \"Simple coffee, milk, sugar\"\nconsole.log(coffee.cost()); // 8</code></pre>\n    </div>\n\n    <h4>3. Proxy Pattern</h4>\n    <p>Provides a placeholder or surrogate for another object to control access to it.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Proxy Pattern\nclass DatabaseService {\n  query(sql) {\n    console.log(\\`Executing: \\${sql}\\`);\n    return 'Query results';\n  }\n}\n\nclass DatabaseProxy {\n  constructor(database, user) {\n    this.database = database;\n    this.user = user;\n  }\n  \n  query(sql) {\n    if (this.hasAccess(sql)) {\n      this.log(sql);\n      return this.database.query(sql);\n    } else {\n      throw new Error('Access denied');\n    }\n  }\n  \n  hasAccess(sql) {\n    // Check user permissions\n    if (sql.includes('DELETE') && this.user.role !== 'admin') {\n      return false;\n    }\n    return true;\n  }\n  \n  log(sql) {\n    console.log(\\`User \\${this.user.name} executed: \\${sql}\\`);\n  }\n}</code></pre>\n    </div>\n\n    <h4>4. Composite Pattern</h4>\n    <p>Composes objects into tree structures to represent part-whole hierarchies.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Composite Pattern\nclass FileSystemComponent {\n  getName() { throw new Error('Must implement'); }\n  getSize() { throw new Error('Must implement'); }\n}\n\nclass File extends FileSystemComponent {\n  constructor(name, size) {\n    super();\n    this.name = name;\n    this.size = size;\n  }\n  \n  getName() { return this.name; }\n  getSize() { return this.size; }\n}\n\nclass Directory extends FileSystemComponent {\n  constructor(name) {\n    super();\n    this.name = name;\n    this.children = [];\n  }\n  \n  add(component) {\n    this.children.push(component);\n  }\n  \n  getName() { return this.name; }\n  \n  getSize() {\n    return this.children.reduce(\n      (total, child) => total + child.getSize(), 0\n    );\n  }\n}\n\n// Usage\nconst root = new Directory('root');\nconst src = new Directory('src');\nroot.add(src);\nsrc.add(new File('index.js', 1000));\nsrc.add(new File('app.js', 2000));\nconsole.log(root.getSize()); // 3000</code></pre>\n    </div>\n\n    <h3>Behavioral Patterns</h3>\n    \n    <h4>1. Observer Pattern</h4>\n    <p>Defines a one-to-many dependency between objects.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Observer Pattern\nclass EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  \n  on(event, callback) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n  \n  off(event, callback) {\n    if (this.events[event]) {\n      this.events[event] = this.events[event].filter(\n        cb => cb !== callback\n      );\n    }\n  }\n  \n  emit(event, data) {\n    if (this.events[event]) {\n      this.events[event].forEach(callback => callback(data));\n    }\n  }\n}\n\n// Usage\nconst emitter = new EventEmitter();\nconst handler = (data) => console.log('Received:', data);\n\nemitter.on('message', handler);\nemitter.emit('message', 'Hello World');</code></pre>\n    </div>\n\n    <h4>2. Strategy Pattern</h4>\n    <p>Defines a family of algorithms and makes them interchangeable.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Strategy Pattern\nclass PaymentProcessor {\n  constructor(strategy) {\n    this.strategy = strategy;\n  }\n  \n  setStrategy(strategy) {\n    this.strategy = strategy;\n  }\n  \n  processPayment(amount) {\n    return this.strategy.pay(amount);\n  }\n}\n\nclass CreditCardStrategy {\n  pay(amount) {\n    console.log(\\`Paid $\\${amount} using Credit Card\\`);\n    return { success: true, method: 'credit_card' };\n  }\n}\n\nclass PayPalStrategy {\n  pay(amount) {\n    console.log(\\`Paid $\\${amount} using PayPal\\`);\n    return { success: true, method: 'paypal' };\n  }\n}\n\nclass BitcoinStrategy {\n  pay(amount) {\n    console.log(\\`Paid $\\${amount} using Bitcoin\\`);\n    return { success: true, method: 'bitcoin' };\n  }\n}\n\n// Usage\nconst processor = new PaymentProcessor(new CreditCardStrategy());\nprocessor.processPayment(100);\nprocessor.setStrategy(new BitcoinStrategy());\nprocessor.processPayment(50);</code></pre>\n    </div>\n\n    <h4>3. Command Pattern</h4>\n    <p>Encapsulates requests as objects, allowing parameterization and queuing.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Command Pattern\nclass Command {\n  execute() { throw new Error('Must implement'); }\n  undo() { throw new Error('Must implement'); }\n}\n\nclass Light {\n  turnOn() { console.log('Light is ON'); }\n  turnOff() { console.log('Light is OFF'); }\n}\n\nclass TurnOnCommand extends Command {\n  constructor(light) {\n    super();\n    this.light = light;\n  }\n  \n  execute() { this.light.turnOn(); }\n  undo() { this.light.turnOff(); }\n}\n\nclass RemoteControl {\n  constructor() {\n    this.history = [];\n  }\n  \n  executeCommand(command) {\n    command.execute();\n    this.history.push(command);\n  }\n  \n  undo() {\n    const command = this.history.pop();\n    if (command) {\n      command.undo();\n    }\n  }\n}</code></pre>\n    </div>\n\n    <h4>4. Iterator Pattern</h4>\n    <p>Provides a way to access elements of a collection sequentially.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Iterator Pattern\nclass ArrayIterator {\n  constructor(items) {\n    this.items = items;\n    this.index = 0;\n  }\n  \n  hasNext() {\n    return this.index < this.items.length;\n  }\n  \n  next() {\n    return this.items[this.index++];\n  }\n  \n  reset() {\n    this.index = 0;\n  }\n}\n\n// ES6 Iterator Protocol\nclass Range {\n  constructor(start, end) {\n    this.start = start;\n    this.end = end;\n  }\n  \n  [Symbol.iterator]() {\n    let current = this.start;\n    const end = this.end;\n    \n    return {\n      next() {\n        if (current <= end) {\n          return { value: current++, done: false };\n        }\n        return { done: true };\n      }\n    };\n  }\n}\n\n// Usage\nconst range = new Range(1, 5);\nfor (const num of range) {\n  console.log(num); // 1, 2, 3, 4, 5\n}</code></pre>\n    </div>\n\n    <h3>Modern Patterns</h3>\n    \n    <h4>1. Dependency Injection</h4>\n    <p>A technique for achieving Inversion of Control between classes and their dependencies.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Dependency Injection\nclass EmailService {\n  send(to, subject, body) {\n    console.log(\\`Sending email to \\${to}\\`);\n  }\n}\n\nclass SMSService {\n  send(to, message) {\n    console.log(\\`Sending SMS to \\${to}\\`);\n  }\n}\n\nclass NotificationService {\n  constructor(emailService, smsService) {\n    this.emailService = emailService;\n    this.smsService = smsService;\n  }\n  \n  notify(user, message) {\n    if (user.email) {\n      this.emailService.send(user.email, 'Notification', message);\n    }\n    if (user.phone) {\n      this.smsService.send(user.phone, message);\n    }\n  }\n}\n\n// DI Container\nclass Container {\n  constructor() {\n    this.services = new Map();\n  }\n  \n  register(name, factory) {\n    this.services.set(name, factory);\n  }\n  \n  get(name) {\n    const factory = this.services.get(name);\n    return factory(this);\n  }\n}</code></pre>\n    </div>\n\n    <h4>2. Repository Pattern</h4>\n    <p>Encapsulates data access logic and provides a more object-oriented view of the persistence layer.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Repository Pattern\nclass UserRepository {\n  constructor(database) {\n    this.db = database;\n  }\n  \n  async findById(id) {\n    const data = await this.db.query(\n      'SELECT * FROM users WHERE id = ?', [id]\n    );\n    return data ? new User(data) : null;\n  }\n  \n  async save(user) {\n    if (user.id) {\n      await this.db.query(\n        'UPDATE users SET name = ?, email = ? WHERE id = ?',\n        [user.name, user.email, user.id]\n      );\n    } else {\n      const result = await this.db.query(\n        'INSERT INTO users (name, email) VALUES (?, ?)',\n        [user.name, user.email]\n      );\n      user.id = result.insertId;\n    }\n    return user;\n  }\n  \n  async findByEmail(email) {\n    const data = await this.db.query(\n      'SELECT * FROM users WHERE email = ?', [email]\n    );\n    return data ? new User(data) : null;\n  }\n}</code></pre>\n    </div>\n\n    <h4>3. Module Pattern</h4>\n    <p>Provides encapsulation and namespace management.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Module Pattern\nconst UserModule = (function() {\n  // Private variables\n  let users = [];\n  \n  // Private functions\n  function validateEmail(email) {\n    return /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/.test(email);\n  }\n  \n  // Public API\n  return {\n    addUser(name, email) {\n      if (!validateEmail(email)) {\n        throw new Error('Invalid email');\n      }\n      users.push({ name, email });\n    },\n    \n    getUsers() {\n      return [...users]; // Return copy\n    },\n    \n    getUserCount() {\n      return users.length;\n    }\n  };\n})();</code></pre>\n    </div>\n\n    <h3>Pattern Selection Guidelines</h3>\n    \n    <h4>When to Use Which Pattern</h4>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Pattern</th>\n          <th>Use When</th>\n          <th>Avoid When</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Singleton</td>\n          <td>Need exactly one instance (e.g., database connection)</td>\n          <td>Testing is important (hard to mock)</td>\n        </tr>\n        <tr>\n          <td>Factory</td>\n          <td>Object creation is complex or varies</td>\n          <td>Simple object creation suffices</td>\n        </tr>\n        <tr>\n          <td>Observer</td>\n          <td>Multiple objects need state updates</td>\n          <td>Simple one-to-one relationships</td>\n        </tr>\n        <tr>\n          <td>Strategy</td>\n          <td>Multiple algorithms for same task</td>\n          <td>Algorithm rarely changes</td>\n        </tr>\n        <tr>\n          <td>Decorator</td>\n          <td>Add features dynamically</td>\n          <td>Static feature set</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Anti-Patterns to Avoid</h3>\n    \n    <ul>\n      <li><strong>God Object:</strong> Class that knows/does too much</li>\n      <li><strong>Spaghetti Code:</strong> Code with complex, tangled control structure</li>\n      <li><strong>Copy-Paste Programming:</strong> Duplicate code instead of abstraction</li>\n      <li><strong>Magic Numbers:</strong> Hardcoded numeric values</li>\n      <li><strong>Premature Optimization:</strong> Optimizing before profiling</li>\n      <li><strong>Reinventing the Wheel:</strong> Creating existing solutions</li>\n    </ul>\n\n    <h3>Pattern Combinations</h3>\n    \n    <p>Patterns often work together:</p>\n    <ul>\n      <li><strong>MVC:</strong> Combines Observer, Strategy, and Composite</li>\n      <li><strong>Abstract Factory + Singleton:</strong> Single factory instance</li>\n      <li><strong>Decorator + Factory:</strong> Factory creates decorated objects</li>\n      <li><strong>Command + Memento:</strong> Undo/redo functionality</li>\n      <li><strong>Strategy + Factory:</strong> Factory selects strategy</li>\n    </ul>\n  `\n}; ","export const bulkhead = {\n  id: 'bulkhead',\n  title: 'Bulkhead Pattern',\n  content: `# Bulkhead Pattern\n\n## Definition\nThe Bulkhead pattern isolates critical resources to prevent failures in one part of the system from affecting other parts.\n\n## Concept Origin\nNamed after ship bulkheads that prevent water from flooding the entire ship if one compartment is breached.\n\n## Types of Bulkheads\n- **Thread Pool Isolation**: Separate thread pools for different operations\n- **Connection Pool Isolation**: Separate database connections\n- **CPU/Memory Isolation**: Resource allocation limits\n- **Network Isolation**: Separate network channels\n- **Service Isolation**: Dedicated service instances\n\n## Implementation Strategies\n- **Resource Partitioning**: Divide resources into isolated pools\n- **Queue Isolation**: Separate message queues\n- **Database Isolation**: Separate database instances\n- **Compute Isolation**: Containers or VMs\n\n## Benefits\n- **Fault Isolation**: Contain failures to specific areas\n- **Resource Protection**: Prevent resource starvation\n- **Performance Isolation**: Maintain SLA for critical functions\n- **Predictable Behavior**: Isolated resource allocation\n- **Easier Debugging**: Clear failure boundaries\n\n## Trade-offs\n- **Resource Overhead**: Additional resource allocation\n- **Complexity**: More components to manage\n- **Cost**: Higher infrastructure costs\n- **Coordination**: Cross-bulkhead communication challenges\n\n## Examples\n- **Thread Pools**: Separate pools for critical vs non-critical tasks\n- **Database Connections**: Read/write connection separation\n- **API Rate Limits**: Per-client or per-service limits\n- **Kubernetes Namespaces**: Resource isolation in clusters\n\n## Monitoring\n- **Resource Utilization**: Track usage per bulkhead\n- **Performance Metrics**: Response times per partition\n- **Failure Rates**: Isolated failure tracking\n- **Capacity Planning**: Resource allocation optimization\n\n## Related Patterns\n- **Circuit Breaker**: Fail fast when bulkhead is full\n- **Retry Pattern**: Retry with different bulkheads\n- **Timeout Pattern**: Prevent resource blocking\n\n## Best Practices\n- **Right-size Bulkheads**: Balance isolation vs efficiency\n- **Monitor Resource Usage**: Track utilization patterns\n- **Graceful Degradation**: Fallback when bulkhead full\n- **Regular Review**: Adjust partitioning based on usage\n\n## Interview Questions\n**Q: When would you use the Bulkhead pattern?**\nA: When you need to isolate critical resources to prevent failures in one area from affecting the entire system, especially in high-availability applications.`\n}; ","export const timeoutPattern = {\n  id: 'timeout-pattern',\n  title: 'Timeout Pattern',\n  content: `# Timeout Pattern\n\n## Definition\nThe Timeout pattern sets a maximum time limit for operations to complete, preventing indefinite blocking and resource exhaustion.\n\n## Types of Timeouts\n- **Connection Timeout**: Time to establish connection\n- **Read Timeout**: Time to read response after connection\n- **Write Timeout**: Time to write request data\n- **Request Timeout**: Total time for entire request\n- **Idle Timeout**: Time before closing idle connections\n\n## Benefits\n- **Resource Protection**: Prevent resource exhaustion\n- **Predictable Behavior**: Known maximum wait times\n- **Better User Experience**: Avoid hanging operations\n- **System Stability**: Prevent cascade failures\n- **Debugging**: Easier to identify slow operations\n\n## Implementation Strategies\n- **Socket Timeouts**: Network-level timeouts\n- **HTTP Client Timeouts**: Request/response timeouts\n- **Database Query Timeouts**: SQL execution limits\n- **Thread Pool Timeouts**: Task execution limits\n- **Application-level Timeouts**: Business logic timeouts\n\n## Timeout Configuration\n- **Conservative**: Longer timeouts for reliability\n- **Aggressive**: Shorter timeouts for responsiveness\n- **Adaptive**: Dynamic timeouts based on conditions\n- **Layered**: Different timeouts at different levels\n\n## Handling Timeout Failures\n- **Graceful Degradation**: Fallback to cached data\n- **Retry with Backoff**: Retry with longer timeouts\n- **Circuit Breaker**: Stop requests after timeouts\n- **User Notification**: Inform users of delays\n\n## Best Practices\n- **Set Appropriate Timeouts**: Balance reliability vs responsiveness\n- **Hierarchical Timeouts**: Shorter timeouts at lower levels\n- **Monitoring**: Track timeout occurrences\n- **Graceful Handling**: Proper cleanup on timeout\n- **Documentation**: Clear timeout policies\n\n## Common Timeout Values\n- **DNS Resolution**: 5-30 seconds\n- **HTTP Requests**: 30-60 seconds\n- **Database Queries**: 30-300 seconds\n- **File Operations**: 30-120 seconds\n- **Network Connections**: 5-30 seconds\n\n## Related Patterns\n- **Circuit Breaker**: Fail fast after timeouts\n- **Retry Pattern**: Retry with adjusted timeouts\n- **Bulkhead Pattern**: Isolate timeout-prone operations\n\n## Monitoring and Alerting\n- **Timeout Frequency**: Track timeout occurrences\n- **Operation Duration**: Monitor operation times\n- **Success Rate**: Measure completion rates\n- **Performance Trends**: Identify degradation patterns\n\n## Interview Questions\n**Q: How do you determine appropriate timeout values?**\nA: Consider operation complexity, network conditions, user expectations, and system capacity while monitoring actual performance patterns.`\n}; ","export const thunderingHerdProblem = {\n  id: 'thundering-herd-problem',\n  title: 'Thundering Herd Problem',\n  content: `\n    <h2>Thundering Herd Problem</h2>\n    <p>The thundering herd problem occurs when multiple processes or threads simultaneously wake up or activate to handle an event, but only one can actually process it, leading to wasted resources and potential system overload.</p>\n    \n    <h3>What is Thundering Herd?</h3>\n    <ul>\n      <li><strong>Definition:</strong> Large number of processes awakened simultaneously to handle single event</li>\n      <li><strong>Waste:</strong> Only one process can handle the event, others waste CPU cycles</li>\n      <li><strong>Contention:</strong> Processes compete for same resource causing lock contention</li>\n      <li><strong>Performance Impact:</strong> System performance degrades due to unnecessary context switching</li>\n    </ul>\n\n    <h3>Common Scenarios</h3>\n    \n    <h4>1. Cache Expiration</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>Scenario:\n1. Popular cache key expires at exactly 12:00:00\n2. 1000 concurrent requests arrive at 12:00:01\n3. All requests find cache miss\n4. All 1000 requests query database simultaneously\n5. Database gets overwhelmed\n6. Only first response needed, others wasted\n\nResult: Database overload, poor response times</code></pre>\n    </div>\n\n    <h4>2. Connection Pool Exhaustion</h4>\n    <ul>\n      <li><strong>Scenario:</strong> All connections in pool are busy</li>\n      <li><strong>Problem:</strong> Many threads wait for connection to become available</li>\n      <li><strong>Issue:</strong> When connection is released, all waiting threads wake up</li>\n      <li><strong>Result:</strong> Only one thread gets connection, others waste cycles</li>\n    </ul>\n\n    <h4>3. File Locking</h4>\n    <ul>\n      <li><strong>Scenario:</strong> Multiple processes waiting for file lock</li>\n      <li><strong>Problem:</strong> When lock is released, all processes wake up</li>\n      <li><strong>Issue:</strong> Only one process can acquire lock</li>\n      <li><strong>Result:</strong> Unnecessary context switching and CPU usage</li>\n    </ul>\n\n    <h3>Real-World Examples</h3>\n    \n    <h4>Web Application Cache</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Problematic code - thundering herd\npublic String getPopularData(String key) {\n    String data = cache.get(key);\n    if (data == null) {\n        // Multiple threads execute this simultaneously\n        data = database.query(key);\n        cache.put(key, data, 3600); // 1 hour TTL\n    }\n    return data;\n}</code></pre>\n    </div>\n\n    <h4>Database Connection Pool</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Problematic pattern\nwhile (true) {\n    Connection conn = pool.getConnection(); // Blocking call\n    if (conn != null) {\n        // Process request\n        break;\n    }\n    // All threads wake up when connection available\n    Thread.sleep(10); // Doesn't solve the problem\n}</code></pre>\n    </div>\n\n    <h3>Solutions and Mitigation Strategies</h3>\n    \n    <h4>1. Cache Stampede Prevention</h4>\n    \n    <h5>Lock-Based Approach</h5>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>private final ConcurrentHashMap<String, Object> locks = new ConcurrentHashMap<>();\n\npublic String getDataWithLock(String key) {\n    String data = cache.get(key);\n    if (data == null) {\n        Object lock = locks.computeIfAbsent(key, k -> new Object());\n        synchronized (lock) {\n            // Double-check after acquiring lock\n            data = cache.get(key);\n            if (data == null) {\n                data = database.query(key);\n                cache.put(key, data, 3600);\n            }\n        }\n        locks.remove(key); // Clean up\n    }\n    return data;\n}</code></pre>\n    </div>\n\n    <h5>Probabilistic Early Expiration</h5>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public String getDataWithProbabilisticRefresh(String key) {\n    CacheItem item = cache.getWithMetadata(key);\n    \n    if (item == null) {\n        return refreshData(key);\n    }\n    \n    // Probabilistic early refresh\n    long timeToExpire = item.expiryTime - System.currentTimeMillis();\n    long totalTTL = item.ttl;\n    \n    // Probability increases as expiry approaches\n    double refreshProbability = Math.exp(-timeToExpire / totalTTL);\n    \n    if (Math.random() < refreshProbability) {\n        // Refresh asynchronously\n        CompletableFuture.runAsync(() -> refreshData(key));\n    }\n    \n    return item.data;\n}</code></pre>\n    </div>\n\n    <h4>2. Jittered Expiration</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Add randomness to cache TTL\npublic void cacheWithJitter(String key, String data, int baseTTL) {\n    // Add random jitter (±20% of base TTL)\n    int jitter = (int) (baseTTL * 0.2 * Math.random());\n    int actualTTL = baseTTL + jitter - (int)(baseTTL * 0.1);\n    \n    cache.put(key, data, actualTTL);\n}</code></pre>\n    </div>\n\n    <h4>3. Queue-Based Processing</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Use queue to serialize access\npublic class ThrottledProcessor {\n    private final BlockingQueue<Request> requestQueue;\n    private final ExecutorService singleThreadExecutor;\n    \n    public ThrottledProcessor() {\n        this.requestQueue = new LinkedBlockingQueue<>();\n        this.singleThreadExecutor = Executors.newSingleThreadExecutor();\n        startProcessor();\n    }\n    \n    private void startProcessor() {\n        singleThreadExecutor.submit(() -> {\n            while (true) {\n                try {\n                    Request request = requestQueue.take();\n                    processRequest(request);\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                    break;\n                }\n            }\n        });\n    }\n}</code></pre>\n    </div>\n\n    <h4>4. Circuit Breaker Pattern</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>public class CircuitBreaker {\n    private enum State { CLOSED, OPEN, HALF_OPEN }\n    \n    private State state = State.CLOSED;\n    private int failureCount = 0;\n    private long lastFailureTime = 0;\n    private final int failureThreshold = 5;\n    private final long timeout = 60000; // 1 minute\n    \n    public String callService(String key) throws Exception {\n        if (state == State.OPEN) {\n            if (System.currentTimeMillis() - lastFailureTime > timeout) {\n                state = State.HALF_OPEN;\n            } else {\n                throw new Exception(\"Circuit breaker is OPEN\");\n            }\n        }\n        \n        try {\n            String result = database.query(key);\n            onSuccess();\n            return result;\n        } catch (Exception e) {\n            onFailure();\n            throw e;\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>System-Level Solutions</h3>\n    \n    <h4>1. Load Balancer Configuration</h4>\n    <ul>\n      <li><strong>Connection Limits:</strong> Limit concurrent connections per backend</li>\n      <li><strong>Request Queuing:</strong> Queue requests instead of rejecting them</li>\n      <li><strong>Health Checks:</strong> Prevent routing to overloaded servers</li>\n      <li><strong>Circuit Breakers:</strong> Fail fast when backend is overloaded</li>\n    </ul>\n\n    <h4>2. Database Optimization</h4>\n    <ul>\n      <li><strong>Connection Pooling:</strong> Proper pool sizing and configuration</li>\n      <li><strong>Query Optimization:</strong> Reduce query execution time</li>\n      <li><strong>Read Replicas:</strong> Distribute read load across replicas</li>\n      <li><strong>Caching Layers:</strong> Multiple levels of caching</li>\n    </ul>\n\n    <h4>3. Infrastructure Scaling</h4>\n    <ul>\n      <li><strong>Auto-scaling:</strong> Automatically scale based on load</li>\n      <li><strong>Resource Limits:</strong> Set appropriate CPU and memory limits</li>\n      <li><strong>Monitoring:</strong> Alert on resource exhaustion</li>\n      <li><strong>Capacity Planning:</strong> Plan for peak loads</li>\n    </ul>\n\n    <h3>Prevention Best Practices</h3>\n    \n    <h4>Cache Design</h4>\n    <ul>\n      <li><strong>Staggered Expiration:</strong> Don't expire all items at once</li>\n      <li><strong>Warm-up Strategies:</strong> Pre-populate cache before expiration</li>\n      <li><strong>Layered Caching:</strong> Multiple cache levels with different TTLs</li>\n      <li><strong>Async Refresh:</strong> Refresh cache asynchronously</li>\n    </ul>\n\n    <h4>Application Design</h4>\n    <ul>\n      <li><strong>Graceful Degradation:</strong> Serve stale data when necessary</li>\n      <li><strong>Rate Limiting:</strong> Limit request rate per client</li>\n      <li><strong>Bulkhead Pattern:</strong> Isolate resources to prevent cascade failures</li>\n      <li><strong>Timeout Configuration:</strong> Set appropriate timeouts</li>\n    </ul>\n\n    <h3>Monitoring and Detection</h3>\n    \n    <h4>Key Metrics</h4>\n    <ul>\n      <li><strong>Response Time Spikes:</strong> Sudden increases in response time</li>\n      <li><strong>Error Rate Increases:</strong> Higher than normal error rates</li>\n      <li><strong>Resource Utilization:</strong> CPU, memory, and I/O spikes</li>\n      <li><strong>Queue Depths:</strong> Growing queues indicate bottlenecks</li>\n    </ul>\n\n    <h4>Alerting</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Example monitoring metrics\npublic class ThunderingHerdMonitor {\n    private final MeterRegistry meterRegistry;\n    private final Counter cacheHits;\n    private final Counter cacheMisses;\n    private final Timer databaseQueryTime;\n    \n    public void recordCacheHit() {\n        cacheHits.increment();\n    }\n    \n    public void recordCacheMiss() {\n        cacheMisses.increment();\n    }\n    \n    public void recordDatabaseQuery(Duration duration) {\n        databaseQueryTime.record(duration);\n    }\n}</code></pre>\n    </div>\n\n    <div class=\"info-note\">\n      <strong>💡 Key Insight:</strong>\n      <p>The thundering herd problem is often a symptom of poor resource management and lack of coordination between concurrent processes. Prevention is better than mitigation - design systems to avoid the conditions that create thundering herds.</p>\n    </div>\n\n    <div class=\"reference-links\">\n      <h4>🔗 Learn More:</h4>\n      <ul>\n        <li><a href=\"https://en.wikipedia.org/wiki/Thundering_herd_problem\" target=\"_blank\">Thundering Herd Problem - Wikipedia</a></li>\n        <li><a href=\"https://instagram-engineering.com/thundering-herds-promises-82191c8af57d\" target=\"_blank\">Instagram Engineering - Thundering Herds & Promises</a></li>\n      </ul>\n    </div>\n  `\n}; ","export const eventStreaming = {\n  id: 'event-streaming',\n  title: 'Event Streaming',\n  content: `# Event Streaming\n\n## Definition\nEvent streaming is the practice of capturing, storing, and processing continuous streams of events in real-time.\n\n## Key Concepts\n- **Event**: A record of something that happened\n- **Stream**: Continuous flow of events\n- **Event Log**: Immutable sequence of events\n- **Stream Processing**: Real-time event analysis\n- **Event Sourcing**: Store events as primary data\n\n## Event Streaming Platforms\n- **Apache Kafka**: Distributed streaming platform\n- **Amazon Kinesis**: AWS managed streaming\n- **Apache Pulsar**: Cloud-native messaging\n- **Google Pub/Sub**: Google Cloud messaging\n- **Azure Event Hubs**: Microsoft streaming service\n\n## Stream Processing\n- **Real-time**: Process events as they arrive\n- **Windowing**: Group events by time windows\n- **Aggregation**: Calculate metrics over streams\n- **Filtering**: Select relevant events\n- **Transformation**: Modify event data\n\n## Event Sourcing Pattern\n- Store events instead of current state\n- Rebuild state by replaying events\n- Complete audit trail\n- Time travel capabilities\n\n## CQRS (Command Query Responsibility Segregation)\n- Separate read and write models\n- Optimize for different access patterns\n- Often used with event sourcing\n\n## Use Cases\n- **Real-time Analytics**: Live dashboards\n- **Fraud Detection**: Immediate threat response\n- **IoT Data Processing**: Sensor data streams\n- **User Activity Tracking**: Behavioral analytics\n- **Microservices Communication**: Event-driven architecture\n\n## Benefits\n- **Scalability**: Handle high-volume data\n- **Real-time Processing**: Immediate insights\n- **Fault Tolerance**: Replay capability\n- **Decoupling**: Loose service coupling\n\n## Challenges\n- **Complexity**: Distributed system challenges\n- **Ordering**: Event sequence guarantees\n- **Exactly-Once Processing**: Difficult to achieve\n- **Schema Evolution**: Handling data changes\n\n## Interview Questions\n**Q: What's the difference between event streaming and traditional messaging?**\nA: Event streaming focuses on continuous data flows and real-time processing, while traditional messaging is more about discrete message exchange.`\n}; ","export const graphql = {\n  id: 'graphql',\n  title: 'GraphQL',\n  content: `# GraphQL\n\n## Definition\nGraphQL is a query language and runtime for APIs that allows clients to request exactly the data they need.\n\n## Key Features\n- **Single Endpoint**: One URL for all operations\n- **Flexible Queries**: Request specific fields\n- **Strong Type System**: Schema-defined types\n- **Real-time**: Subscriptions for live data\n- **Introspection**: Self-documenting\n\n## Core Concepts\n- **Schema**: API structure definition\n- **Types**: Object, Scalar, Enum, Interface, Union\n- **Queries**: Read operations\n- **Mutations**: Write operations\n- **Subscriptions**: Real-time updates\n- **Resolvers**: Functions that fetch data\n\n## GraphQL vs REST\n- **Data Fetching**: Precise vs over/under-fetching\n- **Endpoints**: Single vs multiple\n- **Caching**: Complex vs simple\n- **Learning Curve**: Steep vs gentle\n\n## Example Query\n\\`\\`\\`graphql\nquery {\n  user(id: \"123\") {\n    name\n    email\n    posts {\n      title\n      createdAt\n    }\n  }\n}\n\\`\\`\\`\n\n## Benefits\n- Efficient data loading\n- Strong typing\n- Excellent tooling\n- Backward compatibility\n\n## Challenges\n- Complexity\n- Caching difficulties\n- Query complexity analysis\n- N+1 problem\n\n## Interview Questions\n**Q: What are the main advantages of GraphQL over REST?**\nA: Precise data fetching, single endpoint, strong typing, and better client-server communication.`\n}; ","export const restApi = {\n  id: 'rest-api',\n  title: 'REST API',\n  content: `# REST API (Representational State Transfer)\n\n## Definition\nREST is an architectural style for designing networked applications using stateless communication and standard HTTP methods.\n\n## REST Principles\n- **Stateless**: Each request contains all necessary information\n- **Client-Server**: Separation of concerns\n- **Cacheable**: Responses can be cached\n- **Uniform Interface**: Consistent API design\n- **Layered System**: Hierarchical architecture\n- **Code on Demand**: Optional executable code transfer\n\n## HTTP Methods in REST\n- **GET**: Retrieve resources\n- **POST**: Create new resources\n- **PUT**: Update/replace resources\n- **PATCH**: Partial updates\n- **DELETE**: Remove resources\n\n## Resource Naming\n- Use nouns, not verbs\n- Plural nouns for collections\n- Hierarchical structure\n- Examples: /users, /users/123, /users/123/orders\n\n## Status Codes\n- **200**: OK\n- **201**: Created\n- **204**: No Content\n- **400**: Bad Request\n- **401**: Unauthorized\n- **404**: Not Found\n- **500**: Internal Server Error\n\n## Best Practices\n- Consistent naming conventions\n- Proper status codes\n- Versioning strategy\n- Error handling\n- Documentation\n\n## Interview Questions\n**Q: What makes an API RESTful?**\nA: Following REST principles: stateless, uniform interface, resource-based URLs, and proper HTTP methods.`\n}; ","export const rateLimit = {\n  id: 'rate-limit',\n  title: 'Rate Limiting',\n  content: `# Rate Limiting\n\n## Definition\nRate limiting controls the number of requests a client can make to an API or service within a specific time period.\n\n## Common Algorithms\n- **Token Bucket**: Tokens added at fixed rate, consumed per request\n- **Leaky Bucket**: Requests processed at fixed rate\n- **Fixed Window**: Fixed time windows with request counters\n- **Sliding Window**: Moving time window for more accuracy\n- **Sliding Window Log**: Precise tracking with timestamps\n\n## Token Bucket Algorithm\n1. Bucket holds tokens (capacity limit)\n2. Tokens added at fixed rate\n3. Each request consumes tokens\n4. Reject requests when bucket empty\n\n## Rate Limiting Strategies\n- **Per-User**: Limit per individual user\n- **Per-IP**: Limit per IP address\n- **Per-API Key**: Limit per application\n- **Global**: System-wide rate limits\n- **Tiered**: Different limits for different user types\n\n## Implementation Levels\n- **Application Level**: Code-based rate limiting\n- **Reverse Proxy**: Nginx, HAProxy\n- **API Gateway**: Centralized rate limiting\n- **CDN**: Edge-based rate limiting\n- **Database**: Query rate limiting\n\n## Rate Limit Headers\n- **X-RateLimit-Limit**: Maximum requests allowed\n- **X-RateLimit-Remaining**: Remaining requests\n- **X-RateLimit-Reset**: When limit resets\n- **Retry-After**: When to retry after limit exceeded\n\n## Benefits\n- **DDoS Protection**: Prevent abuse and attacks\n- **Resource Protection**: Prevent system overload\n- **Fair Usage**: Ensure equitable resource access\n- **Cost Control**: Manage infrastructure costs\n- **SLA Compliance**: Maintain service levels\n\n## Response Strategies\n- **Reject**: Return 429 Too Many Requests\n- **Queue**: Queue excess requests\n- **Throttle**: Slow down request processing\n- **Shed Load**: Drop lower priority requests\n\n## Distributed Rate Limiting\n- **Centralized Counter**: Shared state across instances\n- **Redis**: Distributed rate limit storage\n- **Consistent Hashing**: Distribute limits across nodes\n- **Approximate Counting**: Trade accuracy for performance\n\n## Best Practices\n- **Graceful Degradation**: Informative error messages\n- **Monitoring**: Track rate limit hits\n- **Appropriate Limits**: Balance protection vs usability\n- **Whitelisting**: Exempt trusted clients\n- **Burst Handling**: Allow temporary spikes\n\n## Use Cases\n- **API Protection**: Prevent API abuse\n- **Login Attempts**: Prevent brute force attacks\n- **Resource Access**: Limit expensive operations\n- **Spam Prevention**: Control message/post rates\n\n## Interview Questions\n**Q: What's the difference between token bucket and leaky bucket algorithms?**\nA: Token bucket allows bursts up to bucket capacity, while leaky bucket processes requests at a constant rate regardless of arrival pattern.`\n}; ","export const forwardProxy = {\n  id: 'forward-proxy',\n  title: 'Forward Proxy',\n  content: `\n    <h2>Forward Proxy</h2>\n    <p>A forward proxy, often simply called a \"proxy,\" is an intermediary server that sits between client computers and the internet. It acts on behalf of clients, forwarding their requests to web servers and returning the responses. The forward proxy hides the client's identity from the destination server.</p>\n\n    <h3>How Forward Proxy Works</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Forward Proxy Flow\n┌──────────┐     ┌─────────────┐     ┌──────────────┐\n│  Client  │────>│Forward Proxy│────>│ Web Server   │\n│ (Hidden) │<────│             │<────│(Sees Proxy)  │\n└──────────┘     └─────────────┘     └──────────────┘\n     │                  │                    │\n     │   Request to     │    Forward         │\n     │   example.com    │    Request         │\n     │                  │                    │\n     │   Response       │    Return          │\n     │   from proxy     │    Response        │\n     └──────────────────┴────────────────────┘</code></pre>\n    </div>\n\n    <h3>Key Characteristics</h3>\n    \n    <h4>1. Client-Side Configuration</h4>\n    <ul>\n      <li><strong>Explicit Configuration:</strong> Clients must be configured to use the proxy</li>\n      <li><strong>Proxy Settings:</strong> Browser or system-level proxy configuration</li>\n      <li><strong>PAC Files:</strong> Proxy Auto-Configuration for dynamic routing</li>\n      <li><strong>Transparent Proxy:</strong> No client configuration needed (network-level)</li>\n    </ul>\n\n    <h4>2. Anonymity and Privacy</h4>\n    <ul>\n      <li><strong>IP Masking:</strong> Hides client's real IP address</li>\n      <li><strong>Location Spoofing:</strong> Appear to browse from proxy's location</li>\n      <li><strong>Identity Protection:</strong> Prevents tracking by destination servers</li>\n      <li><strong>Request Filtering:</strong> Can remove identifying headers</li>\n    </ul>\n\n    <h3>Types of Forward Proxies</h3>\n    \n    <h4>1. HTTP/HTTPS Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// HTTP Proxy Configuration Example\n// Browser settings\n{\n  \"http_proxy\": \"http://proxy.company.com:8080\",\n  \"https_proxy\": \"http://proxy.company.com:8080\",\n  \"no_proxy\": \"localhost,127.0.0.1,*.internal.company.com\"\n}\n\n// Environment variables (Linux/Mac)\nexport HTTP_PROXY=http://proxy.company.com:8080\nexport HTTPS_PROXY=http://proxy.company.com:8080\nexport NO_PROXY=localhost,127.0.0.1,internal.company.com\n\n// PAC file example\nfunction FindProxyForURL(url, host) {\n  // Direct connection for internal sites\n  if (isInNet(host, \"10.0.0.0\", \"255.0.0.0\")) {\n    return \"DIRECT\";\n  }\n  \n  // Use proxy for external sites\n  return \"PROXY proxy.company.com:8080\";\n}</code></pre>\n    </div>\n\n    <h4>2. SOCKS Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// SOCKS5 Proxy Client Configuration\nimport socks\nimport socket\nimport requests\n\n# Configure SOCKS5 proxy\nsocks.set_default_proxy(\n    socks.SOCKS5, \n    \"proxy.example.com\", \n    1080,\n    username=\"user\",\n    password=\"pass\"\n)\nsocket.socket = socks.socksocket\n\n# Now all connections go through SOCKS proxy\nresponse = requests.get('https://api.example.com/data')\n\n// SSH as SOCKS proxy\n// Create SOCKS proxy through SSH tunnel\nssh -D 1080 -f -C -q -N user@remote-server.com\n\n// Configure application to use localhost:1080 as SOCKS proxy</code></pre>\n    </div>\n\n    <h4>3. Transparent Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Transparent Proxy Setup (iptables)\n# Redirect all HTTP traffic to proxy\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 \\\n  -j REDIRECT --to-port 3128\n\n# Redirect HTTPS traffic\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 \\\n  -j REDIRECT --to-port 3129\n\n// Squid Transparent Proxy Configuration\nhttp_port 3128 transparent\nhttps_port 3129 transparent ssl-bump \\\n  cert=/etc/squid/ssl_cert/myCA.pem\n\n# SSL Bump for HTTPS inspection\nssl_bump peek all\nssl_bump bump all</code></pre>\n    </div>\n\n    <h3>Common Use Cases</h3>\n    \n    <h4>1. Corporate Internet Access Control</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Squid Proxy Access Control\n# Define ACLs\nacl company_network src 192.168.0.0/16\nacl business_hours time MTWHF 08:00-18:00\nacl blocked_sites dstdomain .facebook.com .youtube.com\nacl allowed_categories urlpath_regex -i \\\n  business education technology\n\n# Apply rules\nhttp_access deny blocked_sites\nhttp_access allow company_network business_hours\nhttp_access deny all\n\n# Bandwidth management\ndelay_pools 1\ndelay_class 1 2\ndelay_parameters 1 -1/-1 100000/100000  # 100KB/s per user\ndelay_access 1 allow company_network</code></pre>\n    </div>\n\n    <h4>2. Content Filtering and Security</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Content Filtering Implementation\nclass ContentFilterProxy:\n    def __init__(self):\n        self.blocked_keywords = [\n            'gambling', 'adult', 'malware'\n        ]\n        self.blocked_domains = set()\n        self.load_blocklist()\n    \n    def filter_request(self, request):\n        url = request.url\n        \n        # Check domain blocklist\n        if self.is_blocked_domain(url):\n            return self.block_response(\"Domain blocked\")\n        \n        # Check URL keywords\n        if self.contains_blocked_keyword(url):\n            return self.block_response(\"Content filtered\")\n        \n        # Check content type\n        if self.is_dangerous_file(request):\n            return self.block_response(\"File type blocked\")\n        \n        # Scan for malware (integrate with AV)\n        if self.scan_for_malware(request):\n            return self.block_response(\"Malware detected\")\n        \n        return None  # Allow request\n    \n    def filter_response(self, response):\n        # Remove ads\n        response = self.remove_ads(response)\n        \n        # Filter inappropriate content\n        response = self.filter_content(response)\n        \n        # Add security headers\n        response.headers['X-Content-Type-Options'] = 'nosniff'\n        response.headers['X-Frame-Options'] = 'DENY'\n        \n        return response</code></pre>\n    </div>\n\n    <h4>3. Caching for Performance</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Squid Caching Configuration\n# Cache directory (10GB cache)\ncache_dir ufs /var/cache/squid 10000 16 256\n\n# Memory cache\ncache_mem 256 MB\nmaximum_object_size_in_memory 512 KB\n\n# Disk cache object size\nmaximum_object_size 100 MB\nminimum_object_size 0 KB\n\n# Cache replacement policy\ncache_replacement_policy lru\n\n# Refresh patterns\nrefresh_pattern ^ftp:       1440    20%     10080\nrefresh_pattern ^gopher:    1440    0%      1440\nrefresh_pattern -i (/cgi-bin/|\\\\?) 0 0% 0\nrefresh_pattern \\\\.(jpg|jpeg|png|gif|ico)$ 10080 90% 43200\nrefresh_pattern \\\\.(css|js)$ 1440 40% 40320\nrefresh_pattern .           0       20%     4320\n\n# Cache peer (parent proxy)\ncache_peer parent.proxy.com parent 8080 0 \\\n  no-query default login=user:pass</code></pre>\n    </div>\n\n    <h4>4. Bypassing Geo-Restrictions</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Proxy Chaining for Geo-Bypass\n// Client → Proxy1 (US) → Proxy2 (UK) → Target\n\n// ProxyChains Configuration\n# proxychains.conf\nstrict_chain\nproxy_dns\ntcp_read_time_out 15000\ntcp_connect_time_out 8000\n\n[ProxyList]\n# US Proxy\nhttp 192.168.1.100 8080 user pass\n# UK Proxy  \nsocks5 10.10.10.10 1080 user pass\n\n// Python implementation\nimport requests\n\nproxies = {\n    'http': 'http://us-proxy.example.com:8080',\n    'https': 'https://us-proxy.example.com:8080'\n}\n\n# Access geo-restricted content\nresponse = requests.get(\n    'https://uk-only-service.com/content',\n    proxies=proxies\n)</code></pre>\n    </div>\n\n    <h3>Implementation Examples</h3>\n    \n    <h4>1. Simple HTTP Proxy Server (Node.js)</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>const http = require('http');\nconst https = require('https');\nconst url = require('url');\n\nclass ForwardProxy {\n  constructor(port = 8080) {\n    this.port = port;\n    this.server = http.createServer(this.handleRequest.bind(this));\n    this.server.on('connect', this.handleConnect.bind(this));\n  }\n  \n  // Handle HTTP requests\n  handleRequest(clientReq, clientRes) {\n    console.log(\\`Proxying: \\${clientReq.url}\\`);\n    \n    const parsedUrl = url.parse(clientReq.url);\n    const options = {\n      hostname: parsedUrl.hostname,\n      port: parsedUrl.port || 80,\n      path: parsedUrl.path,\n      method: clientReq.method,\n      headers: clientReq.headers\n    };\n    \n    // Forward request\n    const proxyReq = http.request(options, (proxyRes) => {\n      clientRes.writeHead(proxyRes.statusCode, proxyRes.headers);\n      proxyRes.pipe(clientRes);\n    });\n    \n    proxyReq.on('error', (err) => {\n      clientRes.writeHead(500);\n      clientRes.end('Proxy Error: ' + err.message);\n    });\n    \n    clientReq.pipe(proxyReq);\n  }\n  \n  // Handle HTTPS CONNECT method\n  handleConnect(req, clientSocket, head) {\n    const [hostname, port] = req.url.split(':');\n    console.log(\\`CONNECT \\${hostname}:\\${port}\\`);\n    \n    const serverSocket = net.connect(port || 443, hostname, () => {\n      clientSocket.write('HTTP/1.1 200 Connection Established\\\\r\\\\n\\\\r\\\\n');\n      serverSocket.write(head);\n      serverSocket.pipe(clientSocket);\n      clientSocket.pipe(serverSocket);\n    });\n    \n    serverSocket.on('error', (err) => {\n      clientSocket.end('HTTP/1.1 500 Internal Server Error\\\\r\\\\n\\\\r\\\\n');\n    });\n  }\n  \n  start() {\n    this.server.listen(this.port, () => {\n      console.log(\\`Forward proxy listening on port \\${this.port}\\`);\n    });\n  }\n}\n\n// Usage\nconst proxy = new ForwardProxy(8080);\nproxy.start();</code></pre>\n    </div>\n\n    <h4>2. Authenticated Proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Proxy with Authentication\nclass AuthenticatedProxy extends ForwardProxy {\n  constructor(port, users) {\n    super(port);\n    this.users = users; // { username: password }\n  }\n  \n  authenticate(req) {\n    const auth = req.headers['proxy-authorization'];\n    if (!auth) return false;\n    \n    const [type, credentials] = auth.split(' ');\n    if (type !== 'Basic') return false;\n    \n    const [username, password] = Buffer.from(credentials, 'base64')\n      .toString().split(':');\n    \n    return this.users[username] === password;\n  }\n  \n  handleRequest(clientReq, clientRes) {\n    // Check authentication\n    if (!this.authenticate(clientReq)) {\n      clientRes.writeHead(407, {\n        'Proxy-Authenticate': 'Basic realm=\"Proxy Authentication\"'\n      });\n      clientRes.end('Proxy Authentication Required');\n      return;\n    }\n    \n    // Continue with proxying\n    super.handleRequest(clientReq, clientRes);\n  }\n}\n\n// Usage with authentication\nconst proxy = new AuthenticatedProxy(8080, {\n  'user1': 'password1',\n  'user2': 'password2'\n});\nproxy.start();</code></pre>\n    </div>\n\n    <h3>Security Considerations</h3>\n    \n    <h4>1. SSL/TLS Interception</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// SSL Bumping Configuration (Squid)\n# Generate CA certificate\nopenssl req -new -newkey rsa:2048 -days 365 -nodes \\\n  -x509 -keyout myCA.pem -out myCA.pem\n\n# Configure SSL bumping\nhttps_port 3129 intercept ssl-bump \\\n  cert=/etc/squid/ssl_cert/myCA.pem \\\n  generate-host-certificates=on \\\n  dynamic_cert_mem_cache_size=4MB\n\n# SSL bump rules\nacl step1 at_step SslBump1\nssl_bump peek step1\nssl_bump bump all\n\n# Splice financial sites (don't decrypt)\nacl banks ssl::server_name .bank.com .paypal.com\nssl_bump splice banks</code></pre>\n    </div>\n\n    <h4>2. Logging and Privacy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Privacy-Conscious Logging\nclass PrivacyProxy {\n  logRequest(req) {\n    // Hash IP addresses for privacy\n    const hashedIp = crypto.createHash('sha256')\n      .update(req.connection.remoteAddress)\n      .digest('hex').substring(0, 16);\n    \n    // Log without sensitive data\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      clientId: hashedIp,\n      method: req.method,\n      domain: new URL(req.url).hostname,\n      // Don't log full URLs or parameters\n      statusCode: null,\n      responseTime: null\n    };\n    \n    // Rotate logs daily\n    this.writeToRotatingLog(logEntry);\n  }\n  \n  // Implement log rotation\n  writeToRotatingLog(entry) {\n    const date = new Date().toISOString().split('T')[0];\n    const logFile = \\`proxy-\\${date}.log\\`;\n    fs.appendFileSync(logFile, JSON.stringify(entry) + '\\\\n');\n  }\n}</code></pre>\n    </div>\n\n    <h3>Performance Optimization</h3>\n    \n    <h4>1. Connection Pooling</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// HTTP Agent with Keep-Alive\nconst http = require('http');\nconst https = require('https');\n\n// Create agents with connection pooling\nconst httpAgent = new http.Agent({\n  keepAlive: true,\n  keepAliveMsecs: 1000,\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 60000\n});\n\nconst httpsAgent = new https.Agent({\n  keepAlive: true,\n  keepAliveMsecs: 1000,\n  maxSockets: 100,\n  maxFreeSockets: 10,\n  timeout: 60000\n});\n\n// Use in proxy\nfunction proxyRequest(targetUrl, options) {\n  const agent = targetUrl.startsWith('https') \n    ? httpsAgent \n    : httpAgent;\n  \n  return fetch(targetUrl, {\n    ...options,\n    agent: agent\n  });\n}</code></pre>\n    </div>\n\n    <h4>2. Caching Implementation</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// In-Memory Cache for Proxy\nclass CachingProxy {\n  constructor() {\n    this.cache = new Map();\n    this.cacheStats = {\n      hits: 0,\n      misses: 0,\n      size: 0\n    };\n  }\n  \n  getCacheKey(req) {\n    return \\`\\${req.method}:\\${req.url}\\`;\n  }\n  \n  isCacheable(req, res) {\n    // Only cache GET requests\n    if (req.method !== 'GET') return false;\n    \n    // Check response headers\n    const cacheControl = res.headers['cache-control'];\n    if (cacheControl && cacheControl.includes('no-cache')) {\n      return false;\n    }\n    \n    // Only cache successful responses\n    return res.statusCode === 200;\n  }\n  \n  async handleRequest(req, res) {\n    const key = this.getCacheKey(req);\n    \n    // Check cache\n    if (this.cache.has(key)) {\n      const cached = this.cache.get(key);\n      if (cached.expires > Date.now()) {\n        this.cacheStats.hits++;\n        return this.serveCached(res, cached);\n      }\n      this.cache.delete(key);\n    }\n    \n    this.cacheStats.misses++;\n    \n    // Proxy request\n    const response = await this.forwardRequest(req);\n    \n    // Cache if appropriate\n    if (this.isCacheable(req, response)) {\n      this.cacheResponse(key, response);\n    }\n    \n    return response;\n  }\n}</code></pre>\n    </div>\n\n    <h3>Proxy vs VPN Comparison</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th>Forward Proxy</th>\n          <th>VPN</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Protocol Level</td>\n          <td>Application (HTTP/HTTPS)</td>\n          <td>Network (All traffic)</td>\n        </tr>\n        <tr>\n          <td>Encryption</td>\n          <td>Optional</td>\n          <td>Always encrypted</td>\n        </tr>\n        <tr>\n          <td>Configuration</td>\n          <td>Per-application</td>\n          <td>System-wide</td>\n        </tr>\n        <tr>\n          <td>Performance</td>\n          <td>Generally faster</td>\n          <td>More overhead</td>\n        </tr>\n        <tr>\n          <td>Anonymity</td>\n          <td>IP masking only</td>\n          <td>Full tunnel encryption</td>\n        </tr>\n        <tr>\n          <td>Use Case</td>\n          <td>Web browsing, API calls</td>\n          <td>All network traffic</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Best Practices</h3>\n    \n    <ol>\n      <li><strong>Authentication:</strong> Always use authentication in production</li>\n      <li><strong>Encryption:</strong> Use HTTPS between client and proxy</li>\n      <li><strong>Logging:</strong> Log appropriately, respecting privacy</li>\n      <li><strong>Access Control:</strong> Implement proper ACLs</li>\n      <li><strong>Rate Limiting:</strong> Prevent abuse and ensure fair usage</li>\n      <li><strong>Monitoring:</strong> Track performance and usage metrics</li>\n      <li><strong>Updates:</strong> Keep proxy software updated</li>\n      <li><strong>Fail-Safe:</strong> Have bypass mechanisms for critical services</li>\n    </ol>\n\n    <h3>Common Issues and Solutions</h3>\n    \n    <h4>1. Proxy Detection and Blocking</h4>\n    <ul>\n      <li><strong>Issue:</strong> Some websites detect and block proxy usage</li>\n      <li><strong>Solution:</strong> Use residential proxies, rotate IPs, modify headers</li>\n    </ul>\n\n    <h4>2. Performance Degradation</h4>\n    <ul>\n      <li><strong>Issue:</strong> Proxy becomes bottleneck</li>\n      <li><strong>Solution:</strong> Implement caching, connection pooling, load balancing</li>\n    </ul>\n\n    <h4>3. SSL Certificate Issues</h4>\n    <ul>\n      <li><strong>Issue:</strong> Certificate warnings with SSL interception</li>\n      <li><strong>Solution:</strong> Properly deploy CA certificates, use certificate pinning exceptions</li>\n    </ul>\n  `\n}; ","export const reverseProxy = {\n  id: 'reverse-proxy',\n  title: 'Reverse Proxy',\n  content: `\n    <h2>Reverse Proxy</h2>\n    <p>A reverse proxy is a server that sits between clients (users) and backend servers, forwarding client requests to the appropriate backend server and then returning the server's response to the client. Unlike a forward proxy that acts on behalf of clients, a reverse proxy acts on behalf of servers.</p>\n\n    <h3>How Reverse Proxy Works</h3>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Reverse Proxy Architecture\n┌────────────┐      ┌────────────────┐      ┌─────────────┐\n│   Client   │      │ Reverse Proxy  │      │  Backend    │\n│ (Browser)  │─────>│   (Public IP)  │─────>│  Servers    │\n│            │<─────│                │<─────│ (Private)   │\n└────────────┘      └────────────────┘      └─────────────┘\n                            │\n                    ┌───────┴────────┐\n                    │                │\n              ┌─────▼────┐    ┌─────▼────┐\n              │ Server 1 │    │ Server 2 │\n              └──────────┘    └──────────┘</code></pre>\n    </div>\n\n    <h3>Key Functions of Reverse Proxy</h3>\n    \n    <h4>1. Load Balancing</h4>\n    <p>Distributes incoming requests across multiple backend servers.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Nginx Load Balancing Configuration\nupstream backend_servers {\n    # Round-robin load balancing (default)\n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n    server backend3.example.com:8080;\n    \n    # Weighted load balancing\n    server backend4.example.com:8080 weight=3;\n    server backend5.example.com:8080 weight=1;\n    \n    # Backup server\n    server backup.example.com:8080 backup;\n    \n    # Health check\n    server backend6.example.com:8080 max_fails=3 fail_timeout=30s;\n}\n\nserver {\n    listen 80;\n    server_name example.com;\n    \n    location / {\n        proxy_pass http://backend_servers;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. SSL Termination</h4>\n    <p>Handles SSL/TLS encryption and decryption, relieving backend servers of this computational burden.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// SSL Termination Configuration\nserver {\n    listen 443 ssl http2;\n    server_name secure.example.com;\n    \n    # SSL Configuration\n    ssl_certificate /etc/ssl/certs/example.com.crt;\n    ssl_certificate_key /etc/ssl/private/example.com.key;\n    \n    # SSL Optimization\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;\n    ssl_prefer_server_ciphers on;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n    \n    # HSTS\n    add_header Strict-Transport-Security \"max-age=63072000\" always;\n    \n    location / {\n        # Backend servers receive HTTP traffic\n        proxy_pass http://backend_servers;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}</code></pre>\n    </div>\n\n    <h4>3. Caching</h4>\n    <p>Stores frequently requested content to reduce backend load.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Caching Configuration\nproxy_cache_path /var/cache/nginx levels=1:2 \n                 keys_zone=my_cache:10m max_size=10g \n                 inactive=60m use_temp_path=off;\n\nserver {\n    listen 80;\n    server_name cached.example.com;\n    \n    location / {\n        proxy_cache my_cache;\n        proxy_cache_key \"$scheme$request_method$host$request_uri\";\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 404 1m;\n        proxy_cache_valid any 1m;\n        \n        # Cache bypass conditions\n        proxy_cache_bypass $http_pragma $http_authorization;\n        \n        # Add cache status header\n        add_header X-Cache-Status $upstream_cache_status;\n        \n        proxy_pass http://backend_servers;\n    }\n    \n    # Cache purging endpoint\n    location ~ /purge(/.*) {\n        allow 127.0.0.1;\n        deny all;\n        proxy_cache_purge my_cache \"$scheme$request_method$host$1\";\n    }\n}</code></pre>\n    </div>\n\n    <h4>4. Security and Access Control</h4>\n    <p>Acts as a shield, hiding backend server details and implementing security policies.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Security Configuration\nserver {\n    listen 80;\n    server_name secure.example.com;\n    \n    # Rate limiting\n    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;\n    limit_conn_zone $binary_remote_addr zone=addr:10m;\n    \n    # IP whitelisting/blacklisting\n    geo $blocked_ip {\n        default         0;\n        192.168.1.0/24  0;  # Whitelist\n        10.0.0.0/8      0;  # Whitelist\n        123.456.789.0   1;  # Blacklist\n    }\n    \n    location /api {\n        # Check if IP is blocked\n        if ($blocked_ip) {\n            return 403;\n        }\n        \n        # Apply rate limiting\n        limit_req zone=api_limit burst=20 nodelay;\n        limit_conn addr 10;\n        \n        # Security headers\n        add_header X-Frame-Options \"SAMEORIGIN\";\n        add_header X-Content-Type-Options \"nosniff\";\n        add_header X-XSS-Protection \"1; mode=block\";\n        add_header Content-Security-Policy \"default-src 'self'\";\n        \n        # Hide backend server info\n        proxy_hide_header Server;\n        proxy_hide_header X-Powered-By;\n        \n        proxy_pass http://backend_servers;\n    }\n}</code></pre>\n    </div>\n\n    <h3>Load Balancing Algorithms</h3>\n    \n    <h4>1. Round Robin</h4>\n    <p>Requests are distributed sequentially to each server.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Round Robin Example\nRequest 1 → Server A\nRequest 2 → Server B\nRequest 3 → Server C\nRequest 4 → Server A  // Cycle repeats\nRequest 5 → Server B\nRequest 6 → Server C</code></pre>\n    </div>\n\n    <h4>2. Least Connections</h4>\n    <p>Routes requests to the server with the fewest active connections.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Nginx Least Connections\nupstream backend {\n    least_conn;\n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n    server backend3.example.com:8080;\n}</code></pre>\n    </div>\n\n    <h4>3. IP Hash</h4>\n    <p>Routes requests from the same client IP to the same server (session persistence).</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// IP Hash Configuration\nupstream backend {\n    ip_hash;\n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n    server backend3.example.com:8080;\n}\n\n// How it works:\n// hash(client_ip) % num_servers = server_index\n// 192.168.1.100 → always goes to Server 2\n// 192.168.1.101 → always goes to Server 1</code></pre>\n    </div>\n\n    <h4>4. Weighted Round Robin</h4>\n    <p>Distributes more requests to servers with higher weights.</p>\n    \n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Weighted Distribution\nupstream backend {\n    server backend1.example.com:8080 weight=5;  # 50% of requests\n    server backend2.example.com:8080 weight=3;  # 30% of requests\n    server backend3.example.com:8080 weight=2;  # 20% of requests\n}</code></pre>\n    </div>\n\n    <h3>Advanced Features</h3>\n    \n    <h4>1. Content-Based Routing</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Route based on URL path\nserver {\n    listen 80;\n    \n    location /api {\n        proxy_pass http://api_servers;\n    }\n    \n    location /images {\n        proxy_pass http://image_servers;\n    }\n    \n    location /videos {\n        proxy_pass http://video_servers;\n    }\n    \n    location / {\n        proxy_pass http://web_servers;\n    }\n}\n\n// Route based on headers\nmap $http_accept $backend_pool {\n    ~*json    api_servers;\n    ~*html    web_servers;\n    default   web_servers;\n}\n\nserver {\n    location / {\n        proxy_pass http://$backend_pool;\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Request/Response Modification</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Modify requests and responses\nserver {\n    location / {\n        # Add custom headers to request\n        proxy_set_header X-Custom-Header \"value\";\n        proxy_set_header Authorization \"Bearer $http_x_auth_token\";\n        \n        # Remove sensitive headers from request\n        proxy_set_header Cookie \"\";\n        \n        # Modify response headers\n        proxy_hide_header X-Powered-By;\n        add_header X-Served-By \"Reverse-Proxy-01\";\n        \n        # Rewrite URLs in response\n        sub_filter 'http://backend.internal' 'https://example.com';\n        sub_filter_once off;\n        \n        proxy_pass http://backend;\n    }\n}</code></pre>\n    </div>\n\n    <h4>3. WebSocket Support</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// WebSocket Proxy Configuration\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\n\nserver {\n    listen 80;\n    \n    location /ws {\n        proxy_pass http://websocket_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        \n        # WebSocket specific timeouts\n        proxy_connect_timeout 7d;\n        proxy_send_timeout 7d;\n        proxy_read_timeout 7d;\n    }\n}</code></pre>\n    </div>\n\n    <h4>4. Health Checks</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Active Health Checks (Nginx Plus)\nupstream backend {\n    zone backend 64k;\n    \n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n    server backend3.example.com:8080;\n    \n    # Health check configuration\n    health_check interval=5s fails=3 passes=2 uri=/health;\n}\n\n// Passive Health Checks (Open Source Nginx)\nupstream backend {\n    server backend1.example.com:8080 max_fails=3 fail_timeout=30s;\n    server backend2.example.com:8080 max_fails=3 fail_timeout=30s;\n}\n\n// Custom health check endpoint\nlocation /health {\n    access_log off;\n    return 200 \"healthy\\\\n\";\n    add_header Content-Type text/plain;\n}</code></pre>\n    </div>\n\n    <h3>Implementation Examples</h3>\n    \n    <h4>1. HAProxy Configuration</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># HAProxy Reverse Proxy Configuration\nglobal\n    maxconn 4096\n    log /dev/log local0\n    chroot /var/lib/haproxy\n    user haproxy\n    group haproxy\n    daemon\n\ndefaults\n    log     global\n    mode    http\n    option  httplog\n    option  dontlognull\n    timeout connect 5000\n    timeout client  50000\n    timeout server  50000\n\nfrontend web_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/site.pem\n    \n    # ACL definitions\n    acl is_websocket hdr(Upgrade) -i WebSocket\n    acl is_api path_beg /api\n    \n    # Use different backends\n    use_backend websocket_backend if is_websocket\n    use_backend api_backend if is_api\n    default_backend web_backend\n\nbackend web_backend\n    balance roundrobin\n    option httpchk GET /health\n    http-check expect status 200\n    \n    server web1 192.168.1.10:8080 check\n    server web2 192.168.1.11:8080 check\n    server web3 192.168.1.12:8080 check backup\n\nbackend api_backend\n    balance leastconn\n    \n    # Retry policy\n    retry-on all-retryable-errors\n    retries 3\n    \n    # Add custom headers\n    http-request set-header X-Forwarded-Port %[dst_port]\n    http-request add-header X-Real-IP %[src]\n    \n    server api1 192.168.2.10:8080 check\n    server api2 192.168.2.11:8080 check\n\nbackend websocket_backend\n    balance source\n    \n    server ws1 192.168.3.10:8080 check\n    server ws2 192.168.3.11:8080 check</code></pre>\n    </div>\n\n    <h4>2. Apache mod_proxy</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code># Apache Reverse Proxy Configuration\n<VirtualHost *:80>\n    ServerName example.com\n    \n    # Enable proxy modules\n    ProxyRequests Off\n    ProxyPreserveHost On\n    \n    # Load balancing with mod_proxy_balancer\n    <Proxy \"balancer://mycluster\">\n        BalancerMember \"http://backend1.example.com:8080\" route=1\n        BalancerMember \"http://backend2.example.com:8080\" route=2\n        BalancerMember \"http://backend3.example.com:8080\" route=3\n        \n        # Sticky sessions\n        ProxySet stickysession=ROUTEID\n    </Proxy>\n    \n    # Proxy rules\n    ProxyPass \"/\" \"balancer://mycluster/\"\n    ProxyPassReverse \"/\" \"balancer://mycluster/\"\n    \n    # Headers\n    RequestHeader set X-Forwarded-Proto \"http\"\n    RequestHeader set X-Forwarded-Port \"80\"\n    \n    # Error handling\n    ProxyErrorOverride On\n    ErrorDocument 503 /maintenance.html\n</VirtualHost>\n\n# SSL Virtual Host\n<VirtualHost *:443>\n    ServerName example.com\n    \n    SSLEngine on\n    SSLCertificateFile /etc/ssl/certs/example.crt\n    SSLCertificateKeyFile /etc/ssl/private/example.key\n    \n    # Same proxy configuration as above\n    ProxyPass \"/\" \"balancer://mycluster/\"\n    ProxyPassReverse \"/\" \"balancer://mycluster/\"\n    \n    RequestHeader set X-Forwarded-Proto \"https\"\n    RequestHeader set X-Forwarded-Port \"443\"\n</VirtualHost></code></pre>\n    </div>\n\n    <h3>Performance Optimization</h3>\n    \n    <h4>1. Connection Pooling</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Nginx keepalive connections\nupstream backend {\n    server backend1.example.com:8080;\n    server backend2.example.com:8080;\n    \n    # Maintain persistent connections\n    keepalive 32;\n    keepalive_timeout 60s;\n    keepalive_requests 100;\n}\n\nserver {\n    location / {\n        proxy_pass http://backend;\n        \n        # Enable keepalive for upstream\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Compression</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Enable compression\nserver {\n    # Gzip compression\n    gzip on;\n    gzip_vary on;\n    gzip_min_length 1024;\n    gzip_types text/plain text/css text/xml text/javascript \n               application/json application/javascript application/xml+rss;\n    gzip_disable \"MSIE [1-6]\\\\.\";\n    \n    # Brotli compression (if module available)\n    brotli on;\n    brotli_comp_level 6;\n    brotli_types text/plain text/css text/xml text/javascript \n                 application/json application/javascript application/xml+rss;\n}</code></pre>\n    </div>\n\n    <h4>3. Buffer Optimization</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Buffer settings for better performance\nserver {\n    location / {\n        # Buffering settings\n        proxy_buffering on;\n        proxy_buffer_size 4k;\n        proxy_buffers 8 4k;\n        proxy_busy_buffers_size 8k;\n        \n        # For large responses\n        proxy_max_temp_file_size 1024m;\n        \n        # Timeouts\n        proxy_connect_timeout 60s;\n        proxy_send_timeout 60s;\n        proxy_read_timeout 60s;\n        \n        proxy_pass http://backend;\n    }\n}</code></pre>\n    </div>\n\n    <h3>Monitoring and Logging</h3>\n    \n    <h4>1. Access Logging</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Custom log format\nlog_format proxy_log '$remote_addr - $remote_user [$time_local] '\n                     '\"$request\" $status $body_bytes_sent '\n                     '\"$http_referer\" \"$http_user_agent\" '\n                     'rt=$request_time uct=\"$upstream_connect_time\" '\n                     'uht=\"$upstream_header_time\" urt=\"$upstream_response_time\" '\n                     'us=\"$upstream_status\" cs=$upstream_cache_status';\n\nserver {\n    access_log /var/log/nginx/proxy_access.log proxy_log;\n    \n    location / {\n        proxy_pass http://backend;\n    }\n}</code></pre>\n    </div>\n\n    <h4>2. Metrics and Monitoring</h4>\n    <div class=\"code-block\">\n      <div class=\"code-label\">CODE</div>\n      <pre><code>// Nginx status endpoint\nserver {\n    listen 8080;\n    server_name localhost;\n    \n    location /nginx_status {\n        stub_status on;\n        access_log off;\n        allow 127.0.0.1;\n        deny all;\n    }\n}\n\n// Prometheus metrics (with nginx-prometheus-exporter)\nserver {\n    listen 9113;\n    \n    location /metrics {\n        content_by_lua_block {\n            metric_connections:set(ngx.var.connections_active, \n                                 {\"active\"})\n            metric_requests:inc(1, {ngx.var.server_name, \n                                  ngx.var.status})\n            prometheus:collect()\n        }\n    }\n}</code></pre>\n    </div>\n\n    <h3>Common Use Cases</h3>\n    \n    <h4>1. Microservices Gateway</h4>\n    <ul>\n      <li>Single entry point for multiple services</li>\n      <li>Service discovery integration</li>\n      <li>Request routing based on paths</li>\n      <li>Authentication and authorization</li>\n    </ul>\n\n    <h4>2. CDN Origin Shield</h4>\n    <ul>\n      <li>Cache frequently accessed content</li>\n      <li>Reduce origin server load</li>\n      <li>Geographic distribution</li>\n      <li>DDoS protection</li>\n    </ul>\n\n    <h4>3. Application Delivery Controller</h4>\n    <ul>\n      <li>SSL/TLS termination</li>\n      <li>Compression and optimization</li>\n      <li>Content switching</li>\n      <li>Application firewall</li>\n    </ul>\n\n    <h3>Reverse Proxy vs Load Balancer</h3>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th>Reverse Proxy</th>\n          <th>Load Balancer</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Primary Purpose</td>\n          <td>Request forwarding & caching</td>\n          <td>Distribute load</td>\n        </tr>\n        <tr>\n          <td>Layer</td>\n          <td>Layer 7 (Application)</td>\n          <td>Layer 4 or 7</td>\n        </tr>\n        <tr>\n          <td>Content Awareness</td>\n          <td>Yes</td>\n          <td>Sometimes</td>\n        </tr>\n        <tr>\n          <td>Caching</td>\n          <td>Common feature</td>\n          <td>Not typical</td>\n        </tr>\n        <tr>\n          <td>SSL Termination</td>\n          <td>Common</td>\n          <td>Optional</td>\n        </tr>\n        <tr>\n          <td>URL Rewriting</td>\n          <td>Yes</td>\n          <td>Limited</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <h3>Best Practices</h3>\n    \n    <ol>\n      <li><strong>Security Headers:</strong> Always add security headers</li>\n      <li><strong>Health Checks:</strong> Implement proper health checking</li>\n      <li><strong>Logging:</strong> Log enough detail for debugging</li>\n      <li><strong>Timeouts:</strong> Set appropriate timeout values</li>\n      <li><strong>Caching:</strong> Cache static content aggressively</li>\n      <li><strong>Monitoring:</strong> Monitor performance metrics</li>\n      <li><strong>Failover:</strong> Plan for backend failures</li>\n      <li><strong>Rate Limiting:</strong> Protect against abuse</li>\n    </ol>\n  `\n}; ","export const webServer = {\n  id: 'web-server',\n  title: 'Web Server',\n  content: `# Web Server\n\n## Definition\nA web server is a computer system that hosts websites and serves web pages to users over the internet or an intranet.\n\n## Key Concepts\n- **HTTP/HTTPS Processing**: Handles HTTP requests and returns responses\n- **Static Content**: Serves static files (HTML, CSS, JavaScript, images)\n- **Dynamic Content**: Can process server-side scripts and applications\n- **Port Management**: Typically listens on port 80 (HTTP) or 443 (HTTPS)\n\n## Common Web Servers\n- **Apache HTTP Server**: Open-source, widely used\n- **Nginx**: High-performance, reverse proxy capabilities\n- **IIS**: Microsoft's web server for Windows\n- **Tomcat**: Java-based application server\n\n## Basic Functionality\n1. Listen for incoming HTTP requests\n2. Parse and process requests\n3. Generate or retrieve appropriate responses\n4. Send responses back to clients\n\n## Interview Questions\n**Q: What is the difference between a web server and an application server?**\nA: A web server primarily serves static content and handles HTTP requests, while an application server can execute business logic and dynamic applications.\n\n**Q: How does a web server handle multiple concurrent requests?**\nA: Through various models like multi-threading, event-driven architecture, or worker processes.`\n}; ","import React, { useState, useMemo } from 'react';\nimport { appData } from '../../config';\nimport './AllTopics.css';\n\nconst AllTopics = ({ onTopicSelect, onSubtopicSelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // Process topics to add missing properties\n  const processedTopics = useMemo(() => {\n    return appData.topics.map(topic => {\n      // Generate description from subtopics\n      const description = topic.subtopics.length > 0 \n        ? `Explore ${topic.subtopics.length} subtopics covering ${topic.title.toLowerCase()}`\n        : `Learn about ${topic.title.toLowerCase()}`;\n      \n      // Get the most common category from subtopics, or use 'General'\n      const categories = topic.subtopics\n        .map(subtopic => subtopic.category)\n        .filter(cat => cat);\n      \n      const categoryCount = categories.reduce((acc, cat) => {\n        acc[cat] = (acc[cat] || 0) + 1;\n        return acc;\n      }, {});\n      \n      const mostCommonCategory = Object.keys(categoryCount).length > 0\n        ? Object.keys(categoryCount).reduce((a, b) => categoryCount[a] > categoryCount[b] ? a : b)\n        : 'General';\n\n      return {\n        ...topic,\n        description,\n        category: mostCommonCategory\n      };\n    });\n  }, []);\n\n  // Get unique categories from processed topics\n  const categories = useMemo(() => {\n    const cats = ['all', ...new Set(processedTopics.map(topic => topic.category))];\n    return cats;\n  }, [processedTopics]);\n\n  // Filter topics based on search and category\n  const filteredTopics = useMemo(() => {\n    return processedTopics.filter(topic => {\n      const matchesSearch = searchTerm === '' || \n        topic.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        topic.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        topic.subtopics.some(subtopic => \n          subtopic.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (subtopic.category && subtopic.category.toLowerCase().includes(searchTerm.toLowerCase()))\n        );\n\n      const matchesCategory = selectedCategory === 'all' || \n        topic.category === selectedCategory;\n\n      return matchesSearch && matchesCategory;\n    });\n  }, [processedTopics, searchTerm, selectedCategory]);\n\n  const handleTopicClick = (topicId) => {\n    onTopicSelect(topicId);\n  };\n\n  const handleSubtopicClick = (topicId, subtopicId) => {\n    onTopicSelect(topicId);\n    onSubtopicSelect(subtopicId);\n  };\n\n  const totalSubtopics = appData.topics.reduce((total, topic) => total + topic.subtopics.length, 0);\n\n  return (\n    <div className=\"all-topics\">\n      <div className=\"all-topics-container\">\n        {/* Header Section */}\n        <div className=\"all-topics-header\">\n          <h1 className=\"all-topics-title\">All Topics</h1>\n          <p className=\"all-topics-subtitle\">\n            Explore our comprehensive collection of technical interview topics\n          </p>\n        </div>\n\n        {/* Stats Section */}\n        <div className=\"topics-stats\">\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{appData.topics.length}</div>\n            <div className=\"stat-label\">Topics</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{totalSubtopics}</div>\n            <div className=\"stat-label\">Subtopics</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-number\">{filteredTopics.length}</div>\n            <div className=\"stat-label\">Showing</div>\n          </div>\n        </div>\n\n        {/* Search and Filter Section */}\n        <div className=\"topics-controls\">\n          <div className=\"search-container\">\n            <div className=\"search-input-wrapper\">\n              <svg className=\"search-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                <path d=\"m21 21-4.35-4.35\"></path>\n              </svg>\n              <input\n                type=\"text\"\n                placeholder=\"Search topics, subtopics, or keywords...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n              />\n              {searchTerm && (\n                <button\n                  className=\"search-clear\"\n                  onClick={() => setSearchTerm('')}\n                  aria-label=\"Clear search\"\n                >\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                  </svg>\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"filter-container\">\n            <select\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className=\"category-filter\"\n            >\n              {categories.map(category => (\n                <option key={category} value={category}>\n                  {category === 'all' ? 'All Categories' : category}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Results Summary */}\n        {(searchTerm || selectedCategory !== 'all') && (\n          <div className=\"search-results-summary\">\n            <p>\n              Found <strong>{filteredTopics.length}</strong> topic{filteredTopics.length !== 1 ? 's' : ''} \n              {searchTerm && ` matching \"${searchTerm}\"`}\n              {selectedCategory !== 'all' && ` in ${selectedCategory}`}\n            </p>\n          </div>\n        )}\n\n        {/* Topics Grid */}\n        <div className=\"topics-grid\">\n          {filteredTopics.length > 0 ? (\n            filteredTopics.map(topic => (\n              <div key={topic.id} className=\"topic-card\">\n                <div className=\"topic-card-header\">\n                  <h3 className=\"topic-title\">{topic.title}</h3>\n                  <div className=\"topic-meta\">\n                    <span className=\"topic-category\">{topic.category}</span>\n                    <span className=\"topic-count\">{topic.subtopics.length} subtopics</span>\n                  </div>\n                </div>\n                \n                <p className=\"topic-description\">{topic.description}</p>\n\n                <div className=\"topic-subtopics\">\n                  <h4>Subtopics:</h4>\n                  <div className=\"subtopics-list\">\n                    {topic.subtopics.slice(0, 5).map(subtopic => (\n                      <button\n                        key={subtopic.id}\n                        className=\"subtopic-tag\"\n                        onClick={() => handleSubtopicClick(topic.id, subtopic.id)}\n                      >\n                        {subtopic.title}\n                      </button>\n                    ))}\n                    {topic.subtopics.length > 5 && (\n                      <span className=\"more-subtopics\">\n                        +{topic.subtopics.length - 5} more\n                      </span>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"topic-actions\">\n                  <button\n                    className=\"btn-primary\"\n                    onClick={() => handleTopicClick(topic.id)}\n                  >\n                    Explore Topic\n                  </button>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-results\">\n              <div className=\"no-results-icon\">\n                <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n                  <path d=\"m21 21-4.35-4.35\"></path>\n                </svg>\n              </div>\n              <h3>No topics found</h3>\n              <p>Try adjusting your search terms or filters</p>\n              <button\n                className=\"btn-secondary\"\n                onClick={() => {\n                  setSearchTerm('');\n                  setSelectedCategory('all');\n                }}\n              >\n                Clear Filters\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AllTopics; ","/**\n * Application Constants\n * Centralized configuration values and magic numbers\n */\n\n// Responsive breakpoints\nexport const BREAKPOINTS = {\n  MOBILE: 768,\n  TABLET: 1024,\n  DESKTOP: 1200\n};\n\n// Local storage keys\nexport const STORAGE_KEYS = {\n  THEME: 'theme',\n  SIDEBAR_COLLAPSED: 'sidebarCollapsed'\n};\n\n// Theme values\nexport const THEMES = {\n  LIGHT: 'light',\n  DARK: 'dark'\n};\n\n// Route paths\nexport const ROUTES = {\n  HOME: '/',\n  ABOUT: '/about',\n  TOPICS: '/topics',\n  TOPIC: '/topic/:topicId/:subtopicId?'\n};\n\n// Application metadata\nexport const APP_CONFIG = {\n  NAME: 'InterviewOS',\n  DESCRIPTION: 'Your comprehensive platform for technical interview preparation',\n  VERSION: '1.0.0'\n}; ","import { BrowserRouter, HashRouter } from 'react-router-dom';\n\n/**\n * Router Configuration\n * Determines which router to use based on environment\n */\n\n// Use HashRouter for GitHub Pages deployment, BrowserRouter for local development\nexport const Router = process.env.NODE_ENV === 'production' ? HashRouter : BrowserRouter; ","import React from 'react';\nimport { Sidebar, ContentPanel } from '../components';\nimport { appData } from '../config';\nimport { APP_CONFIG, getTotalSubtopicsCount } from '../utils';\n\n/**\n * Home Route Component\n * Displays the welcome page with application overview\n */\nconst HomeRoute = ({\n  isMobile,\n  isSidebarCollapsed,\n  isMobileMenuOpen,\n  onTopicSelect,\n  onSubtopicSelect,\n  onMobileMenuClose,\n  onToggleCollapse\n}) => {\n  const getWelcomeContent = () => {\n    return {\n      title: `Welcome to ${APP_CONFIG.NAME}`,\n      content: `\n        <div class=\"welcome-content\">\n          <div class=\"welcome-hero\">\n            <h1>Welcome to ${APP_CONFIG.NAME}</h1>\n            <p class=\"hero-subtitle\">${APP_CONFIG.DESCRIPTION}</p>\n          </div>\n          \n          <div class=\"features-grid\">\n            <div class=\"feature-card\">\n              <div class=\"feature-icon\">\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n                  <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\n                </svg>\n              </div>\n              <h3>Structured Learning</h3>\n              <p>Organized topics covering all major technical domains</p>\n            </div>\n            <div class=\"feature-card\">\n              <div class=\"feature-icon\">\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <polyline points=\"16 18 22 12 16 6\"></polyline>\n                  <polyline points=\"8 6 2 12 8 18\"></polyline>\n                </svg>\n              </div>\n              <h3>Code Examples</h3>\n              <p>Real-world examples with detailed explanations</p>\n            </div>\n            <div class=\"feature-card\">\n              <div class=\"feature-icon\">\n                <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\n                  <circle cx=\"12\" cy=\"12\" r=\"2\"></circle>\n                </svg>\n              </div>\n              <h3>Interview Ready</h3>\n              <p>Content designed specifically for technical interviews</p>\n            </div>\n          </div>\n          \n          <div class=\"getting-started\">\n            <h2>Getting Started</h2>\n            <p>Select a topic from the ${isMobile ? 'menu' : 'sidebar'} to begin exploring technical concepts and interview questions.</p>\n            ${!isMobile ? `\n            <div class=\"desktop-tip\">\n              <div class=\"tip-icon\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n                  <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line>\n                  <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line>\n                </svg>\n              </div>\n              <p><strong>Desktop Tip:</strong> Use the toggle button to collapse/expand the sidebar for more reading space. The sidebar is ${isSidebarCollapsed ? 'currently collapsed' : 'currently expanded'}.</p>\n            </div>\n          ` : ''}\n          \n          <div class=\"stats-section\">\n            <div class=\"stat-item\">\n              <div class=\"stat-number\">${appData.topics.length}</div>\n              <div class=\"stat-label\">Topics</div>\n            </div>\n            <div class=\"stat-item\">\n              <div class=\"stat-number\">${getTotalSubtopicsCount(appData.topics)}</div>\n              <div class=\"stat-label\">Subtopics</div>\n            </div>\n            <div class=\"stat-item\">\n              <div class=\"stat-number\">100%</div>\n              <div class=\"stat-label\">Free</div>\n            </div>\n          </div>\n        </div>\n      `\n    };\n  };\n\n  return isMobile ? (\n    // Mobile layout\n    <div className=\"mobile-layout\">\n      <Sidebar\n        topics={appData.topics}\n        selectedTopic={null}\n        selectedSubtopic={null}\n        onTopicSelect={onTopicSelect}\n        onSubtopicSelect={onSubtopicSelect}\n        isMobile={isMobile}\n        isMobileMenuOpen={isMobileMenuOpen}\n        onMobileMenuClose={onMobileMenuClose}\n      />\n      <div className=\"mobile-content\">\n        <ContentPanel content={getWelcomeContent()} />\n      </div>\n    </div>\n  ) : (\n    // Desktop layout with collapsible sidebar\n    <div className=\"desktop-layout\">\n      <div className={`sidebar-container ${isSidebarCollapsed ? 'collapsed' : ''}`}>\n        <Sidebar\n          topics={appData.topics}\n          selectedTopic={null}\n          selectedSubtopic={null}\n          onTopicSelect={onTopicSelect}\n          onSubtopicSelect={onSubtopicSelect}\n          isMobile={isMobile}\n          isMobileMenuOpen={isMobileMenuOpen}\n          onMobileMenuClose={onMobileMenuClose}\n          isCollapsed={isSidebarCollapsed}\n          onToggleCollapse={onToggleCollapse}\n        />\n      </div>\n      <div className=\"content-container-wrapper\">\n        <ContentPanel content={getWelcomeContent()} />\n      </div>\n    </div>\n  );\n};\n\nexport default HomeRoute; ","import { BREAKPOINTS } from './constants';\n\n/**\n * Utility Helper Functions\n * Common utility functions used across the application\n */\n\n/**\n * Check if current viewport is mobile\n * @returns {boolean} True if mobile viewport\n */\nexport const isMobileViewport = () => {\n  return window.innerWidth <= BREAKPOINTS.MOBILE;\n};\n\n/**\n * Get topic initial for collapsed sidebar display\n * @param {string} title - Topic title\n * @returns {string} Initial character(s) for the topic\n */\nexport const getTopicInitial = (title) => {\n  if (title === 'JavaScript') return 'JS';\n  if (title === 'React') return 'R';\n  if (title === 'Algorithms & Data Structures') return 'A';\n  if (title === 'System Design') return 'SD';\n  return title.charAt(0);\n};\n\n/**\n * Calculate total number of subtopics across all topics\n * @param {Array} topics - Array of topic objects\n * @returns {number} Total subtopic count\n */\nexport const getTotalSubtopicsCount = (topics) => {\n  return topics.reduce((total, topic) => total + topic.subtopics.length, 0);\n}; ","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Sidebar, ContentPanel } from '../components';\nimport { appData } from '../config';\n\n/**\n * Topic Route Component\n * Displays topic and subtopic content based on URL parameters\n */\nconst TopicRoute = ({\n  isMobile,\n  isSidebarCollapsed,\n  isMobileMenuOpen,\n  onTopicSelect,\n  onSubtopicSelect,\n  onMobileMenuClose,\n  onToggleCollapse\n}) => {\n  const { topicId, subtopicId } = useParams();\n\n  const getSelectedContent = () => {\n    if (!topicId) {\n      return {\n        title: 'Topic Not Found',\n        content: '<div class=\"error-message\">The requested topic could not be found.</div>'\n      };\n    }\n\n    const selectedTopic = appData.topics.find(topic => topic.id === topicId);\n    if (!selectedTopic) {\n      return {\n        title: 'Topic Not Found',\n        content: '<div class=\"error-message\">The requested topic could not be found.</div>'\n      };\n    }\n\n    if (subtopicId) {\n      const selectedSubtopic = selectedTopic.subtopics.find(subtopic => subtopic.id === subtopicId);\n      if (!selectedSubtopic) {\n        return {\n          title: 'Subtopic Not Found',\n          content: '<div class=\"error-message\">The requested subtopic could not be found.</div>'\n        };\n      }\n      return {\n        title: selectedSubtopic.title,\n        content: selectedSubtopic.content\n      };\n    }\n\n    // If no subtopic is selected, show the first subtopic or topic overview\n    if (selectedTopic.subtopics.length > 0) {\n      return {\n        title: selectedTopic.subtopics[0].title,\n        content: selectedTopic.subtopics[0].content\n      };\n    }\n\n    return {\n      title: selectedTopic.title,\n      content: '<div class=\"topic-overview\">Select a subtopic to view its content.</div>'\n    };\n  };\n\n  return isMobile ? (\n    // Mobile layout\n    <div className=\"mobile-layout\">\n      <Sidebar\n        topics={appData.topics}\n        selectedTopic={topicId}\n        selectedSubtopic={subtopicId}\n        onTopicSelect={onTopicSelect}\n        onSubtopicSelect={onSubtopicSelect}\n        isMobile={isMobile}\n        isMobileMenuOpen={isMobileMenuOpen}\n        onMobileMenuClose={onMobileMenuClose}\n      />\n      <div className=\"mobile-content\">\n        <ContentPanel content={getSelectedContent()} />\n      </div>\n    </div>\n  ) : (\n    // Desktop layout with collapsible sidebar\n    <div className=\"desktop-layout\">\n      <div className={`sidebar-container ${isSidebarCollapsed ? 'collapsed' : ''}`}>\n        <Sidebar\n          topics={appData.topics}\n          selectedTopic={topicId}\n          selectedSubtopic={subtopicId}\n          onTopicSelect={onTopicSelect}\n          onSubtopicSelect={onSubtopicSelect}\n          isMobile={isMobile}\n          isMobileMenuOpen={isMobileMenuOpen}\n          onMobileMenuClose={onMobileMenuClose}\n          isCollapsed={isSidebarCollapsed}\n          onToggleCollapse={onToggleCollapse}\n        />\n      </div>\n      <div className=\"content-container-wrapper\">\n        <ContentPanel content={getSelectedContent()} />\n      </div>\n    </div>\n  );\n};\n\nexport default TopicRoute; ","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Header } from './components';\nimport { About, AllTopics } from './components';\nimport { HomeRoute, TopicRoute } from './routes';\nimport { useResponsive, useTheme, useSidebar, useNavigation } from './hooks';\nimport { Router } from './utils';\nimport './App.css';\n\n/**\n * Main App Component\n * Handles routing and global state management\n */\nfunction AppContent() {\n  // Custom hooks for state management\n  const { isMobile } = useResponsive();\n  const { isDarkMode, toggleTheme } = useTheme();\n  const { \n    isSidebarCollapsed, \n    isMobileMenuOpen, \n    toggleSidebar, \n    toggleMobileMenu, \n    closeMobileMenu \n  } = useSidebar();\n  \n  // Navigation handlers\n  const {\n    handleTopicSelect,\n    handleSubtopicSelect,\n    handleHomeClick,\n    handleAboutClick,\n    handleTopicsClick\n  } = useNavigation(closeMobileMenu);\n\n  // Common props for route components\n  const routeProps = {\n    isMobile,\n    isSidebarCollapsed,\n    isMobileMenuOpen,\n    onTopicSelect: handleTopicSelect,\n    onSubtopicSelect: handleSubtopicSelect,\n    onMobileMenuClose: closeMobileMenu,\n    onToggleCollapse: toggleSidebar\n  };\n\n  return (\n    <div className={`app ${isDarkMode ? 'dark-mode' : ''}`}>\n      <Header\n        onHomeClick={handleHomeClick}\n        onAboutClick={handleAboutClick}\n        onTopicsClick={handleTopicsClick}\n        onThemeToggle={toggleTheme}\n        onMobileMenuToggle={toggleMobileMenu}\n        isDarkMode={isDarkMode}\n        isMobile={isMobile}\n        isMobileMenuOpen={isMobileMenuOpen}\n        isSidebarCollapsed={isSidebarCollapsed}\n        onSidebarToggle={toggleSidebar}\n      />\n      \n      <main className=\"main-content\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={<HomeRoute {...routeProps} />} \n          />\n          <Route \n            path=\"/topic/:topicId/:subtopicId?\" \n            element={<TopicRoute {...routeProps} />} \n          />\n          <Route \n            path=\"/about\" \n            element={<About />} \n          />\n          <Route \n            path=\"/topics\" \n            element={<AllTopics />} \n          />\n        </Routes>\n      </main>\n    </div>\n  );\n}\n\n/**\n * App Component with Router\n * Wraps the main app content with the appropriate router\n */\nfunction App() {\n  return (\n    <Router>\n      <AppContent />\n    </Router>\n  );\n}\n\nexport default App; ","import { useState, useEffect } from 'react';\nimport { BREAKPOINTS } from '../utils/constants';\n\n/**\n * Custom hook for responsive behavior\n * Handles mobile detection and window resize events\n */\nexport const useResponsive = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Check if device is mobile\n  const checkMobile = () => {\n    return window.innerWidth <= BREAKPOINTS.MOBILE;\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(checkMobile());\n    };\n\n    // Set initial state\n    setIsMobile(checkMobile());\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return { isMobile };\n}; ","import { useState, useEffect } from 'react';\nimport { STORAGE_KEYS, THEMES } from '../utils/constants';\n\n/**\n * Custom hook for theme management\n * Handles dark/light mode toggle and persistence\n */\nexport const useTheme = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Load theme preference\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(STORAGE_KEYS.THEME);\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === THEMES.DARK);\n    }\n  }, []);\n\n  // Save theme preference and apply to document\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.THEME, isDarkMode ? THEMES.DARK : THEMES.LIGHT);\n    document.documentElement.setAttribute('data-theme', isDarkMode ? THEMES.DARK : THEMES.LIGHT);\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return { \n    isDarkMode, \n    toggleTheme \n  };\n}; ","import { useState, useEffect } from 'react';\nimport { STORAGE_KEYS } from '../utils/constants';\n\n/**\n * Custom hook for sidebar state management\n * Handles sidebar collapse/expand and mobile menu state\n */\nexport const useSidebar = () => {\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // Load sidebar state from localStorage\n  useEffect(() => {\n    const savedSidebarState = localStorage.getItem(STORAGE_KEYS.SIDEBAR_COLLAPSED);\n    if (savedSidebarState !== null) {\n      setIsSidebarCollapsed(savedSidebarState === 'true');\n    }\n  }, []);\n\n  // Save sidebar state to localStorage\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.SIDEBAR_COLLAPSED, isSidebarCollapsed.toString());\n  }, [isSidebarCollapsed]);\n\n  const toggleSidebar = () => {\n    setIsSidebarCollapsed(!isSidebarCollapsed);\n  };\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  const closeMobileMenu = () => {\n    setIsMobileMenuOpen(false);\n  };\n\n  return {\n    isSidebarCollapsed,\n    isMobileMenuOpen,\n    toggleSidebar,\n    toggleMobileMenu,\n    closeMobileMenu\n  };\n}; ","import { useNavigate } from 'react-router-dom';\nimport { appData } from '../config';\n\n/**\n * Custom hook for navigation logic\n * Handles topic and subtopic navigation with mobile menu closing\n */\nexport const useNavigation = (closeMobileMenu) => {\n  const navigate = useNavigate();\n\n  const handleTopicSelect = (topicId) => {\n    if (topicId) {\n      navigate(`/topic/${topicId}`);\n    } else {\n      // If topicId is null (deselecting), go back to home\n      navigate('/');\n    }\n  };\n\n  const handleSubtopicSelect = (subtopicId) => {\n    // Find the topic that contains this subtopic\n    const parentTopic = appData.topics.find(topic => \n      topic.subtopics.some(subtopic => subtopic.id === subtopicId)\n    );\n    \n    if (parentTopic) {\n      navigate(`/topic/${parentTopic.id}/${subtopicId}`);\n    }\n  };\n\n  const handleHomeClick = () => {\n    navigate('/');\n    closeMobileMenu();\n  };\n\n  const handleAboutClick = () => {\n    navigate('/about');\n    closeMobileMenu();\n  };\n\n  const handleTopicsClick = () => {\n    navigate('/topics');\n    closeMobileMenu();\n  };\n\n  return {\n    handleTopicSelect,\n    handleSubtopicSelect,\n    handleHomeClick,\n    handleAboutClick,\n    handleTopicsClick\n  };\n}; ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n); "],"names":["module","exports","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","arguments","length","children","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","String","keys","join","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","map","forEach","apply","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","pop","sortIndex","id","performance","now","unstable_now","Date","setTimeout","clearTimeout","setImmediate","callback","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","console","error","Math","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","NullObject","create","startIndex","str","index","max","code","charCodeAt","endIndex","min","decode","indexOf","decodeURIComponent","createRoot","hydrateRoot","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","split","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","includes","name","Pa","tag","Qa","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","of","has","pf","qf","rf","random","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useMutableSource","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","Fi","shouldComponentUpdate","Gi","contextType","state","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","unstable_strictMode","findDOMNode","flushSync","hydrate","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","_typeof","o","toPropertyKey","i","toPrimitive","TypeError","Number","_defineProperty","writable","ownKeys","getOwnPropertySymbols","filter","_objectSpread2","getOwnPropertyDescriptors","defineProperties","propertyIsEnumerable","PopStateEventType","createHashHistory","getUrlBasedHistory","window2","globalHistory","pathname","hash","parsePath","startsWith","createLocation","usr","to","querySelector","href2","getAttribute","hashIndex","createPath","warning","invariant","cond","warn","getHistoryState","idx","_objectSpread","_ref","path","parsedPath","searchIndex","getLocation","createHref2","validateLocation","v5Compat","history","getIndex","handlePop","nextIndex","delta","createURL","createBrowserURLImpl","replaceState","listen","fn","createHref","encodeLocation","historyState","pushState","DOMException","go","isAbsolute","origin","URL","matchRoutes","routes","locationArg","matchRoutesImpl","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","compilePath","captureGroups","memo2","_ref2","paramName","splatValue","regexpSource","_","RegExp","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","ViewTransitionContext","isTransitioning","FetchersContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React2","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","useCurrentRouteId","activeRef","navigate","async","fromRouteId","useNavigateStable","dataRouterContext","routePathnamesJson","parse","relative","useNavigateUnstable","useParams","routeMatch","useResolvedPath","useRoutesImpl","dataRouterState","future","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","useRouteError","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","_ref1","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errors","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","matches2","getChildren","getDataRouterConsoleError","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","_state$errors","routeId","alreadyWarned","React3","_ref12","Route","_props","Router","_ref15","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref16","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","defaultMethod","defaultEncType","isHtmlElement","object","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","method","formData","attr","FormData","isButtonElement","isInputElement","isFormDataSubmitterSupported","prefix","append","invariant2","loadRouteModule","routeModulesCache","routeModule","import","__reactRouterContext","isSpaMode","reload","isPageLinkDescriptor","page","isHtmlLinkDescriptor","rel","imageSrcSet","imageSizes","getNewMatchesForLinks","nextMatches","currentMatches","manifest","isNew","matchPathChanged","_currentMatches$index","manifestRoute","hasLoader","_currentMatches$","routeChoice","currentUrl","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","dedupeLinkDescriptors","descriptors","preloads","preloadsSet","deduped","descriptor","as","obj","sorted","sortKeys","createHtml","html","getOwnPropertyNames","globalThis","NO_BODY_STATUS_CODES","singleFetchUrl","reqUrl","React5","RemixRootDefaultErrorBoundary","_ref21","isOutsideRemixApp","errorInstance","heyDeveloper","BoundaryShell","title","fontSize","errorString","background","_ref22","_routeModules$root","renderScripts","routeModules","useFrameworkContext","root","Layout","lang","charSet","content","fontFamily","Scripts","isFogOfWarEnabled","routeDiscovery","ssr","useDataRouterContext2","React9","useDataRouterStateContext","FrameworkContext","composeEventHandlers","theirHandler","ourHandler","getActiveMatches","isHydrated","errorIdx","PrefetchPageLinks","_ref28","dataLinkProps","_objectWithoutProperties","_excluded2","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","all","mod","links","getKeyedPrefetchLinks","_ref29","linkProps","_excluded3","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","_routeModules$m$route","m2","hasClientLoader","searchParams","moduleHrefs","_ref30","serverHandoffString","renderMeta","isStatic","routerMatches","enableFogOfWar","didRenderScripts","initialScripts","_manifest$hmr","contextScript","routeModulesScript","hmr","runtime","routeIndex","routeVarName","manifestEntry","clientMiddlewareModule","chunks","varName","chunk","_ref25","sri","_excluded","routeIds","Boolean","initialRoutes","acc","getPartialManifest","entry","array","integrity","crossOrigin","mergeRefs","_len3","_key3","isBrowser","__reactRouterVersion","ABSOLUTE_URL_REGEX2","Link","React10","_ref34","forwardedRef","absoluteHref","discover","prefetch","reloadDocument","replace2","preventScrollReset","viewTransition","_excluded5","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","disconnect","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","_ref35","ariaCurrentProp","className","classNameProp","styleProp","_excluded6","routerState","opts","vtContext","useDataRouterContext3","currentPath","currentLocation","nextPath","nextLocation","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Form","_ref36","fetcherKey","onSubmit","_excluded7","submit","useSubmit","formAction","URLSearchParams","indexValues","getAll","qs","useFormAction","formMethod","submitter","submitMethod","getDataRouterConsoleError2","fetcherId","getUniqueFetcherId","currentRouteId","fetch","formEncType","onHomeClick","onAboutClick","onTopicsClick","onThemeToggle","onMobileMenuToggle","isDarkMode","isMobile","isMobileMenuOpen","isSidebarCollapsed","onSidebarToggle","_jsxs","_Fragment","_jsx","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","cx","cy","x1","y1","x2","y2","points","topics","selectedTopic","selectedSubtopic","onTopicSelect","onSubtopicSelect","onMobileMenuClose","isCollapsed","onToggleCollapse","hoveredTopic","setHoveredTopic","handleTopicClick","topicId","handleSubtopicClick","subtopicId","handleOverlayClick","handleClickOutside","closest","topic","subtopics","subtopic","About","getFullYear","hashing","appData","category","localeCompare","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","processedTopics","description","categoryCount","cat","mostCommonCategory","categories","filteredTopics","matchesSearch","matchesCategory","totalSubtopics","total","placeholder","onChange","BREAKPOINTS","STORAGE_KEYS","THEMES","APP_CONFIG","_ref32","historyRef","setStateImpl","newState","getWelcomeContent","Sidebar","ContentPanel","getSelectedContent","find","AppContent","useResponsive","setIsMobile","checkMobile","innerWidth","handleResize","toggleTheme","useTheme","setIsDarkMode","savedTheme","localStorage","getItem","setItem","toggleSidebar","toggleMobileMenu","closeMobileMenu","useSidebar","setIsSidebarCollapsed","setIsMobileMenuOpen","savedSidebarState","handleTopicSelect","handleSubtopicSelect","handleHomeClick","handleAboutClick","handleTopicsClick","parentTopic","useNavigation","routeProps","Header","HomeRoute","TopicRoute","AllTopics","ReactDOM","getElementById","App"],"sourceRoot":""}